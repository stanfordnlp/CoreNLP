// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConcatVector.proto

package edu.stanford.nlp.loglinear.model.proto;

public final class ConcatVectorProto {
  private ConcatVectorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface ConcatVectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> 
        getComponentList();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index);
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    int getComponentCount();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector}
   */
  public static final class ConcatVector extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
      ConcatVectorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use ConcatVector.newBuilder() to construct.
    private ConcatVector(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private ConcatVector() {
      component_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new ConcatVector();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Builder.class);
    }

    public interface ComponentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bool sparse = 1;</code>
       * @return Whether the sparse field is set.
       */
      boolean hasSparse();
      /**
       * <code>required bool sparse = 1;</code>
       * @return The sparse.
       */
      boolean getSparse();

      /**
       * <code>repeated double data = 2;</code>
       * @return A list containing the data.
       */
      java.util.List<java.lang.Double> getDataList();
      /**
       * <code>repeated double data = 2;</code>
       * @return The count of data.
       */
      int getDataCount();
      /**
       * <code>repeated double data = 2;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      double getData(int index);
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component}
     */
    public static final class Component extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
        ComponentOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Component.newBuilder() to construct.
      private Component(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Component() {
        data_ = emptyDoubleList();
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new Component();
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder.class);
      }

      private int bitField0_;
      public static final int SPARSE_FIELD_NUMBER = 1;
      private boolean sparse_;
      /**
       * <code>required bool sparse = 1;</code>
       * @return Whether the sparse field is set.
       */
      @java.lang.Override
      public boolean hasSparse() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>required bool sparse = 1;</code>
       * @return The sparse.
       */
      @java.lang.Override
      public boolean getSparse() {
        return sparse_;
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private com.google.protobuf.Internal.DoubleList data_;
      /**
       * <code>repeated double data = 2;</code>
       * @return A list containing the data.
       */
      @java.lang.Override
      public java.util.List<java.lang.Double>
          getDataList() {
        return data_;
      }
      /**
       * <code>repeated double data = 2;</code>
       * @return The count of data.
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated double data = 2;</code>
       * @param index The index of the element to return.
       * @return The data at the given index.
       */
      public double getData(int index) {
        return data_.getDouble(index);
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSparse()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          output.writeBool(1, sparse_);
        }
        for (int i = 0; i < data_.size(); i++) {
          output.writeDouble(2, data_.getDouble(i));
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, sparse_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDataList().size();
          size += dataSize;
          size += 1 * getDataList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component)) {
          return super.equals(obj);
        }
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component other = (edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component) obj;

        if (hasSparse() != other.hasSparse()) return false;
        if (hasSparse()) {
          if (getSparse()
              != other.getSparse()) return false;
        }
        if (!getDataList()
            .equals(other.getDataList())) return false;
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasSparse()) {
          hash = (37 * hash) + SPARSE_FIELD_NUMBER;
          hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
              getSparse());
        }
        if (getDataCount() > 0) {
          hash = (37 * hash) + DATA_FIELD_NUMBER;
          hash = (53 * hash) + getDataList().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder.class);
        }

        // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sparse_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = emptyDoubleList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
        }

        @java.lang.Override
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getDefaultInstanceForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance();
        }

        @java.lang.Override
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component build() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component buildPartial() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.sparse_ = sparse_;
            to_bitField0_ |= 0x00000001;
          }
          if (((bitField0_ & 0x00000002) != 0)) {
            data_.makeImmutable();
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component) {
            return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component other) {
          if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance()) return this;
          if (other.hasSparse()) {
            setSparse(other.getSparse());
          }
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          if (!hasSparse()) {
            return false;
          }
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  sparse_ = input.readBool();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 8
                case 17: {
                  double v = input.readDouble();
                  ensureDataIsMutable();
                  data_.addDouble(v);
                  break;
                } // case 17
                case 18: {
                  int length = input.readRawVarint32();
                  int limit = input.pushLimit(length);
                  ensureDataIsMutable();
                  while (input.getBytesUntilLimit() > 0) {
                    data_.addDouble(input.readDouble());
                  }
                  input.popLimit(limit);
                  break;
                } // case 18
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private boolean sparse_ ;
        /**
         * <code>required bool sparse = 1;</code>
         * @return Whether the sparse field is set.
         */
        @java.lang.Override
        public boolean hasSparse() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>required bool sparse = 1;</code>
         * @return The sparse.
         */
        @java.lang.Override
        public boolean getSparse() {
          return sparse_;
        }
        /**
         * <code>required bool sparse = 1;</code>
         * @param value The sparse to set.
         * @return This builder for chaining.
         */
        public Builder setSparse(boolean value) {
          bitField0_ |= 0x00000001;
          sparse_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool sparse = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearSparse() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sparse_ = false;
          onChanged();
          return this;
        }

        private com.google.protobuf.Internal.DoubleList data_ = emptyDoubleList();
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000002) != 0)) {
            data_ = mutableCopy(data_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double data = 2;</code>
         * @return A list containing the data.
         */
        public java.util.List<java.lang.Double>
            getDataList() {
          return ((bitField0_ & 0x00000002) != 0) ?
                   java.util.Collections.unmodifiableList(data_) : data_;
        }
        /**
         * <code>repeated double data = 2;</code>
         * @return The count of data.
         */
        public int getDataCount() {
          return data_.size();
        }
        /**
         * <code>repeated double data = 2;</code>
         * @param index The index of the element to return.
         * @return The data at the given index.
         */
        public double getData(int index) {
          return data_.getDouble(index);
        }
        /**
         * <code>repeated double data = 2;</code>
         * @param index The index to set the value at.
         * @param value The data to set.
         * @return This builder for chaining.
         */
        public Builder setData(
            int index, double value) {
          ensureDataIsMutable();
          data_.setDouble(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         * @param value The data to add.
         * @return This builder for chaining.
         */
        public Builder addData(double value) {
          ensureDataIsMutable();
          data_.addDouble(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         * @param values The data to add.
         * @return This builder for chaining.
         */
        public Builder addAllData(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         * @return This builder for chaining.
         */
        public Builder clearData() {
          data_ = emptyDoubleList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
      }

      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
      private static final edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component();
      }

      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      @java.lang.Deprecated public static final com.google.protobuf.Parser<Component>
          PARSER = new com.google.protobuf.AbstractParser<Component>() {
        @java.lang.Override
        public Component parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<Component> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Component> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int COMPONENT_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_;
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    @java.lang.Override
    public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
      return component_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    @java.lang.Override
    public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList() {
      return component_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    @java.lang.Override
    public int getComponentCount() {
      return component_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    @java.lang.Override
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
      return component_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    @java.lang.Override
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index) {
      return component_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getComponentCount(); i++) {
        if (!getComponent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < component_.size(); i++) {
        output.writeMessage(1, component_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < component_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, component_.get(i));
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector)) {
        return super.equals(obj);
      }
      edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector other = (edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector) obj;

      if (!getComponentList()
          .equals(other.getComponentList())) return false;
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getComponentCount() > 0) {
        hash = (37 * hash) + COMPONENT_FIELD_NUMBER;
        hash = (53 * hash) + getComponentList().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Builder.class);
      }

      // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.newBuilder()
      private Builder() {

      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);

      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
        } else {
          component_ = null;
          componentBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000001);
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
      }

      @java.lang.Override
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector getDefaultInstanceForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance();
      }

      @java.lang.Override
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector build() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector buildPartial() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector(this);
        int from_bitField0_ = bitField0_;
        if (componentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) != 0)) {
            component_ = java.util.Collections.unmodifiableList(component_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.component_ = component_;
        } else {
          result.component_ = componentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector) {
          return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector other) {
        if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance()) return this;
        if (componentBuilder_ == null) {
          if (!other.component_.isEmpty()) {
            if (component_.isEmpty()) {
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComponentIsMutable();
              component_.addAll(other.component_);
            }
            onChanged();
          }
        } else {
          if (!other.component_.isEmpty()) {
            if (componentBuilder_.isEmpty()) {
              componentBuilder_.dispose();
              componentBuilder_ = null;
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
              componentBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getComponentFieldBuilder() : null;
            } else {
              componentBuilder_.addAllMessages(other.component_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        for (int i = 0; i < getComponentCount(); i++) {
          if (!getComponent(i).isInitialized()) {
            return false;
          }
        }
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component m =
                    input.readMessage(
                        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.PARSER,
                        extensionRegistry);
                if (componentBuilder_ == null) {
                  ensureComponentIsMutable();
                  component_.add(m);
                } else {
                  componentBuilder_.addMessage(m);
                }
                break;
              } // case 10
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_ =
        java.util.Collections.emptyList();
      private void ensureComponentIsMutable() {
        if (!((bitField0_ & 0x00000001) != 0)) {
          component_ = new java.util.ArrayList<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component>(component_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> componentBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
        if (componentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(component_);
        } else {
          return componentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public int getComponentCount() {
        if (componentBuilder_ == null) {
          return component_.size();
        } else {
          return componentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);
        } else {
          return componentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.set(index, value);
          onChanged();
        } else {
          componentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(value);
          onChanged();
        } else {
          componentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(index, value);
          onChanged();
        } else {
          componentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addAllComponent(
          java.lang.Iterable<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> values) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, component_);
          onChanged();
        } else {
          componentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder clearComponent() {
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          componentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder removeComponent(int index) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.remove(index);
          onChanged();
        } else {
          componentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder getComponentBuilder(
          int index) {
        return getComponentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
          int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);  } else {
          return componentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
           getComponentOrBuilderList() {
        if (componentBuilder_ != null) {
          return componentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(component_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder() {
        return getComponentFieldBuilder().addBuilder(
            edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder(
          int index) {
        return getComponentFieldBuilder().addBuilder(
            index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder> 
           getComponentBuilderList() {
        return getComponentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
          getComponentFieldBuilder() {
        if (componentBuilder_ == null) {
          componentBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder>(
                  component_,
                  ((bitField0_ & 0x00000001) != 0),
                  getParentForChildren(),
                  isClean());
          component_ = null;
        }
        return componentBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
    private static final edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector();
    }

    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    @java.lang.Deprecated public static final com.google.protobuf.Parser<ConcatVector>
        PARSER = new com.google.protobuf.AbstractParser<ConcatVector>() {
      @java.lang.Override
      public ConcatVector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<ConcatVector> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<ConcatVector> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ConcatVector.proto\022&edu.stanford.nlp.l" +
      "oglinear.model.proto\"\214\001\n\014ConcatVector\022Q\n" +
      "\tcomponent\030\001 \003(\0132>.edu.stanford.nlp.logl" +
      "inear.model.proto.ConcatVector.Component" +
      "\032)\n\tComponent\022\016\n\006sparse\030\001 \002(\010\022\014\n\004data\030\002 " +
      "\003(\001B;\n&edu.stanford.nlp.loglinear.model." +
      "protoB\021ConcatVectorProto"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor,
        new java.lang.String[] { "Component", });
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor =
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor.getNestedTypes().get(0);
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor,
        new java.lang.String[] { "Sparse", "Data", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
