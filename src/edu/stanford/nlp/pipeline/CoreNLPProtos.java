// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: CoreNLP.proto

package edu.stanford.nlp.pipeline;

public final class CoreNLPProtos {
  private CoreNLPProtos() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code edu.stanford.nlp.pipeline.Language}
   *
   * <pre>
   * An enumeration for the valid languages allowed in CoreNLP
   * </pre>
   */
  public enum Language
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>Unknown = 0;</code>
     */
    Unknown(0, 0),
    /**
     * <code>Any = 1;</code>
     */
    Any(1, 1),
    /**
     * <code>Arabic = 2;</code>
     */
    Arabic(2, 2),
    /**
     * <code>Chinese = 3;</code>
     */
    Chinese(3, 3),
    /**
     * <code>English = 4;</code>
     */
    English(4, 4),
    /**
     * <code>German = 5;</code>
     */
    German(5, 5),
    /**
     * <code>French = 6;</code>
     */
    French(6, 6),
    /**
     * <code>Hebrew = 7;</code>
     */
    Hebrew(7, 7),
    /**
     * <code>Spanish = 8;</code>
     */
    Spanish(8, 8),
    /**
     * <code>UniversalEnglish = 9;</code>
     */
    UniversalEnglish(9, 9),
    ;

    /**
     * <code>Unknown = 0;</code>
     */
    public static final int Unknown_VALUE = 0;
    /**
     * <code>Any = 1;</code>
     */
    public static final int Any_VALUE = 1;
    /**
     * <code>Arabic = 2;</code>
     */
    public static final int Arabic_VALUE = 2;
    /**
     * <code>Chinese = 3;</code>
     */
    public static final int Chinese_VALUE = 3;
    /**
     * <code>English = 4;</code>
     */
    public static final int English_VALUE = 4;
    /**
     * <code>German = 5;</code>
     */
    public static final int German_VALUE = 5;
    /**
     * <code>French = 6;</code>
     */
    public static final int French_VALUE = 6;
    /**
     * <code>Hebrew = 7;</code>
     */
    public static final int Hebrew_VALUE = 7;
    /**
     * <code>Spanish = 8;</code>
     */
    public static final int Spanish_VALUE = 8;
    /**
     * <code>UniversalEnglish = 9;</code>
     */
    public static final int UniversalEnglish_VALUE = 9;


    public final int getNumber() { return value; }

    public static Language valueOf(int value) {
      switch (value) {
        case 0: return Unknown;
        case 1: return Any;
        case 2: return Arabic;
        case 3: return Chinese;
        case 4: return English;
        case 5: return German;
        case 6: return French;
        case 7: return Hebrew;
        case 8: return Spanish;
        case 9: return UniversalEnglish;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Language>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Language>() {
            public Language findValueByNumber(int number) {
              return Language.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.getDescriptor().getEnumTypes().get(0);
    }

    private static final Language[] VALUES = values();

    public static Language valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Language(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:edu.stanford.nlp.pipeline.Language)
  }

  /**
   * Protobuf enum {@code edu.stanford.nlp.pipeline.Sentiment}
   *
   * <pre>
   * An enumeration of valid sentiment values for the sentiment classifier.
   * </pre>
   */
  public enum Sentiment
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>STRONG_NEGATIVE = 0;</code>
     */
    STRONG_NEGATIVE(0, 0),
    /**
     * <code>WEAK_NEGATIVE = 1;</code>
     */
    WEAK_NEGATIVE(1, 1),
    /**
     * <code>NEUTRAL = 2;</code>
     */
    NEUTRAL(2, 2),
    /**
     * <code>WEAK_POSITIVE = 3;</code>
     */
    WEAK_POSITIVE(3, 3),
    /**
     * <code>STRONG_POSITIVE = 4;</code>
     */
    STRONG_POSITIVE(4, 4),
    ;

    /**
     * <code>STRONG_NEGATIVE = 0;</code>
     */
    public static final int STRONG_NEGATIVE_VALUE = 0;
    /**
     * <code>WEAK_NEGATIVE = 1;</code>
     */
    public static final int WEAK_NEGATIVE_VALUE = 1;
    /**
     * <code>NEUTRAL = 2;</code>
     */
    public static final int NEUTRAL_VALUE = 2;
    /**
     * <code>WEAK_POSITIVE = 3;</code>
     */
    public static final int WEAK_POSITIVE_VALUE = 3;
    /**
     * <code>STRONG_POSITIVE = 4;</code>
     */
    public static final int STRONG_POSITIVE_VALUE = 4;


    public final int getNumber() { return value; }

    public static Sentiment valueOf(int value) {
      switch (value) {
        case 0: return STRONG_NEGATIVE;
        case 1: return WEAK_NEGATIVE;
        case 2: return NEUTRAL;
        case 3: return WEAK_POSITIVE;
        case 4: return STRONG_POSITIVE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<Sentiment>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<Sentiment>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<Sentiment>() {
            public Sentiment findValueByNumber(int number) {
              return Sentiment.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.getDescriptor().getEnumTypes().get(1);
    }

    private static final Sentiment[] VALUES = values();

    public static Sentiment valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private Sentiment(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:edu.stanford.nlp.pipeline.Sentiment)
  }

  /**
   * Protobuf enum {@code edu.stanford.nlp.pipeline.NaturalLogicRelation}
   *
   * <pre>
   * The seven informative Natural Logic relations
   * </pre>
   */
  public enum NaturalLogicRelation
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>EQUIVALENCE = 0;</code>
     */
    EQUIVALENCE(0, 0),
    /**
     * <code>FORWARD_ENTAILMENT = 1;</code>
     */
    FORWARD_ENTAILMENT(1, 1),
    /**
     * <code>REVERSE_ENTAILMENT = 2;</code>
     */
    REVERSE_ENTAILMENT(2, 2),
    /**
     * <code>NEGATION = 3;</code>
     */
    NEGATION(3, 3),
    /**
     * <code>ALTERNATION = 4;</code>
     */
    ALTERNATION(4, 4),
    /**
     * <code>COVER = 5;</code>
     */
    COVER(5, 5),
    /**
     * <code>INDEPENDENCE = 6;</code>
     */
    INDEPENDENCE(6, 6),
    ;

    /**
     * <code>EQUIVALENCE = 0;</code>
     */
    public static final int EQUIVALENCE_VALUE = 0;
    /**
     * <code>FORWARD_ENTAILMENT = 1;</code>
     */
    public static final int FORWARD_ENTAILMENT_VALUE = 1;
    /**
     * <code>REVERSE_ENTAILMENT = 2;</code>
     */
    public static final int REVERSE_ENTAILMENT_VALUE = 2;
    /**
     * <code>NEGATION = 3;</code>
     */
    public static final int NEGATION_VALUE = 3;
    /**
     * <code>ALTERNATION = 4;</code>
     */
    public static final int ALTERNATION_VALUE = 4;
    /**
     * <code>COVER = 5;</code>
     */
    public static final int COVER_VALUE = 5;
    /**
     * <code>INDEPENDENCE = 6;</code>
     */
    public static final int INDEPENDENCE_VALUE = 6;


    public final int getNumber() { return value; }

    public static NaturalLogicRelation valueOf(int value) {
      switch (value) {
        case 0: return EQUIVALENCE;
        case 1: return FORWARD_ENTAILMENT;
        case 2: return REVERSE_ENTAILMENT;
        case 3: return NEGATION;
        case 4: return ALTERNATION;
        case 5: return COVER;
        case 6: return INDEPENDENCE;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<NaturalLogicRelation>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<NaturalLogicRelation>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<NaturalLogicRelation>() {
            public NaturalLogicRelation findValueByNumber(int number) {
              return NaturalLogicRelation.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.getDescriptor().getEnumTypes().get(2);
    }

    private static final NaturalLogicRelation[] VALUES = values();

    public static NaturalLogicRelation valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private NaturalLogicRelation(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:edu.stanford.nlp.pipeline.NaturalLogicRelation)
  }

  public interface DocumentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Document)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Document> {

    /**
     * <code>required string text = 1;</code>
     */
    boolean hasText();
    /**
     * <code>required string text = 1;</code>
     */
    java.lang.String getText();
    /**
     * <code>required string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> 
        getSentenceList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence getSentence(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    int getSentenceCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder> 
        getSentenceOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder getSentenceOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> 
        getCorefChainList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain getCorefChain(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    int getCorefChainCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder> 
        getCorefChainOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder getCorefChainOrBuilder(
        int index);

    /**
     * <code>optional string docID = 4;</code>
     */
    boolean hasDocID();
    /**
     * <code>optional string docID = 4;</code>
     */
    java.lang.String getDocID();
    /**
     * <code>optional string docID = 4;</code>
     */
    com.google.protobuf.ByteString
        getDocIDBytes();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> 
        getSentencelessTokenList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Token getSentencelessToken(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    int getSentencelessTokenCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
        getSentencelessTokenOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getSentencelessTokenOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> 
        getQuoteList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Quote getQuote(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    int getQuoteCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder> 
        getQuoteOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder getQuoteOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Document}
   *
   * <pre>
   * A document; that is, the equivalent of an Annotation.
   * </pre>
   */
  public static final class Document extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Document> implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Document)
      DocumentOrBuilder {
    // Use Document.newBuilder() to construct.
    private Document(com.google.protobuf.GeneratedMessage.ExtendableBuilder<edu.stanford.nlp.pipeline.CoreNLPProtos.Document, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Document(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Document defaultInstance;
    public static Document getDefaultInstance() {
      return defaultInstance;
    }

    public Document getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Document(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              text_ = bs;
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                sentence_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence>();
                mutable_bitField0_ |= 0x00000002;
              }
              sentence_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.PARSER, extensionRegistry));
              break;
            }
            case 26: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                corefChain_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain>();
                mutable_bitField0_ |= 0x00000004;
              }
              corefChain_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.PARSER, extensionRegistry));
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              docID_ = bs;
              break;
            }
            case 42: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                sentencelessToken_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>();
                mutable_bitField0_ |= 0x00000010;
              }
              sentencelessToken_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Token.PARSER, extensionRegistry));
              break;
            }
            case 50: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                quote_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote>();
                mutable_bitField0_ |= 0x00000020;
              }
              quote_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          sentence_ = java.util.Collections.unmodifiableList(sentence_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          corefChain_ = java.util.Collections.unmodifiableList(corefChain_);
        }
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          sentencelessToken_ = java.util.Collections.unmodifiableList(sentencelessToken_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          quote_ = java.util.Collections.unmodifiableList(quote_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Document_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Document_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Document.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.class);
    }

    public static com.google.protobuf.Parser<Document> PARSER =
        new com.google.protobuf.AbstractParser<Document>() {
      public Document parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Document(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Document> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private java.lang.Object text_;
    /**
     * <code>required string text = 1;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENTENCE_FIELD_NUMBER = 2;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> sentence_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> getSentenceList() {
      return sentence_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder> 
        getSentenceOrBuilderList() {
      return sentence_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    public int getSentenceCount() {
      return sentence_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence getSentence(int index) {
      return sentence_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder getSentenceOrBuilder(
        int index) {
      return sentence_.get(index);
    }

    public static final int COREFCHAIN_FIELD_NUMBER = 3;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> corefChain_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> getCorefChainList() {
      return corefChain_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder> 
        getCorefChainOrBuilderList() {
      return corefChain_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    public int getCorefChainCount() {
      return corefChain_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain getCorefChain(int index) {
      return corefChain_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder getCorefChainOrBuilder(
        int index) {
      return corefChain_.get(index);
    }

    public static final int DOCID_FIELD_NUMBER = 4;
    private java.lang.Object docID_;
    /**
     * <code>optional string docID = 4;</code>
     */
    public boolean hasDocID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string docID = 4;</code>
     */
    public java.lang.String getDocID() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          docID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string docID = 4;</code>
     */
    public com.google.protobuf.ByteString
        getDocIDBytes() {
      java.lang.Object ref = docID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SENTENCELESSTOKEN_FIELD_NUMBER = 5;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> sentencelessToken_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> getSentencelessTokenList() {
      return sentencelessToken_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
        getSentencelessTokenOrBuilderList() {
      return sentencelessToken_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    public int getSentencelessTokenCount() {
      return sentencelessToken_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Token getSentencelessToken(int index) {
      return sentencelessToken_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
     *
     * <pre>
     **
     * A peculiar field, for the corner case when a Document is
     * serialized without any sentences. Otherwise
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getSentencelessTokenOrBuilder(
        int index) {
      return sentencelessToken_.get(index);
    }

    public static final int QUOTE_FIELD_NUMBER = 6;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> quote_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> getQuoteList() {
      return quote_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder> 
        getQuoteOrBuilderList() {
      return quote_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    public int getQuoteCount() {
      return quote_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote getQuote(int index) {
      return quote_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder getQuoteOrBuilder(
        int index) {
      return quote_.get(index);
    }

    private void initFields() {
      text_ = "";
      sentence_ = java.util.Collections.emptyList();
      corefChain_ = java.util.Collections.emptyList();
      docID_ = "";
      sentencelessToken_ = java.util.Collections.emptyList();
      quote_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasText()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getSentenceCount(); i++) {
        if (!getSentence(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getCorefChainCount(); i++) {
        if (!getCorefChain(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getSentencelessTokenCount(); i++) {
        if (!getSentencelessToken(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<edu.stanford.nlp.pipeline.CoreNLPProtos.Document>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTextBytes());
      }
      for (int i = 0; i < sentence_.size(); i++) {
        output.writeMessage(2, sentence_.get(i));
      }
      for (int i = 0; i < corefChain_.size(); i++) {
        output.writeMessage(3, corefChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(4, getDocIDBytes());
      }
      for (int i = 0; i < sentencelessToken_.size(); i++) {
        output.writeMessage(5, sentencelessToken_.get(i));
      }
      for (int i = 0; i < quote_.size(); i++) {
        output.writeMessage(6, quote_.get(i));
      }
      extensionWriter.writeUntil(256, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTextBytes());
      }
      for (int i = 0; i < sentence_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, sentence_.get(i));
      }
      for (int i = 0; i < corefChain_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(3, corefChain_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getDocIDBytes());
      }
      for (int i = 0; i < sentencelessToken_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(5, sentencelessToken_.get(i));
      }
      for (int i = 0; i < quote_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(6, quote_.get(i));
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Document parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Document prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Document}
     *
     * <pre>
     * A document; that is, the equivalent of an Annotation.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Document, Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Document)
        edu.stanford.nlp.pipeline.CoreNLPProtos.DocumentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Document_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Document_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Document.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Document.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Document.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getSentenceFieldBuilder();
          getCorefChainFieldBuilder();
          getSentencelessTokenFieldBuilder();
          getQuoteFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        if (sentenceBuilder_ == null) {
          sentence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          sentenceBuilder_.clear();
        }
        if (corefChainBuilder_ == null) {
          corefChain_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
        } else {
          corefChainBuilder_.clear();
        }
        docID_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        if (sentencelessTokenBuilder_ == null) {
          sentencelessToken_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
        } else {
          sentencelessTokenBuilder_.clear();
        }
        if (quoteBuilder_ == null) {
          quote_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          quoteBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Document_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Document getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Document.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Document build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Document result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Document buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Document result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Document(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.text_ = text_;
        if (sentenceBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            sentence_ = java.util.Collections.unmodifiableList(sentence_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.sentence_ = sentence_;
        } else {
          result.sentence_ = sentenceBuilder_.build();
        }
        if (corefChainBuilder_ == null) {
          if (((bitField0_ & 0x00000004) == 0x00000004)) {
            corefChain_ = java.util.Collections.unmodifiableList(corefChain_);
            bitField0_ = (bitField0_ & ~0x00000004);
          }
          result.corefChain_ = corefChain_;
        } else {
          result.corefChain_ = corefChainBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.docID_ = docID_;
        if (sentencelessTokenBuilder_ == null) {
          if (((bitField0_ & 0x00000010) == 0x00000010)) {
            sentencelessToken_ = java.util.Collections.unmodifiableList(sentencelessToken_);
            bitField0_ = (bitField0_ & ~0x00000010);
          }
          result.sentencelessToken_ = sentencelessToken_;
        } else {
          result.sentencelessToken_ = sentencelessTokenBuilder_.build();
        }
        if (quoteBuilder_ == null) {
          if (((bitField0_ & 0x00000020) == 0x00000020)) {
            quote_ = java.util.Collections.unmodifiableList(quote_);
            bitField0_ = (bitField0_ & ~0x00000020);
          }
          result.quote_ = quote_;
        } else {
          result.quote_ = quoteBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Document) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Document)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Document other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Document.getDefaultInstance()) return this;
        if (other.hasText()) {
          bitField0_ |= 0x00000001;
          text_ = other.text_;
          onChanged();
        }
        if (sentenceBuilder_ == null) {
          if (!other.sentence_.isEmpty()) {
            if (sentence_.isEmpty()) {
              sentence_ = other.sentence_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureSentenceIsMutable();
              sentence_.addAll(other.sentence_);
            }
            onChanged();
          }
        } else {
          if (!other.sentence_.isEmpty()) {
            if (sentenceBuilder_.isEmpty()) {
              sentenceBuilder_.dispose();
              sentenceBuilder_ = null;
              sentence_ = other.sentence_;
              bitField0_ = (bitField0_ & ~0x00000002);
              sentenceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSentenceFieldBuilder() : null;
            } else {
              sentenceBuilder_.addAllMessages(other.sentence_);
            }
          }
        }
        if (corefChainBuilder_ == null) {
          if (!other.corefChain_.isEmpty()) {
            if (corefChain_.isEmpty()) {
              corefChain_ = other.corefChain_;
              bitField0_ = (bitField0_ & ~0x00000004);
            } else {
              ensureCorefChainIsMutable();
              corefChain_.addAll(other.corefChain_);
            }
            onChanged();
          }
        } else {
          if (!other.corefChain_.isEmpty()) {
            if (corefChainBuilder_.isEmpty()) {
              corefChainBuilder_.dispose();
              corefChainBuilder_ = null;
              corefChain_ = other.corefChain_;
              bitField0_ = (bitField0_ & ~0x00000004);
              corefChainBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getCorefChainFieldBuilder() : null;
            } else {
              corefChainBuilder_.addAllMessages(other.corefChain_);
            }
          }
        }
        if (other.hasDocID()) {
          bitField0_ |= 0x00000008;
          docID_ = other.docID_;
          onChanged();
        }
        if (sentencelessTokenBuilder_ == null) {
          if (!other.sentencelessToken_.isEmpty()) {
            if (sentencelessToken_.isEmpty()) {
              sentencelessToken_ = other.sentencelessToken_;
              bitField0_ = (bitField0_ & ~0x00000010);
            } else {
              ensureSentencelessTokenIsMutable();
              sentencelessToken_.addAll(other.sentencelessToken_);
            }
            onChanged();
          }
        } else {
          if (!other.sentencelessToken_.isEmpty()) {
            if (sentencelessTokenBuilder_.isEmpty()) {
              sentencelessTokenBuilder_.dispose();
              sentencelessTokenBuilder_ = null;
              sentencelessToken_ = other.sentencelessToken_;
              bitField0_ = (bitField0_ & ~0x00000010);
              sentencelessTokenBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSentencelessTokenFieldBuilder() : null;
            } else {
              sentencelessTokenBuilder_.addAllMessages(other.sentencelessToken_);
            }
          }
        }
        if (quoteBuilder_ == null) {
          if (!other.quote_.isEmpty()) {
            if (quote_.isEmpty()) {
              quote_ = other.quote_;
              bitField0_ = (bitField0_ & ~0x00000020);
            } else {
              ensureQuoteIsMutable();
              quote_.addAll(other.quote_);
            }
            onChanged();
          }
        } else {
          if (!other.quote_.isEmpty()) {
            if (quoteBuilder_.isEmpty()) {
              quoteBuilder_.dispose();
              quoteBuilder_ = null;
              quote_ = other.quote_;
              bitField0_ = (bitField0_ & ~0x00000020);
              quoteBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getQuoteFieldBuilder() : null;
            } else {
              quoteBuilder_.addAllMessages(other.quote_);
            }
          }
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasText()) {
          
          return false;
        }
        for (int i = 0; i < getSentenceCount(); i++) {
          if (!getSentence(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getCorefChainCount(); i++) {
          if (!getCorefChain(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getSentencelessTokenCount(); i++) {
          if (!getSentencelessToken(i).isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Document parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Document) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object text_ = "";
      /**
       * <code>required string text = 1;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>required string text = 1;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> sentence_ =
        java.util.Collections.emptyList();
      private void ensureSentenceIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          sentence_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence>(sentence_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder> sentenceBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> getSentenceList() {
        if (sentenceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentence_);
        } else {
          return sentenceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public int getSentenceCount() {
        if (sentenceBuilder_ == null) {
          return sentence_.size();
        } else {
          return sentenceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence getSentence(int index) {
        if (sentenceBuilder_ == null) {
          return sentence_.get(index);
        } else {
          return sentenceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder setSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence value) {
        if (sentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceIsMutable();
          sentence_.set(index, value);
          onChanged();
        } else {
          sentenceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder setSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder builderForValue) {
        if (sentenceBuilder_ == null) {
          ensureSentenceIsMutable();
          sentence_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentenceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder addSentence(edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence value) {
        if (sentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceIsMutable();
          sentence_.add(value);
          onChanged();
        } else {
          sentenceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder addSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence value) {
        if (sentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceIsMutable();
          sentence_.add(index, value);
          onChanged();
        } else {
          sentenceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder addSentence(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder builderForValue) {
        if (sentenceBuilder_ == null) {
          ensureSentenceIsMutable();
          sentence_.add(builderForValue.build());
          onChanged();
        } else {
          sentenceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder addSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder builderForValue) {
        if (sentenceBuilder_ == null) {
          ensureSentenceIsMutable();
          sentence_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentenceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder addAllSentence(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence> values) {
        if (sentenceBuilder_ == null) {
          ensureSentenceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sentence_);
          onChanged();
        } else {
          sentenceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder clearSentence() {
        if (sentenceBuilder_ == null) {
          sentence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          sentenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public Builder removeSentence(int index) {
        if (sentenceBuilder_ == null) {
          ensureSentenceIsMutable();
          sentence_.remove(index);
          onChanged();
        } else {
          sentenceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder getSentenceBuilder(
          int index) {
        return getSentenceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder getSentenceOrBuilder(
          int index) {
        if (sentenceBuilder_ == null) {
          return sentence_.get(index);  } else {
          return sentenceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder> 
           getSentenceOrBuilderList() {
        if (sentenceBuilder_ != null) {
          return sentenceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentence_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder addSentenceBuilder() {
        return getSentenceFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder addSentenceBuilder(
          int index) {
        return getSentenceFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Sentence sentence = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder> 
           getSentenceBuilderList() {
        return getSentenceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder> 
          getSentenceFieldBuilder() {
        if (sentenceBuilder_ == null) {
          sentenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder>(
                  sentence_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          sentence_ = null;
        }
        return sentenceBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> corefChain_ =
        java.util.Collections.emptyList();
      private void ensureCorefChainIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          corefChain_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain>(corefChain_);
          bitField0_ |= 0x00000004;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder> corefChainBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> getCorefChainList() {
        if (corefChainBuilder_ == null) {
          return java.util.Collections.unmodifiableList(corefChain_);
        } else {
          return corefChainBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public int getCorefChainCount() {
        if (corefChainBuilder_ == null) {
          return corefChain_.size();
        } else {
          return corefChainBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain getCorefChain(int index) {
        if (corefChainBuilder_ == null) {
          return corefChain_.get(index);
        } else {
          return corefChainBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder setCorefChain(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain value) {
        if (corefChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorefChainIsMutable();
          corefChain_.set(index, value);
          onChanged();
        } else {
          corefChainBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder setCorefChain(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder builderForValue) {
        if (corefChainBuilder_ == null) {
          ensureCorefChainIsMutable();
          corefChain_.set(index, builderForValue.build());
          onChanged();
        } else {
          corefChainBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder addCorefChain(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain value) {
        if (corefChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorefChainIsMutable();
          corefChain_.add(value);
          onChanged();
        } else {
          corefChainBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder addCorefChain(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain value) {
        if (corefChainBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureCorefChainIsMutable();
          corefChain_.add(index, value);
          onChanged();
        } else {
          corefChainBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder addCorefChain(
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder builderForValue) {
        if (corefChainBuilder_ == null) {
          ensureCorefChainIsMutable();
          corefChain_.add(builderForValue.build());
          onChanged();
        } else {
          corefChainBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder addCorefChain(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder builderForValue) {
        if (corefChainBuilder_ == null) {
          ensureCorefChainIsMutable();
          corefChain_.add(index, builderForValue.build());
          onChanged();
        } else {
          corefChainBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder addAllCorefChain(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain> values) {
        if (corefChainBuilder_ == null) {
          ensureCorefChainIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, corefChain_);
          onChanged();
        } else {
          corefChainBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder clearCorefChain() {
        if (corefChainBuilder_ == null) {
          corefChain_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000004);
          onChanged();
        } else {
          corefChainBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public Builder removeCorefChain(int index) {
        if (corefChainBuilder_ == null) {
          ensureCorefChainIsMutable();
          corefChain_.remove(index);
          onChanged();
        } else {
          corefChainBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder getCorefChainBuilder(
          int index) {
        return getCorefChainFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder getCorefChainOrBuilder(
          int index) {
        if (corefChainBuilder_ == null) {
          return corefChain_.get(index);  } else {
          return corefChainBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder> 
           getCorefChainOrBuilderList() {
        if (corefChainBuilder_ != null) {
          return corefChainBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(corefChain_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder addCorefChainBuilder() {
        return getCorefChainFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder addCorefChainBuilder(
          int index) {
        return getCorefChainFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain corefChain = 3;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder> 
           getCorefChainBuilderList() {
        return getCorefChainFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder> 
          getCorefChainFieldBuilder() {
        if (corefChainBuilder_ == null) {
          corefChainBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder>(
                  corefChain_,
                  ((bitField0_ & 0x00000004) == 0x00000004),
                  getParentForChildren(),
                  isClean());
          corefChain_ = null;
        }
        return corefChainBuilder_;
      }

      private java.lang.Object docID_ = "";
      /**
       * <code>optional string docID = 4;</code>
       */
      public boolean hasDocID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string docID = 4;</code>
       */
      public java.lang.String getDocID() {
        java.lang.Object ref = docID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            docID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string docID = 4;</code>
       */
      public com.google.protobuf.ByteString
          getDocIDBytes() {
        java.lang.Object ref = docID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string docID = 4;</code>
       */
      public Builder setDocID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string docID = 4;</code>
       */
      public Builder clearDocID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        docID_ = getDefaultInstance().getDocID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string docID = 4;</code>
       */
      public Builder setDocIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        docID_ = value;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> sentencelessToken_ =
        java.util.Collections.emptyList();
      private void ensureSentencelessTokenIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          sentencelessToken_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>(sentencelessToken_);
          bitField0_ |= 0x00000010;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> sentencelessTokenBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> getSentencelessTokenList() {
        if (sentencelessTokenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentencelessToken_);
        } else {
          return sentencelessTokenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public int getSentencelessTokenCount() {
        if (sentencelessTokenBuilder_ == null) {
          return sentencelessToken_.size();
        } else {
          return sentencelessTokenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token getSentencelessToken(int index) {
        if (sentencelessTokenBuilder_ == null) {
          return sentencelessToken_.get(index);
        } else {
          return sentencelessTokenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder setSentencelessToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (sentencelessTokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.set(index, value);
          onChanged();
        } else {
          sentencelessTokenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder setSentencelessToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (sentencelessTokenBuilder_ == null) {
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentencelessTokenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder addSentencelessToken(edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (sentencelessTokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.add(value);
          onChanged();
        } else {
          sentencelessTokenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder addSentencelessToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (sentencelessTokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.add(index, value);
          onChanged();
        } else {
          sentencelessTokenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder addSentencelessToken(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (sentencelessTokenBuilder_ == null) {
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.add(builderForValue.build());
          onChanged();
        } else {
          sentencelessTokenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder addSentencelessToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (sentencelessTokenBuilder_ == null) {
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentencelessTokenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder addAllSentencelessToken(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Token> values) {
        if (sentencelessTokenBuilder_ == null) {
          ensureSentencelessTokenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sentencelessToken_);
          onChanged();
        } else {
          sentencelessTokenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder clearSentencelessToken() {
        if (sentencelessTokenBuilder_ == null) {
          sentencelessToken_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000010);
          onChanged();
        } else {
          sentencelessTokenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public Builder removeSentencelessToken(int index) {
        if (sentencelessTokenBuilder_ == null) {
          ensureSentencelessTokenIsMutable();
          sentencelessToken_.remove(index);
          onChanged();
        } else {
          sentencelessTokenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder getSentencelessTokenBuilder(
          int index) {
        return getSentencelessTokenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getSentencelessTokenOrBuilder(
          int index) {
        if (sentencelessTokenBuilder_ == null) {
          return sentencelessToken_.get(index);  } else {
          return sentencelessTokenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
           getSentencelessTokenOrBuilderList() {
        if (sentencelessTokenBuilder_ != null) {
          return sentencelessTokenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentencelessToken_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder addSentencelessTokenBuilder() {
        return getSentencelessTokenFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder addSentencelessTokenBuilder(
          int index) {
        return getSentencelessTokenFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token sentencelessToken = 5;</code>
       *
       * <pre>
       **
       * A peculiar field, for the corner case when a Document is
       * serialized without any sentences. Otherwise
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder> 
           getSentencelessTokenBuilderList() {
        return getSentencelessTokenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
          getSentencelessTokenFieldBuilder() {
        if (sentencelessTokenBuilder_ == null) {
          sentencelessTokenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder>(
                  sentencelessToken_,
                  ((bitField0_ & 0x00000010) == 0x00000010),
                  getParentForChildren(),
                  isClean());
          sentencelessToken_ = null;
        }
        return sentencelessTokenBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> quote_ =
        java.util.Collections.emptyList();
      private void ensureQuoteIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          quote_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote>(quote_);
          bitField0_ |= 0x00000020;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Quote, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder> quoteBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> getQuoteList() {
        if (quoteBuilder_ == null) {
          return java.util.Collections.unmodifiableList(quote_);
        } else {
          return quoteBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public int getQuoteCount() {
        if (quoteBuilder_ == null) {
          return quote_.size();
        } else {
          return quoteBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote getQuote(int index) {
        if (quoteBuilder_ == null) {
          return quote_.get(index);
        } else {
          return quoteBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder setQuote(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote value) {
        if (quoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuoteIsMutable();
          quote_.set(index, value);
          onChanged();
        } else {
          quoteBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder setQuote(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder builderForValue) {
        if (quoteBuilder_ == null) {
          ensureQuoteIsMutable();
          quote_.set(index, builderForValue.build());
          onChanged();
        } else {
          quoteBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder addQuote(edu.stanford.nlp.pipeline.CoreNLPProtos.Quote value) {
        if (quoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuoteIsMutable();
          quote_.add(value);
          onChanged();
        } else {
          quoteBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder addQuote(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote value) {
        if (quoteBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureQuoteIsMutable();
          quote_.add(index, value);
          onChanged();
        } else {
          quoteBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder addQuote(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder builderForValue) {
        if (quoteBuilder_ == null) {
          ensureQuoteIsMutable();
          quote_.add(builderForValue.build());
          onChanged();
        } else {
          quoteBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder addQuote(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder builderForValue) {
        if (quoteBuilder_ == null) {
          ensureQuoteIsMutable();
          quote_.add(index, builderForValue.build());
          onChanged();
        } else {
          quoteBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder addAllQuote(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Quote> values) {
        if (quoteBuilder_ == null) {
          ensureQuoteIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, quote_);
          onChanged();
        } else {
          quoteBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder clearQuote() {
        if (quoteBuilder_ == null) {
          quote_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000020);
          onChanged();
        } else {
          quoteBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public Builder removeQuote(int index) {
        if (quoteBuilder_ == null) {
          ensureQuoteIsMutable();
          quote_.remove(index);
          onChanged();
        } else {
          quoteBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder getQuoteBuilder(
          int index) {
        return getQuoteFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder getQuoteOrBuilder(
          int index) {
        if (quoteBuilder_ == null) {
          return quote_.get(index);  } else {
          return quoteBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder> 
           getQuoteOrBuilderList() {
        if (quoteBuilder_ != null) {
          return quoteBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(quote_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder addQuoteBuilder() {
        return getQuoteFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder addQuoteBuilder(
          int index) {
        return getQuoteFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Quote quote = 6;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder> 
           getQuoteBuilderList() {
        return getQuoteFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Quote, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder> 
          getQuoteFieldBuilder() {
        if (quoteBuilder_ == null) {
          quoteBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Quote, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder>(
                  quote_,
                  ((bitField0_ & 0x00000020) == 0x00000020),
                  getParentForChildren(),
                  isClean());
          quote_ = null;
        }
        return quoteBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Document)
    }

    static {
      defaultInstance = new Document(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Document)
  }

  public interface SentenceOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Sentence)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Sentence> {

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> 
        getTokenList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Token getToken(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    int getTokenCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
        getTokenOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getTokenOrBuilder(
        int index);

    /**
     * <code>required uint32 tokenOffsetBegin = 2;</code>
     */
    boolean hasTokenOffsetBegin();
    /**
     * <code>required uint32 tokenOffsetBegin = 2;</code>
     */
    int getTokenOffsetBegin();

    /**
     * <code>required uint32 tokenOffsetEnd = 3;</code>
     */
    boolean hasTokenOffsetEnd();
    /**
     * <code>required uint32 tokenOffsetEnd = 3;</code>
     */
    int getTokenOffsetEnd();

    /**
     * <code>optional uint32 sentenceIndex = 4;</code>
     */
    boolean hasSentenceIndex();
    /**
     * <code>optional uint32 sentenceIndex = 4;</code>
     */
    int getSentenceIndex();

    /**
     * <code>optional uint32 characterOffsetBegin = 5;</code>
     */
    boolean hasCharacterOffsetBegin();
    /**
     * <code>optional uint32 characterOffsetBegin = 5;</code>
     */
    int getCharacterOffsetBegin();

    /**
     * <code>optional uint32 characterOffsetEnd = 6;</code>
     */
    boolean hasCharacterOffsetEnd();
    /**
     * <code>optional uint32 characterOffsetEnd = 6;</code>
     */
    int getCharacterOffsetEnd();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    boolean hasParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getParseTreeOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    boolean hasBinarizedParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getBinarizedParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getBinarizedParseTreeOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    boolean hasAnnotatedParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getAnnotatedParseTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getAnnotatedParseTreeOrBuilder();

    /**
     * <code>optional string sentiment = 33;</code>
     */
    boolean hasSentiment();
    /**
     * <code>optional string sentiment = 33;</code>
     */
    java.lang.String getSentiment();
    /**
     * <code>optional string sentiment = 33;</code>
     */
    com.google.protobuf.ByteString
        getSentimentBytes();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> 
        getKBestParseTreesList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getKBestParseTrees(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    int getKBestParseTreesCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
        getKBestParseTreesOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getKBestParseTreesOrBuilder(
        int index);

    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    boolean hasBasicDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getBasicDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getBasicDependenciesOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    boolean hasCollapsedDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedDependenciesOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    boolean hasCollapsedCCProcessedDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedCCProcessedDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedCCProcessedDependenciesOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    boolean hasAlternativeDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getAlternativeDependencies();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getAlternativeDependenciesOrBuilder();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> 
        getOpenieTripleList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getOpenieTriple(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    int getOpenieTripleCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
        getOpenieTripleOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getOpenieTripleOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> 
        getKbpTripleList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getKbpTriple(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    int getKbpTripleCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
        getKbpTripleOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getKbpTripleOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> 
        getEntailedSentenceList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment getEntailedSentence(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    int getEntailedSentenceCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder> 
        getEntailedSentenceOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder getEntailedSentenceOrBuilder(
        int index);

    /**
     * <code>optional uint32 paragraph = 11;</code>
     */
    boolean hasParagraph();
    /**
     * <code>optional uint32 paragraph = 11;</code>
     */
    int getParagraph();

    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    boolean hasText();
    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional bool hasRelationAnnotations = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    boolean hasHasRelationAnnotations();
    /**
     * <code>optional bool hasRelationAnnotations = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    boolean getHasRelationAnnotations();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> 
        getEntityList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getEntity(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    int getEntityCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
        getEntityOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getEntityOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> 
        getRelationList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Relation getRelation(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    int getRelationCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder> 
        getRelationOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder getRelationOrBuilder(
        int index);

    /**
     * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
     */
    boolean hasHasNumerizedTokensAnnotation();
    /**
     * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
     */
    boolean getHasNumerizedTokensAnnotation();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> 
        getMentionsList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention getMentions(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    int getMentionsCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder> 
        getMentionsOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder getMentionsOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> 
        getMentionsForCorefList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Mention getMentionsForCoref(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    int getMentionsForCorefCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder> 
        getMentionsForCorefOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder getMentionsForCorefOrBuilder(
        int index);

    /**
     * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
     */
    boolean hasHasCorefMentionsAnnotation();
    /**
     * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
     */
    boolean getHasCorefMentionsAnnotation();

    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    boolean hasSentenceID();
    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    java.lang.String getSentenceID();
    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    com.google.protobuf.ByteString
        getSentenceIDBytes();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Sentence}
   *
   * <pre>
   * The serialized version of a CoreMap representing a sentence.
   * </pre>
   */
  public static final class Sentence extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Sentence> implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Sentence)
      SentenceOrBuilder {
    // Use Sentence.newBuilder() to construct.
    private Sentence(com.google.protobuf.GeneratedMessage.ExtendableBuilder<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Sentence(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Sentence defaultInstance;
    public static Sentence getDefaultInstance() {
      return defaultInstance;
    }

    public Sentence getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Sentence(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                token_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>();
                mutable_bitField0_ |= 0x00000001;
              }
              token_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Token.PARSER, extensionRegistry));
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              tokenOffsetBegin_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              tokenOffsetEnd_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              sentenceIndex_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              characterOffsetBegin_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              characterOffsetEnd_ = input.readUInt32();
              break;
            }
            case 58: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder = null;
              if (((bitField0_ & 0x00000020) == 0x00000020)) {
                subBuilder = parseTree_.toBuilder();
              }
              parseTree_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(parseTree_);
                parseTree_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000020;
              break;
            }
            case 66: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder = null;
              if (((bitField0_ & 0x00000200) == 0x00000200)) {
                subBuilder = basicDependencies_.toBuilder();
              }
              basicDependencies_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(basicDependencies_);
                basicDependencies_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000200;
              break;
            }
            case 74: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder = null;
              if (((bitField0_ & 0x00000400) == 0x00000400)) {
                subBuilder = collapsedDependencies_.toBuilder();
              }
              collapsedDependencies_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(collapsedDependencies_);
                collapsedDependencies_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000400;
              break;
            }
            case 82: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder = null;
              if (((bitField0_ & 0x00000800) == 0x00000800)) {
                subBuilder = collapsedCCProcessedDependencies_.toBuilder();
              }
              collapsedCCProcessedDependencies_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(collapsedCCProcessedDependencies_);
                collapsedCCProcessedDependencies_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000800;
              break;
            }
            case 88: {
              bitField0_ |= 0x00002000;
              paragraph_ = input.readUInt32();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00004000;
              text_ = bs;
              break;
            }
            case 106: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder = null;
              if (((bitField0_ & 0x00001000) == 0x00001000)) {
                subBuilder = alternativeDependencies_.toBuilder();
              }
              alternativeDependencies_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(alternativeDependencies_);
                alternativeDependencies_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00001000;
              break;
            }
            case 114: {
              if (!((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
                openieTriple_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple>();
                mutable_bitField0_ |= 0x00008000;
              }
              openieTriple_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.PARSER, extensionRegistry));
              break;
            }
            case 122: {
              if (!((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
                entailedSentence_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment>();
                mutable_bitField0_ |= 0x00020000;
              }
              entailedSentence_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.PARSER, extensionRegistry));
              break;
            }
            case 130: {
              if (!((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
                kbpTriple_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple>();
                mutable_bitField0_ |= 0x00010000;
              }
              kbpTriple_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.PARSER, extensionRegistry));
              break;
            }
            case 250: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = binarizedParseTree_.toBuilder();
              }
              binarizedParseTree_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(binarizedParseTree_);
                binarizedParseTree_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
            case 258: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder subBuilder = null;
              if (((bitField0_ & 0x00000080) == 0x00000080)) {
                subBuilder = annotatedParseTree_.toBuilder();
              }
              annotatedParseTree_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(annotatedParseTree_);
                annotatedParseTree_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000080;
              break;
            }
            case 266: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              sentiment_ = bs;
              break;
            }
            case 274: {
              if (!((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
                kBestParseTrees_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree>();
                mutable_bitField0_ |= 0x00000400;
              }
              kBestParseTrees_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.PARSER, extensionRegistry));
              break;
            }
            case 408: {
              bitField0_ |= 0x00008000;
              hasRelationAnnotations_ = input.readBool();
              break;
            }
            case 418: {
              if (!((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
                entity_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>();
                mutable_bitField0_ |= 0x00200000;
              }
              entity_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.PARSER, extensionRegistry));
              break;
            }
            case 426: {
              if (!((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
                relation_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation>();
                mutable_bitField0_ |= 0x00400000;
              }
              relation_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.PARSER, extensionRegistry));
              break;
            }
            case 432: {
              bitField0_ |= 0x00010000;
              hasNumerizedTokensAnnotation_ = input.readBool();
              break;
            }
            case 442: {
              if (!((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
                mentions_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention>();
                mutable_bitField0_ |= 0x01000000;
              }
              mentions_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.PARSER, extensionRegistry));
              break;
            }
            case 450: {
              if (!((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
                mentionsForCoref_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention>();
                mutable_bitField0_ |= 0x02000000;
              }
              mentionsForCoref_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.PARSER, extensionRegistry));
              break;
            }
            case 456: {
              bitField0_ |= 0x00020000;
              hasCorefMentionsAnnotation_ = input.readBool();
              break;
            }
            case 466: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00040000;
              sentenceID_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          token_ = java.util.Collections.unmodifiableList(token_);
        }
        if (((mutable_bitField0_ & 0x00008000) == 0x00008000)) {
          openieTriple_ = java.util.Collections.unmodifiableList(openieTriple_);
        }
        if (((mutable_bitField0_ & 0x00020000) == 0x00020000)) {
          entailedSentence_ = java.util.Collections.unmodifiableList(entailedSentence_);
        }
        if (((mutable_bitField0_ & 0x00010000) == 0x00010000)) {
          kbpTriple_ = java.util.Collections.unmodifiableList(kbpTriple_);
        }
        if (((mutable_bitField0_ & 0x00000400) == 0x00000400)) {
          kBestParseTrees_ = java.util.Collections.unmodifiableList(kBestParseTrees_);
        }
        if (((mutable_bitField0_ & 0x00200000) == 0x00200000)) {
          entity_ = java.util.Collections.unmodifiableList(entity_);
        }
        if (((mutable_bitField0_ & 0x00400000) == 0x00400000)) {
          relation_ = java.util.Collections.unmodifiableList(relation_);
        }
        if (((mutable_bitField0_ & 0x01000000) == 0x01000000)) {
          mentions_ = java.util.Collections.unmodifiableList(mentions_);
        }
        if (((mutable_bitField0_ & 0x02000000) == 0x02000000)) {
          mentionsForCoref_ = java.util.Collections.unmodifiableList(mentionsForCoref_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Sentence_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder.class);
    }

    public static com.google.protobuf.Parser<Sentence> PARSER =
        new com.google.protobuf.AbstractParser<Sentence>() {
      public Sentence parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Sentence(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Sentence> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOKEN_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> token_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> getTokenList() {
      return token_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
        getTokenOrBuilderList() {
      return token_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    public int getTokenCount() {
      return token_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Token getToken(int index) {
      return token_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getTokenOrBuilder(
        int index) {
      return token_.get(index);
    }

    public static final int TOKENOFFSETBEGIN_FIELD_NUMBER = 2;
    private int tokenOffsetBegin_;
    /**
     * <code>required uint32 tokenOffsetBegin = 2;</code>
     */
    public boolean hasTokenOffsetBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 tokenOffsetBegin = 2;</code>
     */
    public int getTokenOffsetBegin() {
      return tokenOffsetBegin_;
    }

    public static final int TOKENOFFSETEND_FIELD_NUMBER = 3;
    private int tokenOffsetEnd_;
    /**
     * <code>required uint32 tokenOffsetEnd = 3;</code>
     */
    public boolean hasTokenOffsetEnd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tokenOffsetEnd = 3;</code>
     */
    public int getTokenOffsetEnd() {
      return tokenOffsetEnd_;
    }

    public static final int SENTENCEINDEX_FIELD_NUMBER = 4;
    private int sentenceIndex_;
    /**
     * <code>optional uint32 sentenceIndex = 4;</code>
     */
    public boolean hasSentenceIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 sentenceIndex = 4;</code>
     */
    public int getSentenceIndex() {
      return sentenceIndex_;
    }

    public static final int CHARACTEROFFSETBEGIN_FIELD_NUMBER = 5;
    private int characterOffsetBegin_;
    /**
     * <code>optional uint32 characterOffsetBegin = 5;</code>
     */
    public boolean hasCharacterOffsetBegin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 characterOffsetBegin = 5;</code>
     */
    public int getCharacterOffsetBegin() {
      return characterOffsetBegin_;
    }

    public static final int CHARACTEROFFSETEND_FIELD_NUMBER = 6;
    private int characterOffsetEnd_;
    /**
     * <code>optional uint32 characterOffsetEnd = 6;</code>
     */
    public boolean hasCharacterOffsetEnd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 characterOffsetEnd = 6;</code>
     */
    public int getCharacterOffsetEnd() {
      return characterOffsetEnd_;
    }

    public static final int PARSETREE_FIELD_NUMBER = 7;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseTree_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    public boolean hasParseTree() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getParseTree() {
      return parseTree_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getParseTreeOrBuilder() {
      return parseTree_;
    }

    public static final int BINARIZEDPARSETREE_FIELD_NUMBER = 31;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree binarizedParseTree_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    public boolean hasBinarizedParseTree() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getBinarizedParseTree() {
      return binarizedParseTree_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getBinarizedParseTreeOrBuilder() {
      return binarizedParseTree_;
    }

    public static final int ANNOTATEDPARSETREE_FIELD_NUMBER = 32;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree annotatedParseTree_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    public boolean hasAnnotatedParseTree() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getAnnotatedParseTree() {
      return annotatedParseTree_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getAnnotatedParseTreeOrBuilder() {
      return annotatedParseTree_;
    }

    public static final int SENTIMENT_FIELD_NUMBER = 33;
    private java.lang.Object sentiment_;
    /**
     * <code>optional string sentiment = 33;</code>
     */
    public boolean hasSentiment() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string sentiment = 33;</code>
     */
    public java.lang.String getSentiment() {
      java.lang.Object ref = sentiment_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sentiment_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sentiment = 33;</code>
     */
    public com.google.protobuf.ByteString
        getSentimentBytes() {
      java.lang.Object ref = sentiment_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sentiment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int KBESTPARSETREES_FIELD_NUMBER = 34;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> kBestParseTrees_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> getKBestParseTreesList() {
      return kBestParseTrees_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
        getKBestParseTreesOrBuilderList() {
      return kBestParseTrees_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    public int getKBestParseTreesCount() {
      return kBestParseTrees_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getKBestParseTrees(int index) {
      return kBestParseTrees_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getKBestParseTreesOrBuilder(
        int index) {
      return kBestParseTrees_.get(index);
    }

    public static final int BASICDEPENDENCIES_FIELD_NUMBER = 8;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph basicDependencies_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    public boolean hasBasicDependencies() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getBasicDependencies() {
      return basicDependencies_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getBasicDependenciesOrBuilder() {
      return basicDependencies_;
    }

    public static final int COLLAPSEDDEPENDENCIES_FIELD_NUMBER = 9;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph collapsedDependencies_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    public boolean hasCollapsedDependencies() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedDependencies() {
      return collapsedDependencies_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedDependenciesOrBuilder() {
      return collapsedDependencies_;
    }

    public static final int COLLAPSEDCCPROCESSEDDEPENDENCIES_FIELD_NUMBER = 10;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph collapsedCCProcessedDependencies_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    public boolean hasCollapsedCCProcessedDependencies() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedCCProcessedDependencies() {
      return collapsedCCProcessedDependencies_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedCCProcessedDependenciesOrBuilder() {
      return collapsedCCProcessedDependencies_;
    }

    public static final int ALTERNATIVEDEPENDENCIES_FIELD_NUMBER = 13;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph alternativeDependencies_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    public boolean hasAlternativeDependencies() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getAlternativeDependencies() {
      return alternativeDependencies_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getAlternativeDependenciesOrBuilder() {
      return alternativeDependencies_;
    }

    public static final int OPENIETRIPLE_FIELD_NUMBER = 14;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> openieTriple_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> getOpenieTripleList() {
      return openieTriple_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
        getOpenieTripleOrBuilderList() {
      return openieTriple_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    public int getOpenieTripleCount() {
      return openieTriple_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getOpenieTriple(int index) {
      return openieTriple_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
     *
     * <pre>
     * The OpenIE triples in the sentence
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getOpenieTripleOrBuilder(
        int index) {
      return openieTriple_.get(index);
    }

    public static final int KBPTRIPLE_FIELD_NUMBER = 16;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> kbpTriple_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> getKbpTripleList() {
      return kbpTriple_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
        getKbpTripleOrBuilderList() {
      return kbpTriple_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    public int getKbpTripleCount() {
      return kbpTriple_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getKbpTriple(int index) {
      return kbpTriple_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
     *
     * <pre>
     * The KBP triples in this sentence
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getKbpTripleOrBuilder(
        int index) {
      return kbpTriple_.get(index);
    }

    public static final int ENTAILEDSENTENCE_FIELD_NUMBER = 15;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> entailedSentence_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> getEntailedSentenceList() {
      return entailedSentence_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder> 
        getEntailedSentenceOrBuilderList() {
      return entailedSentence_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    public int getEntailedSentenceCount() {
      return entailedSentence_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment getEntailedSentence(int index) {
      return entailedSentence_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
     *
     * <pre>
     * The entailed sentences, by natural logic
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder getEntailedSentenceOrBuilder(
        int index) {
      return entailedSentence_.get(index);
    }

    public static final int PARAGRAPH_FIELD_NUMBER = 11;
    private int paragraph_;
    /**
     * <code>optional uint32 paragraph = 11;</code>
     */
    public boolean hasParagraph() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional uint32 paragraph = 11;</code>
     */
    public int getParagraph() {
      return paragraph_;
    }

    public static final int TEXT_FIELD_NUMBER = 12;
    private java.lang.Object text_;
    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 12;</code>
     *
     * <pre>
     * Only needed if we're only saving the sentence.
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HASRELATIONANNOTATIONS_FIELD_NUMBER = 51;
    private boolean hasRelationAnnotations_;
    /**
     * <code>optional bool hasRelationAnnotations = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    public boolean hasHasRelationAnnotations() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool hasRelationAnnotations = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    public boolean getHasRelationAnnotations() {
      return hasRelationAnnotations_;
    }

    public static final int ENTITY_FIELD_NUMBER = 52;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> entity_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> getEntityList() {
      return entity_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
        getEntityOrBuilderList() {
      return entity_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    public int getEntityCount() {
      return entity_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getEntity(int index) {
      return entity_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getEntityOrBuilder(
        int index) {
      return entity_.get(index);
    }

    public static final int RELATION_FIELD_NUMBER = 53;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> relation_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> getRelationList() {
      return relation_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder> 
        getRelationOrBuilderList() {
      return relation_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    public int getRelationCount() {
      return relation_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation getRelation(int index) {
      return relation_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder getRelationOrBuilder(
        int index) {
      return relation_.get(index);
    }

    public static final int HASNUMERIZEDTOKENSANNOTATION_FIELD_NUMBER = 54;
    private boolean hasNumerizedTokensAnnotation_;
    /**
     * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
     */
    public boolean hasHasNumerizedTokensAnnotation() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
     */
    public boolean getHasNumerizedTokensAnnotation() {
      return hasNumerizedTokensAnnotation_;
    }

    public static final int MENTIONS_FIELD_NUMBER = 55;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> mentions_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> getMentionsList() {
      return mentions_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder> 
        getMentionsOrBuilderList() {
      return mentions_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    public int getMentionsCount() {
      return mentions_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention getMentions(int index) {
      return mentions_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder getMentionsOrBuilder(
        int index) {
      return mentions_.get(index);
    }

    public static final int MENTIONSFORCOREF_FIELD_NUMBER = 56;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> mentionsForCoref_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> getMentionsForCorefList() {
      return mentionsForCoref_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder> 
        getMentionsForCorefOrBuilderList() {
      return mentionsForCoref_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    public int getMentionsForCorefCount() {
      return mentionsForCoref_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention getMentionsForCoref(int index) {
      return mentionsForCoref_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder getMentionsForCorefOrBuilder(
        int index) {
      return mentionsForCoref_.get(index);
    }

    public static final int HASCOREFMENTIONSANNOTATION_FIELD_NUMBER = 57;
    private boolean hasCorefMentionsAnnotation_;
    /**
     * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
     */
    public boolean hasHasCorefMentionsAnnotation() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
     */
    public boolean getHasCorefMentionsAnnotation() {
      return hasCorefMentionsAnnotation_;
    }

    public static final int SENTENCEID_FIELD_NUMBER = 58;
    private java.lang.Object sentenceID_;
    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    public boolean hasSentenceID() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    public java.lang.String getSentenceID() {
      java.lang.Object ref = sentenceID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sentenceID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sentenceID = 58;</code>
     *
     * <pre>
     * Useful when storing sentences (e.g. ForEach)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSentenceIDBytes() {
      java.lang.Object ref = sentenceID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sentenceID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      token_ = java.util.Collections.emptyList();
      tokenOffsetBegin_ = 0;
      tokenOffsetEnd_ = 0;
      sentenceIndex_ = 0;
      characterOffsetBegin_ = 0;
      characterOffsetEnd_ = 0;
      parseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      binarizedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      annotatedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      sentiment_ = "";
      kBestParseTrees_ = java.util.Collections.emptyList();
      basicDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      collapsedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      collapsedCCProcessedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      alternativeDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      openieTriple_ = java.util.Collections.emptyList();
      kbpTriple_ = java.util.Collections.emptyList();
      entailedSentence_ = java.util.Collections.emptyList();
      paragraph_ = 0;
      text_ = "";
      hasRelationAnnotations_ = false;
      entity_ = java.util.Collections.emptyList();
      relation_ = java.util.Collections.emptyList();
      hasNumerizedTokensAnnotation_ = false;
      mentions_ = java.util.Collections.emptyList();
      mentionsForCoref_ = java.util.Collections.emptyList();
      hasCorefMentionsAnnotation_ = false;
      sentenceID_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTokenOffsetBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTokenOffsetEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      for (int i = 0; i < getTokenCount(); i++) {
        if (!getToken(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasBasicDependencies()) {
        if (!getBasicDependencies().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCollapsedDependencies()) {
        if (!getCollapsedDependencies().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasCollapsedCCProcessedDependencies()) {
        if (!getCollapsedCCProcessedDependencies().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasAlternativeDependencies()) {
        if (!getAlternativeDependencies().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getOpenieTripleCount(); i++) {
        if (!getOpenieTriple(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getKbpTripleCount(); i++) {
        if (!getKbpTriple(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getMentionsCount(); i++) {
        if (!getMentions(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      for (int i = 0; i < token_.size(); i++) {
        output.writeMessage(1, token_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, tokenOffsetBegin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, tokenOffsetEnd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, sentenceIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, characterOffsetBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, characterOffsetEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeMessage(7, parseTree_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeMessage(8, basicDependencies_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeMessage(9, collapsedDependencies_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeMessage(10, collapsedCCProcessedDependencies_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeUInt32(11, paragraph_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeBytes(12, getTextBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeMessage(13, alternativeDependencies_);
      }
      for (int i = 0; i < openieTriple_.size(); i++) {
        output.writeMessage(14, openieTriple_.get(i));
      }
      for (int i = 0; i < entailedSentence_.size(); i++) {
        output.writeMessage(15, entailedSentence_.get(i));
      }
      for (int i = 0; i < kbpTriple_.size(); i++) {
        output.writeMessage(16, kbpTriple_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(31, binarizedParseTree_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeMessage(32, annotatedParseTree_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(33, getSentimentBytes());
      }
      for (int i = 0; i < kBestParseTrees_.size(); i++) {
        output.writeMessage(34, kBestParseTrees_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(51, hasRelationAnnotations_);
      }
      for (int i = 0; i < entity_.size(); i++) {
        output.writeMessage(52, entity_.get(i));
      }
      for (int i = 0; i < relation_.size(); i++) {
        output.writeMessage(53, relation_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeBool(54, hasNumerizedTokensAnnotation_);
      }
      for (int i = 0; i < mentions_.size(); i++) {
        output.writeMessage(55, mentions_.get(i));
      }
      for (int i = 0; i < mentionsForCoref_.size(); i++) {
        output.writeMessage(56, mentionsForCoref_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeBool(57, hasCorefMentionsAnnotation_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBytes(58, getSentenceIDBytes());
      }
      extensionWriter.writeUntil(256, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < token_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, token_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tokenOffsetBegin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tokenOffsetEnd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, sentenceIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, characterOffsetBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, characterOffsetEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, parseTree_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, basicDependencies_);
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(9, collapsedDependencies_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(10, collapsedCCProcessedDependencies_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, paragraph_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getTextBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(13, alternativeDependencies_);
      }
      for (int i = 0; i < openieTriple_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(14, openieTriple_.get(i));
      }
      for (int i = 0; i < entailedSentence_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(15, entailedSentence_.get(i));
      }
      for (int i = 0; i < kbpTriple_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(16, kbpTriple_.get(i));
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, binarizedParseTree_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, annotatedParseTree_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(33, getSentimentBytes());
      }
      for (int i = 0; i < kBestParseTrees_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, kBestParseTrees_.get(i));
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(51, hasRelationAnnotations_);
      }
      for (int i = 0; i < entity_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(52, entity_.get(i));
      }
      for (int i = 0; i < relation_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(53, relation_.get(i));
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(54, hasNumerizedTokensAnnotation_);
      }
      for (int i = 0; i < mentions_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(55, mentions_.get(i));
      }
      for (int i = 0; i < mentionsForCoref_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(56, mentionsForCoref_.get(i));
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(57, hasCorefMentionsAnnotation_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(58, getSentenceIDBytes());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Sentence}
     *
     * <pre>
     * The serialized version of a CoreMap representing a sentence.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence, Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Sentence)
        edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Sentence_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTokenFieldBuilder();
          getParseTreeFieldBuilder();
          getBinarizedParseTreeFieldBuilder();
          getAnnotatedParseTreeFieldBuilder();
          getKBestParseTreesFieldBuilder();
          getBasicDependenciesFieldBuilder();
          getCollapsedDependenciesFieldBuilder();
          getCollapsedCCProcessedDependenciesFieldBuilder();
          getAlternativeDependenciesFieldBuilder();
          getOpenieTripleFieldBuilder();
          getKbpTripleFieldBuilder();
          getEntailedSentenceFieldBuilder();
          getEntityFieldBuilder();
          getRelationFieldBuilder();
          getMentionsFieldBuilder();
          getMentionsForCorefFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (tokenBuilder_ == null) {
          token_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          tokenBuilder_.clear();
        }
        tokenOffsetBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tokenOffsetEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sentenceIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        characterOffsetBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        characterOffsetEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        if (parseTreeBuilder_ == null) {
          parseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
        } else {
          parseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        if (binarizedParseTreeBuilder_ == null) {
          binarizedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
        } else {
          binarizedParseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        if (annotatedParseTreeBuilder_ == null) {
          annotatedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
        } else {
          annotatedParseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        sentiment_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        if (kBestParseTreesBuilder_ == null) {
          kBestParseTrees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
        } else {
          kBestParseTreesBuilder_.clear();
        }
        if (basicDependenciesBuilder_ == null) {
          basicDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
        } else {
          basicDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        if (collapsedDependenciesBuilder_ == null) {
          collapsedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
        } else {
          collapsedDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          collapsedCCProcessedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
        } else {
          collapsedCCProcessedDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        if (alternativeDependenciesBuilder_ == null) {
          alternativeDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
        } else {
          alternativeDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        if (openieTripleBuilder_ == null) {
          openieTriple_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
        } else {
          openieTripleBuilder_.clear();
        }
        if (kbpTripleBuilder_ == null) {
          kbpTriple_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
        } else {
          kbpTripleBuilder_.clear();
        }
        if (entailedSentenceBuilder_ == null) {
          entailedSentence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
        } else {
          entailedSentenceBuilder_.clear();
        }
        paragraph_ = 0;
        bitField0_ = (bitField0_ & ~0x00040000);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00080000);
        hasRelationAnnotations_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        if (entityBuilder_ == null) {
          entity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
        } else {
          entityBuilder_.clear();
        }
        if (relationBuilder_ == null) {
          relation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
        } else {
          relationBuilder_.clear();
        }
        hasNumerizedTokensAnnotation_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        if (mentionsBuilder_ == null) {
          mentions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
        } else {
          mentionsBuilder_.clear();
        }
        if (mentionsForCorefBuilder_ == null) {
          mentionsForCoref_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
        } else {
          mentionsForCorefBuilder_.clear();
        }
        hasCorefMentionsAnnotation_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        sentenceID_ = "";
        bitField0_ = (bitField0_ & ~0x08000000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (tokenBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            token_ = java.util.Collections.unmodifiableList(token_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.token_ = token_;
        } else {
          result.token_ = tokenBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.tokenOffsetBegin_ = tokenOffsetBegin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tokenOffsetEnd_ = tokenOffsetEnd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.sentenceIndex_ = sentenceIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.characterOffsetBegin_ = characterOffsetBegin_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.characterOffsetEnd_ = characterOffsetEnd_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000020;
        }
        if (parseTreeBuilder_ == null) {
          result.parseTree_ = parseTree_;
        } else {
          result.parseTree_ = parseTreeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000040;
        }
        if (binarizedParseTreeBuilder_ == null) {
          result.binarizedParseTree_ = binarizedParseTree_;
        } else {
          result.binarizedParseTree_ = binarizedParseTreeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000080;
        }
        if (annotatedParseTreeBuilder_ == null) {
          result.annotatedParseTree_ = annotatedParseTree_;
        } else {
          result.annotatedParseTree_ = annotatedParseTreeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000100;
        }
        result.sentiment_ = sentiment_;
        if (kBestParseTreesBuilder_ == null) {
          if (((bitField0_ & 0x00000400) == 0x00000400)) {
            kBestParseTrees_ = java.util.Collections.unmodifiableList(kBestParseTrees_);
            bitField0_ = (bitField0_ & ~0x00000400);
          }
          result.kBestParseTrees_ = kBestParseTrees_;
        } else {
          result.kBestParseTrees_ = kBestParseTreesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000200;
        }
        if (basicDependenciesBuilder_ == null) {
          result.basicDependencies_ = basicDependencies_;
        } else {
          result.basicDependencies_ = basicDependenciesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00000400;
        }
        if (collapsedDependenciesBuilder_ == null) {
          result.collapsedDependencies_ = collapsedDependencies_;
        } else {
          result.collapsedDependencies_ = collapsedDependenciesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00000800;
        }
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          result.collapsedCCProcessedDependencies_ = collapsedCCProcessedDependencies_;
        } else {
          result.collapsedCCProcessedDependencies_ = collapsedCCProcessedDependenciesBuilder_.build();
        }
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00001000;
        }
        if (alternativeDependenciesBuilder_ == null) {
          result.alternativeDependencies_ = alternativeDependencies_;
        } else {
          result.alternativeDependencies_ = alternativeDependenciesBuilder_.build();
        }
        if (openieTripleBuilder_ == null) {
          if (((bitField0_ & 0x00008000) == 0x00008000)) {
            openieTriple_ = java.util.Collections.unmodifiableList(openieTriple_);
            bitField0_ = (bitField0_ & ~0x00008000);
          }
          result.openieTriple_ = openieTriple_;
        } else {
          result.openieTriple_ = openieTripleBuilder_.build();
        }
        if (kbpTripleBuilder_ == null) {
          if (((bitField0_ & 0x00010000) == 0x00010000)) {
            kbpTriple_ = java.util.Collections.unmodifiableList(kbpTriple_);
            bitField0_ = (bitField0_ & ~0x00010000);
          }
          result.kbpTriple_ = kbpTriple_;
        } else {
          result.kbpTriple_ = kbpTripleBuilder_.build();
        }
        if (entailedSentenceBuilder_ == null) {
          if (((bitField0_ & 0x00020000) == 0x00020000)) {
            entailedSentence_ = java.util.Collections.unmodifiableList(entailedSentence_);
            bitField0_ = (bitField0_ & ~0x00020000);
          }
          result.entailedSentence_ = entailedSentence_;
        } else {
          result.entailedSentence_ = entailedSentenceBuilder_.build();
        }
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.paragraph_ = paragraph_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.hasRelationAnnotations_ = hasRelationAnnotations_;
        if (entityBuilder_ == null) {
          if (((bitField0_ & 0x00200000) == 0x00200000)) {
            entity_ = java.util.Collections.unmodifiableList(entity_);
            bitField0_ = (bitField0_ & ~0x00200000);
          }
          result.entity_ = entity_;
        } else {
          result.entity_ = entityBuilder_.build();
        }
        if (relationBuilder_ == null) {
          if (((bitField0_ & 0x00400000) == 0x00400000)) {
            relation_ = java.util.Collections.unmodifiableList(relation_);
            bitField0_ = (bitField0_ & ~0x00400000);
          }
          result.relation_ = relation_;
        } else {
          result.relation_ = relationBuilder_.build();
        }
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.hasNumerizedTokensAnnotation_ = hasNumerizedTokensAnnotation_;
        if (mentionsBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000)) {
            mentions_ = java.util.Collections.unmodifiableList(mentions_);
            bitField0_ = (bitField0_ & ~0x01000000);
          }
          result.mentions_ = mentions_;
        } else {
          result.mentions_ = mentionsBuilder_.build();
        }
        if (mentionsForCorefBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000)) {
            mentionsForCoref_ = java.util.Collections.unmodifiableList(mentionsForCoref_);
            bitField0_ = (bitField0_ & ~0x02000000);
          }
          result.mentionsForCoref_ = mentionsForCoref_;
        } else {
          result.mentionsForCoref_ = mentionsForCorefBuilder_.build();
        }
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.hasCorefMentionsAnnotation_ = hasCorefMentionsAnnotation_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.sentenceID_ = sentenceID_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence.getDefaultInstance()) return this;
        if (tokenBuilder_ == null) {
          if (!other.token_.isEmpty()) {
            if (token_.isEmpty()) {
              token_ = other.token_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureTokenIsMutable();
              token_.addAll(other.token_);
            }
            onChanged();
          }
        } else {
          if (!other.token_.isEmpty()) {
            if (tokenBuilder_.isEmpty()) {
              tokenBuilder_.dispose();
              tokenBuilder_ = null;
              token_ = other.token_;
              bitField0_ = (bitField0_ & ~0x00000001);
              tokenBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getTokenFieldBuilder() : null;
            } else {
              tokenBuilder_.addAllMessages(other.token_);
            }
          }
        }
        if (other.hasTokenOffsetBegin()) {
          setTokenOffsetBegin(other.getTokenOffsetBegin());
        }
        if (other.hasTokenOffsetEnd()) {
          setTokenOffsetEnd(other.getTokenOffsetEnd());
        }
        if (other.hasSentenceIndex()) {
          setSentenceIndex(other.getSentenceIndex());
        }
        if (other.hasCharacterOffsetBegin()) {
          setCharacterOffsetBegin(other.getCharacterOffsetBegin());
        }
        if (other.hasCharacterOffsetEnd()) {
          setCharacterOffsetEnd(other.getCharacterOffsetEnd());
        }
        if (other.hasParseTree()) {
          mergeParseTree(other.getParseTree());
        }
        if (other.hasBinarizedParseTree()) {
          mergeBinarizedParseTree(other.getBinarizedParseTree());
        }
        if (other.hasAnnotatedParseTree()) {
          mergeAnnotatedParseTree(other.getAnnotatedParseTree());
        }
        if (other.hasSentiment()) {
          bitField0_ |= 0x00000200;
          sentiment_ = other.sentiment_;
          onChanged();
        }
        if (kBestParseTreesBuilder_ == null) {
          if (!other.kBestParseTrees_.isEmpty()) {
            if (kBestParseTrees_.isEmpty()) {
              kBestParseTrees_ = other.kBestParseTrees_;
              bitField0_ = (bitField0_ & ~0x00000400);
            } else {
              ensureKBestParseTreesIsMutable();
              kBestParseTrees_.addAll(other.kBestParseTrees_);
            }
            onChanged();
          }
        } else {
          if (!other.kBestParseTrees_.isEmpty()) {
            if (kBestParseTreesBuilder_.isEmpty()) {
              kBestParseTreesBuilder_.dispose();
              kBestParseTreesBuilder_ = null;
              kBestParseTrees_ = other.kBestParseTrees_;
              bitField0_ = (bitField0_ & ~0x00000400);
              kBestParseTreesBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKBestParseTreesFieldBuilder() : null;
            } else {
              kBestParseTreesBuilder_.addAllMessages(other.kBestParseTrees_);
            }
          }
        }
        if (other.hasBasicDependencies()) {
          mergeBasicDependencies(other.getBasicDependencies());
        }
        if (other.hasCollapsedDependencies()) {
          mergeCollapsedDependencies(other.getCollapsedDependencies());
        }
        if (other.hasCollapsedCCProcessedDependencies()) {
          mergeCollapsedCCProcessedDependencies(other.getCollapsedCCProcessedDependencies());
        }
        if (other.hasAlternativeDependencies()) {
          mergeAlternativeDependencies(other.getAlternativeDependencies());
        }
        if (openieTripleBuilder_ == null) {
          if (!other.openieTriple_.isEmpty()) {
            if (openieTriple_.isEmpty()) {
              openieTriple_ = other.openieTriple_;
              bitField0_ = (bitField0_ & ~0x00008000);
            } else {
              ensureOpenieTripleIsMutable();
              openieTriple_.addAll(other.openieTriple_);
            }
            onChanged();
          }
        } else {
          if (!other.openieTriple_.isEmpty()) {
            if (openieTripleBuilder_.isEmpty()) {
              openieTripleBuilder_.dispose();
              openieTripleBuilder_ = null;
              openieTriple_ = other.openieTriple_;
              bitField0_ = (bitField0_ & ~0x00008000);
              openieTripleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOpenieTripleFieldBuilder() : null;
            } else {
              openieTripleBuilder_.addAllMessages(other.openieTriple_);
            }
          }
        }
        if (kbpTripleBuilder_ == null) {
          if (!other.kbpTriple_.isEmpty()) {
            if (kbpTriple_.isEmpty()) {
              kbpTriple_ = other.kbpTriple_;
              bitField0_ = (bitField0_ & ~0x00010000);
            } else {
              ensureKbpTripleIsMutable();
              kbpTriple_.addAll(other.kbpTriple_);
            }
            onChanged();
          }
        } else {
          if (!other.kbpTriple_.isEmpty()) {
            if (kbpTripleBuilder_.isEmpty()) {
              kbpTripleBuilder_.dispose();
              kbpTripleBuilder_ = null;
              kbpTriple_ = other.kbpTriple_;
              bitField0_ = (bitField0_ & ~0x00010000);
              kbpTripleBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getKbpTripleFieldBuilder() : null;
            } else {
              kbpTripleBuilder_.addAllMessages(other.kbpTriple_);
            }
          }
        }
        if (entailedSentenceBuilder_ == null) {
          if (!other.entailedSentence_.isEmpty()) {
            if (entailedSentence_.isEmpty()) {
              entailedSentence_ = other.entailedSentence_;
              bitField0_ = (bitField0_ & ~0x00020000);
            } else {
              ensureEntailedSentenceIsMutable();
              entailedSentence_.addAll(other.entailedSentence_);
            }
            onChanged();
          }
        } else {
          if (!other.entailedSentence_.isEmpty()) {
            if (entailedSentenceBuilder_.isEmpty()) {
              entailedSentenceBuilder_.dispose();
              entailedSentenceBuilder_ = null;
              entailedSentence_ = other.entailedSentence_;
              bitField0_ = (bitField0_ & ~0x00020000);
              entailedSentenceBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntailedSentenceFieldBuilder() : null;
            } else {
              entailedSentenceBuilder_.addAllMessages(other.entailedSentence_);
            }
          }
        }
        if (other.hasParagraph()) {
          setParagraph(other.getParagraph());
        }
        if (other.hasText()) {
          bitField0_ |= 0x00080000;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasHasRelationAnnotations()) {
          setHasRelationAnnotations(other.getHasRelationAnnotations());
        }
        if (entityBuilder_ == null) {
          if (!other.entity_.isEmpty()) {
            if (entity_.isEmpty()) {
              entity_ = other.entity_;
              bitField0_ = (bitField0_ & ~0x00200000);
            } else {
              ensureEntityIsMutable();
              entity_.addAll(other.entity_);
            }
            onChanged();
          }
        } else {
          if (!other.entity_.isEmpty()) {
            if (entityBuilder_.isEmpty()) {
              entityBuilder_.dispose();
              entityBuilder_ = null;
              entity_ = other.entity_;
              bitField0_ = (bitField0_ & ~0x00200000);
              entityBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEntityFieldBuilder() : null;
            } else {
              entityBuilder_.addAllMessages(other.entity_);
            }
          }
        }
        if (relationBuilder_ == null) {
          if (!other.relation_.isEmpty()) {
            if (relation_.isEmpty()) {
              relation_ = other.relation_;
              bitField0_ = (bitField0_ & ~0x00400000);
            } else {
              ensureRelationIsMutable();
              relation_.addAll(other.relation_);
            }
            onChanged();
          }
        } else {
          if (!other.relation_.isEmpty()) {
            if (relationBuilder_.isEmpty()) {
              relationBuilder_.dispose();
              relationBuilder_ = null;
              relation_ = other.relation_;
              bitField0_ = (bitField0_ & ~0x00400000);
              relationBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getRelationFieldBuilder() : null;
            } else {
              relationBuilder_.addAllMessages(other.relation_);
            }
          }
        }
        if (other.hasHasNumerizedTokensAnnotation()) {
          setHasNumerizedTokensAnnotation(other.getHasNumerizedTokensAnnotation());
        }
        if (mentionsBuilder_ == null) {
          if (!other.mentions_.isEmpty()) {
            if (mentions_.isEmpty()) {
              mentions_ = other.mentions_;
              bitField0_ = (bitField0_ & ~0x01000000);
            } else {
              ensureMentionsIsMutable();
              mentions_.addAll(other.mentions_);
            }
            onChanged();
          }
        } else {
          if (!other.mentions_.isEmpty()) {
            if (mentionsBuilder_.isEmpty()) {
              mentionsBuilder_.dispose();
              mentionsBuilder_ = null;
              mentions_ = other.mentions_;
              bitField0_ = (bitField0_ & ~0x01000000);
              mentionsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMentionsFieldBuilder() : null;
            } else {
              mentionsBuilder_.addAllMessages(other.mentions_);
            }
          }
        }
        if (mentionsForCorefBuilder_ == null) {
          if (!other.mentionsForCoref_.isEmpty()) {
            if (mentionsForCoref_.isEmpty()) {
              mentionsForCoref_ = other.mentionsForCoref_;
              bitField0_ = (bitField0_ & ~0x02000000);
            } else {
              ensureMentionsForCorefIsMutable();
              mentionsForCoref_.addAll(other.mentionsForCoref_);
            }
            onChanged();
          }
        } else {
          if (!other.mentionsForCoref_.isEmpty()) {
            if (mentionsForCorefBuilder_.isEmpty()) {
              mentionsForCorefBuilder_.dispose();
              mentionsForCorefBuilder_ = null;
              mentionsForCoref_ = other.mentionsForCoref_;
              bitField0_ = (bitField0_ & ~0x02000000);
              mentionsForCorefBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMentionsForCorefFieldBuilder() : null;
            } else {
              mentionsForCorefBuilder_.addAllMessages(other.mentionsForCoref_);
            }
          }
        }
        if (other.hasHasCorefMentionsAnnotation()) {
          setHasCorefMentionsAnnotation(other.getHasCorefMentionsAnnotation());
        }
        if (other.hasSentenceID()) {
          bitField0_ |= 0x08000000;
          sentenceID_ = other.sentenceID_;
          onChanged();
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTokenOffsetBegin()) {
          
          return false;
        }
        if (!hasTokenOffsetEnd()) {
          
          return false;
        }
        for (int i = 0; i < getTokenCount(); i++) {
          if (!getToken(i).isInitialized()) {
            
            return false;
          }
        }
        if (hasBasicDependencies()) {
          if (!getBasicDependencies().isInitialized()) {
            
            return false;
          }
        }
        if (hasCollapsedDependencies()) {
          if (!getCollapsedDependencies().isInitialized()) {
            
            return false;
          }
        }
        if (hasCollapsedCCProcessedDependencies()) {
          if (!getCollapsedCCProcessedDependencies().isInitialized()) {
            
            return false;
          }
        }
        if (hasAlternativeDependencies()) {
          if (!getAlternativeDependencies().isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getOpenieTripleCount(); i++) {
          if (!getOpenieTriple(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getKbpTripleCount(); i++) {
          if (!getKbpTriple(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getMentionsCount(); i++) {
          if (!getMentions(i).isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Sentence) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> token_ =
        java.util.Collections.emptyList();
      private void ensureTokenIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          token_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>(token_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> tokenBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token> getTokenList() {
        if (tokenBuilder_ == null) {
          return java.util.Collections.unmodifiableList(token_);
        } else {
          return tokenBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public int getTokenCount() {
        if (tokenBuilder_ == null) {
          return token_.size();
        } else {
          return tokenBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token getToken(int index) {
        if (tokenBuilder_ == null) {
          return token_.get(index);
        } else {
          return tokenBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder setToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenIsMutable();
          token_.set(index, value);
          onChanged();
        } else {
          tokenBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder setToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          ensureTokenIsMutable();
          token_.set(index, builderForValue.build());
          onChanged();
        } else {
          tokenBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder addToken(edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenIsMutable();
          token_.add(value);
          onChanged();
        } else {
          tokenBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder addToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token value) {
        if (tokenBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureTokenIsMutable();
          token_.add(index, value);
          onChanged();
        } else {
          tokenBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder addToken(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          ensureTokenIsMutable();
          token_.add(builderForValue.build());
          onChanged();
        } else {
          tokenBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder addToken(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder builderForValue) {
        if (tokenBuilder_ == null) {
          ensureTokenIsMutable();
          token_.add(index, builderForValue.build());
          onChanged();
        } else {
          tokenBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder addAllToken(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Token> values) {
        if (tokenBuilder_ == null) {
          ensureTokenIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, token_);
          onChanged();
        } else {
          tokenBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder clearToken() {
        if (tokenBuilder_ == null) {
          token_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          tokenBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public Builder removeToken(int index) {
        if (tokenBuilder_ == null) {
          ensureTokenIsMutable();
          token_.remove(index);
          onChanged();
        } else {
          tokenBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder getTokenBuilder(
          int index) {
        return getTokenFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder getTokenOrBuilder(
          int index) {
        if (tokenBuilder_ == null) {
          return token_.get(index);  } else {
          return tokenBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
           getTokenOrBuilderList() {
        if (tokenBuilder_ != null) {
          return tokenBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(token_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder addTokenBuilder() {
        return getTokenFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder addTokenBuilder(
          int index) {
        return getTokenFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Token token = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder> 
           getTokenBuilderList() {
        return getTokenFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder> 
          getTokenFieldBuilder() {
        if (tokenBuilder_ == null) {
          tokenBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Token, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder>(
                  token_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          token_ = null;
        }
        return tokenBuilder_;
      }

      private int tokenOffsetBegin_ ;
      /**
       * <code>required uint32 tokenOffsetBegin = 2;</code>
       */
      public boolean hasTokenOffsetBegin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tokenOffsetBegin = 2;</code>
       */
      public int getTokenOffsetBegin() {
        return tokenOffsetBegin_;
      }
      /**
       * <code>required uint32 tokenOffsetBegin = 2;</code>
       */
      public Builder setTokenOffsetBegin(int value) {
        bitField0_ |= 0x00000002;
        tokenOffsetBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tokenOffsetBegin = 2;</code>
       */
      public Builder clearTokenOffsetBegin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tokenOffsetBegin_ = 0;
        onChanged();
        return this;
      }

      private int tokenOffsetEnd_ ;
      /**
       * <code>required uint32 tokenOffsetEnd = 3;</code>
       */
      public boolean hasTokenOffsetEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 tokenOffsetEnd = 3;</code>
       */
      public int getTokenOffsetEnd() {
        return tokenOffsetEnd_;
      }
      /**
       * <code>required uint32 tokenOffsetEnd = 3;</code>
       */
      public Builder setTokenOffsetEnd(int value) {
        bitField0_ |= 0x00000004;
        tokenOffsetEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tokenOffsetEnd = 3;</code>
       */
      public Builder clearTokenOffsetEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tokenOffsetEnd_ = 0;
        onChanged();
        return this;
      }

      private int sentenceIndex_ ;
      /**
       * <code>optional uint32 sentenceIndex = 4;</code>
       */
      public boolean hasSentenceIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 sentenceIndex = 4;</code>
       */
      public int getSentenceIndex() {
        return sentenceIndex_;
      }
      /**
       * <code>optional uint32 sentenceIndex = 4;</code>
       */
      public Builder setSentenceIndex(int value) {
        bitField0_ |= 0x00000008;
        sentenceIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentenceIndex = 4;</code>
       */
      public Builder clearSentenceIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sentenceIndex_ = 0;
        onChanged();
        return this;
      }

      private int characterOffsetBegin_ ;
      /**
       * <code>optional uint32 characterOffsetBegin = 5;</code>
       */
      public boolean hasCharacterOffsetBegin() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 characterOffsetBegin = 5;</code>
       */
      public int getCharacterOffsetBegin() {
        return characterOffsetBegin_;
      }
      /**
       * <code>optional uint32 characterOffsetBegin = 5;</code>
       */
      public Builder setCharacterOffsetBegin(int value) {
        bitField0_ |= 0x00000010;
        characterOffsetBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 characterOffsetBegin = 5;</code>
       */
      public Builder clearCharacterOffsetBegin() {
        bitField0_ = (bitField0_ & ~0x00000010);
        characterOffsetBegin_ = 0;
        onChanged();
        return this;
      }

      private int characterOffsetEnd_ ;
      /**
       * <code>optional uint32 characterOffsetEnd = 6;</code>
       */
      public boolean hasCharacterOffsetEnd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 characterOffsetEnd = 6;</code>
       */
      public int getCharacterOffsetEnd() {
        return characterOffsetEnd_;
      }
      /**
       * <code>optional uint32 characterOffsetEnd = 6;</code>
       */
      public Builder setCharacterOffsetEnd(int value) {
        bitField0_ |= 0x00000020;
        characterOffsetEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 characterOffsetEnd = 6;</code>
       */
      public Builder clearCharacterOffsetEnd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        characterOffsetEnd_ = 0;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> parseTreeBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public boolean hasParseTree() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getParseTree() {
        if (parseTreeBuilder_ == null) {
          return parseTree_;
        } else {
          return parseTreeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public Builder setParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (parseTreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          parseTree_ = value;
          onChanged();
        } else {
          parseTreeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public Builder setParseTree(
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (parseTreeBuilder_ == null) {
          parseTree_ = builderForValue.build();
          onChanged();
        } else {
          parseTreeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public Builder mergeParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (parseTreeBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              parseTree_ != edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance()) {
            parseTree_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.newBuilder(parseTree_).mergeFrom(value).buildPartial();
          } else {
            parseTree_ = value;
          }
          onChanged();
        } else {
          parseTreeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public Builder clearParseTree() {
        if (parseTreeBuilder_ == null) {
          parseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
          onChanged();
        } else {
          parseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder getParseTreeBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getParseTreeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getParseTreeOrBuilder() {
        if (parseTreeBuilder_ != null) {
          return parseTreeBuilder_.getMessageOrBuilder();
        } else {
          return parseTree_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree parseTree = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
          getParseTreeFieldBuilder() {
        if (parseTreeBuilder_ == null) {
          parseTreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder>(
                  getParseTree(),
                  getParentForChildren(),
                  isClean());
          parseTree_ = null;
        }
        return parseTreeBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree binarizedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> binarizedParseTreeBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public boolean hasBinarizedParseTree() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getBinarizedParseTree() {
        if (binarizedParseTreeBuilder_ == null) {
          return binarizedParseTree_;
        } else {
          return binarizedParseTreeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public Builder setBinarizedParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (binarizedParseTreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          binarizedParseTree_ = value;
          onChanged();
        } else {
          binarizedParseTreeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public Builder setBinarizedParseTree(
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (binarizedParseTreeBuilder_ == null) {
          binarizedParseTree_ = builderForValue.build();
          onChanged();
        } else {
          binarizedParseTreeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public Builder mergeBinarizedParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (binarizedParseTreeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              binarizedParseTree_ != edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance()) {
            binarizedParseTree_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.newBuilder(binarizedParseTree_).mergeFrom(value).buildPartial();
          } else {
            binarizedParseTree_ = value;
          }
          onChanged();
        } else {
          binarizedParseTreeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public Builder clearBinarizedParseTree() {
        if (binarizedParseTreeBuilder_ == null) {
          binarizedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
          onChanged();
        } else {
          binarizedParseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder getBinarizedParseTreeBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getBinarizedParseTreeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getBinarizedParseTreeOrBuilder() {
        if (binarizedParseTreeBuilder_ != null) {
          return binarizedParseTreeBuilder_.getMessageOrBuilder();
        } else {
          return binarizedParseTree_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree binarizedParseTree = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
          getBinarizedParseTreeFieldBuilder() {
        if (binarizedParseTreeBuilder_ == null) {
          binarizedParseTreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder>(
                  getBinarizedParseTree(),
                  getParentForChildren(),
                  isClean());
          binarizedParseTree_ = null;
        }
        return binarizedParseTreeBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree annotatedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> annotatedParseTreeBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public boolean hasAnnotatedParseTree() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getAnnotatedParseTree() {
        if (annotatedParseTreeBuilder_ == null) {
          return annotatedParseTree_;
        } else {
          return annotatedParseTreeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public Builder setAnnotatedParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (annotatedParseTreeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          annotatedParseTree_ = value;
          onChanged();
        } else {
          annotatedParseTreeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public Builder setAnnotatedParseTree(
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (annotatedParseTreeBuilder_ == null) {
          annotatedParseTree_ = builderForValue.build();
          onChanged();
        } else {
          annotatedParseTreeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public Builder mergeAnnotatedParseTree(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (annotatedParseTreeBuilder_ == null) {
          if (((bitField0_ & 0x00000100) == 0x00000100) &&
              annotatedParseTree_ != edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance()) {
            annotatedParseTree_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.newBuilder(annotatedParseTree_).mergeFrom(value).buildPartial();
          } else {
            annotatedParseTree_ = value;
          }
          onChanged();
        } else {
          annotatedParseTreeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000100;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public Builder clearAnnotatedParseTree() {
        if (annotatedParseTreeBuilder_ == null) {
          annotatedParseTree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
          onChanged();
        } else {
          annotatedParseTreeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder getAnnotatedParseTreeBuilder() {
        bitField0_ |= 0x00000100;
        onChanged();
        return getAnnotatedParseTreeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getAnnotatedParseTreeOrBuilder() {
        if (annotatedParseTreeBuilder_ != null) {
          return annotatedParseTreeBuilder_.getMessageOrBuilder();
        } else {
          return annotatedParseTree_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.ParseTree annotatedParseTree = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
          getAnnotatedParseTreeFieldBuilder() {
        if (annotatedParseTreeBuilder_ == null) {
          annotatedParseTreeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder>(
                  getAnnotatedParseTree(),
                  getParentForChildren(),
                  isClean());
          annotatedParseTree_ = null;
        }
        return annotatedParseTreeBuilder_;
      }

      private java.lang.Object sentiment_ = "";
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public boolean hasSentiment() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public java.lang.String getSentiment() {
        java.lang.Object ref = sentiment_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sentiment_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public com.google.protobuf.ByteString
          getSentimentBytes() {
        java.lang.Object ref = sentiment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sentiment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public Builder setSentiment(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        sentiment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public Builder clearSentiment() {
        bitField0_ = (bitField0_ & ~0x00000200);
        sentiment_ = getDefaultInstance().getSentiment();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentiment = 33;</code>
       */
      public Builder setSentimentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        sentiment_ = value;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> kBestParseTrees_ =
        java.util.Collections.emptyList();
      private void ensureKBestParseTreesIsMutable() {
        if (!((bitField0_ & 0x00000400) == 0x00000400)) {
          kBestParseTrees_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree>(kBestParseTrees_);
          bitField0_ |= 0x00000400;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> kBestParseTreesBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> getKBestParseTreesList() {
        if (kBestParseTreesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kBestParseTrees_);
        } else {
          return kBestParseTreesBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public int getKBestParseTreesCount() {
        if (kBestParseTreesBuilder_ == null) {
          return kBestParseTrees_.size();
        } else {
          return kBestParseTreesBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getKBestParseTrees(int index) {
        if (kBestParseTreesBuilder_ == null) {
          return kBestParseTrees_.get(index);
        } else {
          return kBestParseTreesBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder setKBestParseTrees(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (kBestParseTreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.set(index, value);
          onChanged();
        } else {
          kBestParseTreesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder setKBestParseTrees(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (kBestParseTreesBuilder_ == null) {
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.set(index, builderForValue.build());
          onChanged();
        } else {
          kBestParseTreesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder addKBestParseTrees(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (kBestParseTreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.add(value);
          onChanged();
        } else {
          kBestParseTreesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder addKBestParseTrees(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (kBestParseTreesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.add(index, value);
          onChanged();
        } else {
          kBestParseTreesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder addKBestParseTrees(
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (kBestParseTreesBuilder_ == null) {
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.add(builderForValue.build());
          onChanged();
        } else {
          kBestParseTreesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder addKBestParseTrees(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (kBestParseTreesBuilder_ == null) {
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.add(index, builderForValue.build());
          onChanged();
        } else {
          kBestParseTreesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder addAllKBestParseTrees(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> values) {
        if (kBestParseTreesBuilder_ == null) {
          ensureKBestParseTreesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kBestParseTrees_);
          onChanged();
        } else {
          kBestParseTreesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder clearKBestParseTrees() {
        if (kBestParseTreesBuilder_ == null) {
          kBestParseTrees_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000400);
          onChanged();
        } else {
          kBestParseTreesBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public Builder removeKBestParseTrees(int index) {
        if (kBestParseTreesBuilder_ == null) {
          ensureKBestParseTreesIsMutable();
          kBestParseTrees_.remove(index);
          onChanged();
        } else {
          kBestParseTreesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder getKBestParseTreesBuilder(
          int index) {
        return getKBestParseTreesFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getKBestParseTreesOrBuilder(
          int index) {
        if (kBestParseTreesBuilder_ == null) {
          return kBestParseTrees_.get(index);  } else {
          return kBestParseTreesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
           getKBestParseTreesOrBuilderList() {
        if (kBestParseTreesBuilder_ != null) {
          return kBestParseTreesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kBestParseTrees_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder addKBestParseTreesBuilder() {
        return getKBestParseTreesFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder addKBestParseTreesBuilder(
          int index) {
        return getKBestParseTreesFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree kBestParseTrees = 34;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder> 
           getKBestParseTreesBuilderList() {
        return getKBestParseTreesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
          getKBestParseTreesFieldBuilder() {
        if (kBestParseTreesBuilder_ == null) {
          kBestParseTreesBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder>(
                  kBestParseTrees_,
                  ((bitField0_ & 0x00000400) == 0x00000400),
                  getParentForChildren(),
                  isClean());
          kBestParseTrees_ = null;
        }
        return kBestParseTreesBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph basicDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> basicDependenciesBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public boolean hasBasicDependencies() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getBasicDependencies() {
        if (basicDependenciesBuilder_ == null) {
          return basicDependencies_;
        } else {
          return basicDependenciesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public Builder setBasicDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (basicDependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          basicDependencies_ = value;
          onChanged();
        } else {
          basicDependenciesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public Builder setBasicDependencies(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder builderForValue) {
        if (basicDependenciesBuilder_ == null) {
          basicDependencies_ = builderForValue.build();
          onChanged();
        } else {
          basicDependenciesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public Builder mergeBasicDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (basicDependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00000800) == 0x00000800) &&
              basicDependencies_ != edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) {
            basicDependencies_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder(basicDependencies_).mergeFrom(value).buildPartial();
          } else {
            basicDependencies_ = value;
          }
          onChanged();
        } else {
          basicDependenciesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000800;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public Builder clearBasicDependencies() {
        if (basicDependenciesBuilder_ == null) {
          basicDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
          onChanged();
        } else {
          basicDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder getBasicDependenciesBuilder() {
        bitField0_ |= 0x00000800;
        onChanged();
        return getBasicDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getBasicDependenciesOrBuilder() {
        if (basicDependenciesBuilder_ != null) {
          return basicDependenciesBuilder_.getMessageOrBuilder();
        } else {
          return basicDependencies_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph basicDependencies = 8;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> 
          getBasicDependenciesFieldBuilder() {
        if (basicDependenciesBuilder_ == null) {
          basicDependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder>(
                  getBasicDependencies(),
                  getParentForChildren(),
                  isClean());
          basicDependencies_ = null;
        }
        return basicDependenciesBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph collapsedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> collapsedDependenciesBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public boolean hasCollapsedDependencies() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedDependencies() {
        if (collapsedDependenciesBuilder_ == null) {
          return collapsedDependencies_;
        } else {
          return collapsedDependenciesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public Builder setCollapsedDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (collapsedDependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          collapsedDependencies_ = value;
          onChanged();
        } else {
          collapsedDependenciesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public Builder setCollapsedDependencies(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder builderForValue) {
        if (collapsedDependenciesBuilder_ == null) {
          collapsedDependencies_ = builderForValue.build();
          onChanged();
        } else {
          collapsedDependenciesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public Builder mergeCollapsedDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (collapsedDependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00001000) == 0x00001000) &&
              collapsedDependencies_ != edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) {
            collapsedDependencies_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder(collapsedDependencies_).mergeFrom(value).buildPartial();
          } else {
            collapsedDependencies_ = value;
          }
          onChanged();
        } else {
          collapsedDependenciesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00001000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public Builder clearCollapsedDependencies() {
        if (collapsedDependenciesBuilder_ == null) {
          collapsedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
          onChanged();
        } else {
          collapsedDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00001000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder getCollapsedDependenciesBuilder() {
        bitField0_ |= 0x00001000;
        onChanged();
        return getCollapsedDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedDependenciesOrBuilder() {
        if (collapsedDependenciesBuilder_ != null) {
          return collapsedDependenciesBuilder_.getMessageOrBuilder();
        } else {
          return collapsedDependencies_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedDependencies = 9;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> 
          getCollapsedDependenciesFieldBuilder() {
        if (collapsedDependenciesBuilder_ == null) {
          collapsedDependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder>(
                  getCollapsedDependencies(),
                  getParentForChildren(),
                  isClean());
          collapsedDependencies_ = null;
        }
        return collapsedDependenciesBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph collapsedCCProcessedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> collapsedCCProcessedDependenciesBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public boolean hasCollapsedCCProcessedDependencies() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getCollapsedCCProcessedDependencies() {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          return collapsedCCProcessedDependencies_;
        } else {
          return collapsedCCProcessedDependenciesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public Builder setCollapsedCCProcessedDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          collapsedCCProcessedDependencies_ = value;
          onChanged();
        } else {
          collapsedCCProcessedDependenciesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public Builder setCollapsedCCProcessedDependencies(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder builderForValue) {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          collapsedCCProcessedDependencies_ = builderForValue.build();
          onChanged();
        } else {
          collapsedCCProcessedDependenciesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public Builder mergeCollapsedCCProcessedDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00002000) == 0x00002000) &&
              collapsedCCProcessedDependencies_ != edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) {
            collapsedCCProcessedDependencies_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder(collapsedCCProcessedDependencies_).mergeFrom(value).buildPartial();
          } else {
            collapsedCCProcessedDependencies_ = value;
          }
          onChanged();
        } else {
          collapsedCCProcessedDependenciesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00002000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public Builder clearCollapsedCCProcessedDependencies() {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          collapsedCCProcessedDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
          onChanged();
        } else {
          collapsedCCProcessedDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00002000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder getCollapsedCCProcessedDependenciesBuilder() {
        bitField0_ |= 0x00002000;
        onChanged();
        return getCollapsedCCProcessedDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getCollapsedCCProcessedDependenciesOrBuilder() {
        if (collapsedCCProcessedDependenciesBuilder_ != null) {
          return collapsedCCProcessedDependenciesBuilder_.getMessageOrBuilder();
        } else {
          return collapsedCCProcessedDependencies_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph collapsedCCProcessedDependencies = 10;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> 
          getCollapsedCCProcessedDependenciesFieldBuilder() {
        if (collapsedCCProcessedDependenciesBuilder_ == null) {
          collapsedCCProcessedDependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder>(
                  getCollapsedCCProcessedDependencies(),
                  getParentForChildren(),
                  isClean());
          collapsedCCProcessedDependencies_ = null;
        }
        return collapsedCCProcessedDependenciesBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph alternativeDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> alternativeDependenciesBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public boolean hasAlternativeDependencies() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getAlternativeDependencies() {
        if (alternativeDependenciesBuilder_ == null) {
          return alternativeDependencies_;
        } else {
          return alternativeDependenciesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public Builder setAlternativeDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (alternativeDependenciesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          alternativeDependencies_ = value;
          onChanged();
        } else {
          alternativeDependenciesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public Builder setAlternativeDependencies(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder builderForValue) {
        if (alternativeDependenciesBuilder_ == null) {
          alternativeDependencies_ = builderForValue.build();
          onChanged();
        } else {
          alternativeDependenciesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public Builder mergeAlternativeDependencies(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (alternativeDependenciesBuilder_ == null) {
          if (((bitField0_ & 0x00004000) == 0x00004000) &&
              alternativeDependencies_ != edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) {
            alternativeDependencies_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder(alternativeDependencies_).mergeFrom(value).buildPartial();
          } else {
            alternativeDependencies_ = value;
          }
          onChanged();
        } else {
          alternativeDependenciesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00004000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public Builder clearAlternativeDependencies() {
        if (alternativeDependenciesBuilder_ == null) {
          alternativeDependencies_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
          onChanged();
        } else {
          alternativeDependenciesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00004000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder getAlternativeDependenciesBuilder() {
        bitField0_ |= 0x00004000;
        onChanged();
        return getAlternativeDependenciesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getAlternativeDependenciesOrBuilder() {
        if (alternativeDependenciesBuilder_ != null) {
          return alternativeDependenciesBuilder_.getMessageOrBuilder();
        } else {
          return alternativeDependencies_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph alternativeDependencies = 13;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> 
          getAlternativeDependenciesFieldBuilder() {
        if (alternativeDependenciesBuilder_ == null) {
          alternativeDependenciesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder>(
                  getAlternativeDependencies(),
                  getParentForChildren(),
                  isClean());
          alternativeDependencies_ = null;
        }
        return alternativeDependenciesBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> openieTriple_ =
        java.util.Collections.emptyList();
      private void ensureOpenieTripleIsMutable() {
        if (!((bitField0_ & 0x00008000) == 0x00008000)) {
          openieTriple_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple>(openieTriple_);
          bitField0_ |= 0x00008000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> openieTripleBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> getOpenieTripleList() {
        if (openieTripleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(openieTriple_);
        } else {
          return openieTripleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public int getOpenieTripleCount() {
        if (openieTripleBuilder_ == null) {
          return openieTriple_.size();
        } else {
          return openieTripleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getOpenieTriple(int index) {
        if (openieTripleBuilder_ == null) {
          return openieTriple_.get(index);
        } else {
          return openieTripleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder setOpenieTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (openieTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpenieTripleIsMutable();
          openieTriple_.set(index, value);
          onChanged();
        } else {
          openieTripleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder setOpenieTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (openieTripleBuilder_ == null) {
          ensureOpenieTripleIsMutable();
          openieTriple_.set(index, builderForValue.build());
          onChanged();
        } else {
          openieTripleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder addOpenieTriple(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (openieTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpenieTripleIsMutable();
          openieTriple_.add(value);
          onChanged();
        } else {
          openieTripleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder addOpenieTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (openieTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOpenieTripleIsMutable();
          openieTriple_.add(index, value);
          onChanged();
        } else {
          openieTripleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder addOpenieTriple(
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (openieTripleBuilder_ == null) {
          ensureOpenieTripleIsMutable();
          openieTriple_.add(builderForValue.build());
          onChanged();
        } else {
          openieTripleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder addOpenieTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (openieTripleBuilder_ == null) {
          ensureOpenieTripleIsMutable();
          openieTriple_.add(index, builderForValue.build());
          onChanged();
        } else {
          openieTripleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder addAllOpenieTriple(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> values) {
        if (openieTripleBuilder_ == null) {
          ensureOpenieTripleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, openieTriple_);
          onChanged();
        } else {
          openieTripleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder clearOpenieTriple() {
        if (openieTripleBuilder_ == null) {
          openieTriple_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00008000);
          onChanged();
        } else {
          openieTripleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public Builder removeOpenieTriple(int index) {
        if (openieTripleBuilder_ == null) {
          ensureOpenieTripleIsMutable();
          openieTriple_.remove(index);
          onChanged();
        } else {
          openieTripleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder getOpenieTripleBuilder(
          int index) {
        return getOpenieTripleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getOpenieTripleOrBuilder(
          int index) {
        if (openieTripleBuilder_ == null) {
          return openieTriple_.get(index);  } else {
          return openieTripleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
           getOpenieTripleOrBuilderList() {
        if (openieTripleBuilder_ != null) {
          return openieTripleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(openieTriple_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder addOpenieTripleBuilder() {
        return getOpenieTripleFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder addOpenieTripleBuilder(
          int index) {
        return getOpenieTripleFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple openieTriple = 14;</code>
       *
       * <pre>
       * The OpenIE triples in the sentence
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder> 
           getOpenieTripleBuilderList() {
        return getOpenieTripleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
          getOpenieTripleFieldBuilder() {
        if (openieTripleBuilder_ == null) {
          openieTripleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder>(
                  openieTriple_,
                  ((bitField0_ & 0x00008000) == 0x00008000),
                  getParentForChildren(),
                  isClean());
          openieTriple_ = null;
        }
        return openieTripleBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> kbpTriple_ =
        java.util.Collections.emptyList();
      private void ensureKbpTripleIsMutable() {
        if (!((bitField0_ & 0x00010000) == 0x00010000)) {
          kbpTriple_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple>(kbpTriple_);
          bitField0_ |= 0x00010000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> kbpTripleBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> getKbpTripleList() {
        if (kbpTripleBuilder_ == null) {
          return java.util.Collections.unmodifiableList(kbpTriple_);
        } else {
          return kbpTripleBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public int getKbpTripleCount() {
        if (kbpTripleBuilder_ == null) {
          return kbpTriple_.size();
        } else {
          return kbpTripleBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getKbpTriple(int index) {
        if (kbpTripleBuilder_ == null) {
          return kbpTriple_.get(index);
        } else {
          return kbpTripleBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder setKbpTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (kbpTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKbpTripleIsMutable();
          kbpTriple_.set(index, value);
          onChanged();
        } else {
          kbpTripleBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder setKbpTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (kbpTripleBuilder_ == null) {
          ensureKbpTripleIsMutable();
          kbpTriple_.set(index, builderForValue.build());
          onChanged();
        } else {
          kbpTripleBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder addKbpTriple(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (kbpTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKbpTripleIsMutable();
          kbpTriple_.add(value);
          onChanged();
        } else {
          kbpTripleBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder addKbpTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple value) {
        if (kbpTripleBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureKbpTripleIsMutable();
          kbpTriple_.add(index, value);
          onChanged();
        } else {
          kbpTripleBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder addKbpTriple(
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (kbpTripleBuilder_ == null) {
          ensureKbpTripleIsMutable();
          kbpTriple_.add(builderForValue.build());
          onChanged();
        } else {
          kbpTripleBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder addKbpTriple(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder builderForValue) {
        if (kbpTripleBuilder_ == null) {
          ensureKbpTripleIsMutable();
          kbpTriple_.add(index, builderForValue.build());
          onChanged();
        } else {
          kbpTripleBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder addAllKbpTriple(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple> values) {
        if (kbpTripleBuilder_ == null) {
          ensureKbpTripleIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, kbpTriple_);
          onChanged();
        } else {
          kbpTripleBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder clearKbpTriple() {
        if (kbpTripleBuilder_ == null) {
          kbpTriple_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00010000);
          onChanged();
        } else {
          kbpTripleBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public Builder removeKbpTriple(int index) {
        if (kbpTripleBuilder_ == null) {
          ensureKbpTripleIsMutable();
          kbpTriple_.remove(index);
          onChanged();
        } else {
          kbpTripleBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder getKbpTripleBuilder(
          int index) {
        return getKbpTripleFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder getKbpTripleOrBuilder(
          int index) {
        if (kbpTripleBuilder_ == null) {
          return kbpTriple_.get(index);  } else {
          return kbpTripleBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
           getKbpTripleOrBuilderList() {
        if (kbpTripleBuilder_ != null) {
          return kbpTripleBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(kbpTriple_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder addKbpTripleBuilder() {
        return getKbpTripleFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder addKbpTripleBuilder(
          int index) {
        return getKbpTripleFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.RelationTriple kbpTriple = 16;</code>
       *
       * <pre>
       * The KBP triples in this sentence
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder> 
           getKbpTripleBuilderList() {
        return getKbpTripleFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder> 
          getKbpTripleFieldBuilder() {
        if (kbpTripleBuilder_ == null) {
          kbpTripleBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder>(
                  kbpTriple_,
                  ((bitField0_ & 0x00010000) == 0x00010000),
                  getParentForChildren(),
                  isClean());
          kbpTriple_ = null;
        }
        return kbpTripleBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> entailedSentence_ =
        java.util.Collections.emptyList();
      private void ensureEntailedSentenceIsMutable() {
        if (!((bitField0_ & 0x00020000) == 0x00020000)) {
          entailedSentence_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment>(entailedSentence_);
          bitField0_ |= 0x00020000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder> entailedSentenceBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> getEntailedSentenceList() {
        if (entailedSentenceBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entailedSentence_);
        } else {
          return entailedSentenceBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public int getEntailedSentenceCount() {
        if (entailedSentenceBuilder_ == null) {
          return entailedSentence_.size();
        } else {
          return entailedSentenceBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment getEntailedSentence(int index) {
        if (entailedSentenceBuilder_ == null) {
          return entailedSentence_.get(index);
        } else {
          return entailedSentenceBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder setEntailedSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment value) {
        if (entailedSentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntailedSentenceIsMutable();
          entailedSentence_.set(index, value);
          onChanged();
        } else {
          entailedSentenceBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder setEntailedSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder builderForValue) {
        if (entailedSentenceBuilder_ == null) {
          ensureEntailedSentenceIsMutable();
          entailedSentence_.set(index, builderForValue.build());
          onChanged();
        } else {
          entailedSentenceBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder addEntailedSentence(edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment value) {
        if (entailedSentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntailedSentenceIsMutable();
          entailedSentence_.add(value);
          onChanged();
        } else {
          entailedSentenceBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder addEntailedSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment value) {
        if (entailedSentenceBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntailedSentenceIsMutable();
          entailedSentence_.add(index, value);
          onChanged();
        } else {
          entailedSentenceBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder addEntailedSentence(
          edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder builderForValue) {
        if (entailedSentenceBuilder_ == null) {
          ensureEntailedSentenceIsMutable();
          entailedSentence_.add(builderForValue.build());
          onChanged();
        } else {
          entailedSentenceBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder addEntailedSentence(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder builderForValue) {
        if (entailedSentenceBuilder_ == null) {
          ensureEntailedSentenceIsMutable();
          entailedSentence_.add(index, builderForValue.build());
          onChanged();
        } else {
          entailedSentenceBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder addAllEntailedSentence(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment> values) {
        if (entailedSentenceBuilder_ == null) {
          ensureEntailedSentenceIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entailedSentence_);
          onChanged();
        } else {
          entailedSentenceBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder clearEntailedSentence() {
        if (entailedSentenceBuilder_ == null) {
          entailedSentence_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00020000);
          onChanged();
        } else {
          entailedSentenceBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public Builder removeEntailedSentence(int index) {
        if (entailedSentenceBuilder_ == null) {
          ensureEntailedSentenceIsMutable();
          entailedSentence_.remove(index);
          onChanged();
        } else {
          entailedSentenceBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder getEntailedSentenceBuilder(
          int index) {
        return getEntailedSentenceFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder getEntailedSentenceOrBuilder(
          int index) {
        if (entailedSentenceBuilder_ == null) {
          return entailedSentence_.get(index);  } else {
          return entailedSentenceBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder> 
           getEntailedSentenceOrBuilderList() {
        if (entailedSentenceBuilder_ != null) {
          return entailedSentenceBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entailedSentence_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder addEntailedSentenceBuilder() {
        return getEntailedSentenceFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder addEntailedSentenceBuilder(
          int index) {
        return getEntailedSentenceFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.SentenceFragment entailedSentence = 15;</code>
       *
       * <pre>
       * The entailed sentences, by natural logic
       * </pre>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder> 
           getEntailedSentenceBuilderList() {
        return getEntailedSentenceFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder> 
          getEntailedSentenceFieldBuilder() {
        if (entailedSentenceBuilder_ == null) {
          entailedSentenceBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder>(
                  entailedSentence_,
                  ((bitField0_ & 0x00020000) == 0x00020000),
                  getParentForChildren(),
                  isClean());
          entailedSentence_ = null;
        }
        return entailedSentenceBuilder_;
      }

      private int paragraph_ ;
      /**
       * <code>optional uint32 paragraph = 11;</code>
       */
      public boolean hasParagraph() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional uint32 paragraph = 11;</code>
       */
      public int getParagraph() {
        return paragraph_;
      }
      /**
       * <code>optional uint32 paragraph = 11;</code>
       */
      public Builder setParagraph(int value) {
        bitField0_ |= 0x00040000;
        paragraph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paragraph = 11;</code>
       */
      public Builder clearParagraph() {
        bitField0_ = (bitField0_ & ~0x00040000);
        paragraph_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00080000);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 12;</code>
       *
       * <pre>
       * Only needed if we're only saving the sentence.
       * </pre>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00080000;
        text_ = value;
        onChanged();
        return this;
      }

      private boolean hasRelationAnnotations_ ;
      /**
       * <code>optional bool hasRelationAnnotations = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public boolean hasHasRelationAnnotations() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool hasRelationAnnotations = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public boolean getHasRelationAnnotations() {
        return hasRelationAnnotations_;
      }
      /**
       * <code>optional bool hasRelationAnnotations = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public Builder setHasRelationAnnotations(boolean value) {
        bitField0_ |= 0x00100000;
        hasRelationAnnotations_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasRelationAnnotations = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public Builder clearHasRelationAnnotations() {
        bitField0_ = (bitField0_ & ~0x00100000);
        hasRelationAnnotations_ = false;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> entity_ =
        java.util.Collections.emptyList();
      private void ensureEntityIsMutable() {
        if (!((bitField0_ & 0x00200000) == 0x00200000)) {
          entity_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>(entity_);
          bitField0_ |= 0x00200000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> entityBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> getEntityList() {
        if (entityBuilder_ == null) {
          return java.util.Collections.unmodifiableList(entity_);
        } else {
          return entityBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public int getEntityCount() {
        if (entityBuilder_ == null) {
          return entity_.size();
        } else {
          return entityBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getEntity(int index) {
        if (entityBuilder_ == null) {
          return entity_.get(index);
        } else {
          return entityBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder setEntity(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (entityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityIsMutable();
          entity_.set(index, value);
          onChanged();
        } else {
          entityBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder setEntity(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (entityBuilder_ == null) {
          ensureEntityIsMutable();
          entity_.set(index, builderForValue.build());
          onChanged();
        } else {
          entityBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder addEntity(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (entityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityIsMutable();
          entity_.add(value);
          onChanged();
        } else {
          entityBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder addEntity(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (entityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEntityIsMutable();
          entity_.add(index, value);
          onChanged();
        } else {
          entityBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder addEntity(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (entityBuilder_ == null) {
          ensureEntityIsMutable();
          entity_.add(builderForValue.build());
          onChanged();
        } else {
          entityBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder addEntity(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (entityBuilder_ == null) {
          ensureEntityIsMutable();
          entity_.add(index, builderForValue.build());
          onChanged();
        } else {
          entityBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder addAllEntity(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> values) {
        if (entityBuilder_ == null) {
          ensureEntityIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, entity_);
          onChanged();
        } else {
          entityBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder clearEntity() {
        if (entityBuilder_ == null) {
          entity_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00200000);
          onChanged();
        } else {
          entityBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public Builder removeEntity(int index) {
        if (entityBuilder_ == null) {
          ensureEntityIsMutable();
          entity_.remove(index);
          onChanged();
        } else {
          entityBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder getEntityBuilder(
          int index) {
        return getEntityFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getEntityOrBuilder(
          int index) {
        if (entityBuilder_ == null) {
          return entity_.get(index);  } else {
          return entityBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
           getEntityOrBuilderList() {
        if (entityBuilder_ != null) {
          return entityBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(entity_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder addEntityBuilder() {
        return getEntityFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder addEntityBuilder(
          int index) {
        return getEntityFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity entity = 52;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder> 
           getEntityBuilderList() {
        return getEntityFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
          getEntityFieldBuilder() {
        if (entityBuilder_ == null) {
          entityBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder>(
                  entity_,
                  ((bitField0_ & 0x00200000) == 0x00200000),
                  getParentForChildren(),
                  isClean());
          entity_ = null;
        }
        return entityBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> relation_ =
        java.util.Collections.emptyList();
      private void ensureRelationIsMutable() {
        if (!((bitField0_ & 0x00400000) == 0x00400000)) {
          relation_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation>(relation_);
          bitField0_ |= 0x00400000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Relation, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder> relationBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> getRelationList() {
        if (relationBuilder_ == null) {
          return java.util.Collections.unmodifiableList(relation_);
        } else {
          return relationBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public int getRelationCount() {
        if (relationBuilder_ == null) {
          return relation_.size();
        } else {
          return relationBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation getRelation(int index) {
        if (relationBuilder_ == null) {
          return relation_.get(index);
        } else {
          return relationBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder setRelation(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation value) {
        if (relationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelationIsMutable();
          relation_.set(index, value);
          onChanged();
        } else {
          relationBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder setRelation(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder builderForValue) {
        if (relationBuilder_ == null) {
          ensureRelationIsMutable();
          relation_.set(index, builderForValue.build());
          onChanged();
        } else {
          relationBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder addRelation(edu.stanford.nlp.pipeline.CoreNLPProtos.Relation value) {
        if (relationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelationIsMutable();
          relation_.add(value);
          onChanged();
        } else {
          relationBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder addRelation(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation value) {
        if (relationBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureRelationIsMutable();
          relation_.add(index, value);
          onChanged();
        } else {
          relationBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder addRelation(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder builderForValue) {
        if (relationBuilder_ == null) {
          ensureRelationIsMutable();
          relation_.add(builderForValue.build());
          onChanged();
        } else {
          relationBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder addRelation(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder builderForValue) {
        if (relationBuilder_ == null) {
          ensureRelationIsMutable();
          relation_.add(index, builderForValue.build());
          onChanged();
        } else {
          relationBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder addAllRelation(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Relation> values) {
        if (relationBuilder_ == null) {
          ensureRelationIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, relation_);
          onChanged();
        } else {
          relationBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder clearRelation() {
        if (relationBuilder_ == null) {
          relation_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00400000);
          onChanged();
        } else {
          relationBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public Builder removeRelation(int index) {
        if (relationBuilder_ == null) {
          ensureRelationIsMutable();
          relation_.remove(index);
          onChanged();
        } else {
          relationBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder getRelationBuilder(
          int index) {
        return getRelationFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder getRelationOrBuilder(
          int index) {
        if (relationBuilder_ == null) {
          return relation_.get(index);  } else {
          return relationBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder> 
           getRelationOrBuilderList() {
        if (relationBuilder_ != null) {
          return relationBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(relation_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder addRelationBuilder() {
        return getRelationFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder addRelationBuilder(
          int index) {
        return getRelationFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Relation relation = 53;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder> 
           getRelationBuilderList() {
        return getRelationFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Relation, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder> 
          getRelationFieldBuilder() {
        if (relationBuilder_ == null) {
          relationBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Relation, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder>(
                  relation_,
                  ((bitField0_ & 0x00400000) == 0x00400000),
                  getParentForChildren(),
                  isClean());
          relation_ = null;
        }
        return relationBuilder_;
      }

      private boolean hasNumerizedTokensAnnotation_ ;
      /**
       * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
       */
      public boolean hasHasNumerizedTokensAnnotation() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
       */
      public boolean getHasNumerizedTokensAnnotation() {
        return hasNumerizedTokensAnnotation_;
      }
      /**
       * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
       */
      public Builder setHasNumerizedTokensAnnotation(boolean value) {
        bitField0_ |= 0x00800000;
        hasNumerizedTokensAnnotation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasNumerizedTokensAnnotation = 54;</code>
       */
      public Builder clearHasNumerizedTokensAnnotation() {
        bitField0_ = (bitField0_ & ~0x00800000);
        hasNumerizedTokensAnnotation_ = false;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> mentions_ =
        java.util.Collections.emptyList();
      private void ensureMentionsIsMutable() {
        if (!((bitField0_ & 0x01000000) == 0x01000000)) {
          mentions_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention>(mentions_);
          bitField0_ |= 0x01000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder> mentionsBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> getMentionsList() {
        if (mentionsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mentions_);
        } else {
          return mentionsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public int getMentionsCount() {
        if (mentionsBuilder_ == null) {
          return mentions_.size();
        } else {
          return mentionsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention getMentions(int index) {
        if (mentionsBuilder_ == null) {
          return mentions_.get(index);
        } else {
          return mentionsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder setMentions(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention value) {
        if (mentionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsIsMutable();
          mentions_.set(index, value);
          onChanged();
        } else {
          mentionsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder setMentions(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder builderForValue) {
        if (mentionsBuilder_ == null) {
          ensureMentionsIsMutable();
          mentions_.set(index, builderForValue.build());
          onChanged();
        } else {
          mentionsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder addMentions(edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention value) {
        if (mentionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsIsMutable();
          mentions_.add(value);
          onChanged();
        } else {
          mentionsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder addMentions(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention value) {
        if (mentionsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsIsMutable();
          mentions_.add(index, value);
          onChanged();
        } else {
          mentionsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder addMentions(
          edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder builderForValue) {
        if (mentionsBuilder_ == null) {
          ensureMentionsIsMutable();
          mentions_.add(builderForValue.build());
          onChanged();
        } else {
          mentionsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder addMentions(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder builderForValue) {
        if (mentionsBuilder_ == null) {
          ensureMentionsIsMutable();
          mentions_.add(index, builderForValue.build());
          onChanged();
        } else {
          mentionsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder addAllMentions(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention> values) {
        if (mentionsBuilder_ == null) {
          ensureMentionsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mentions_);
          onChanged();
        } else {
          mentionsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder clearMentions() {
        if (mentionsBuilder_ == null) {
          mentions_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x01000000);
          onChanged();
        } else {
          mentionsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public Builder removeMentions(int index) {
        if (mentionsBuilder_ == null) {
          ensureMentionsIsMutable();
          mentions_.remove(index);
          onChanged();
        } else {
          mentionsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder getMentionsBuilder(
          int index) {
        return getMentionsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder getMentionsOrBuilder(
          int index) {
        if (mentionsBuilder_ == null) {
          return mentions_.get(index);  } else {
          return mentionsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder> 
           getMentionsOrBuilderList() {
        if (mentionsBuilder_ != null) {
          return mentionsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mentions_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder addMentionsBuilder() {
        return getMentionsFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder addMentionsBuilder(
          int index) {
        return getMentionsFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.NERMention mentions = 55;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder> 
           getMentionsBuilderList() {
        return getMentionsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder> 
          getMentionsFieldBuilder() {
        if (mentionsBuilder_ == null) {
          mentionsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder>(
                  mentions_,
                  ((bitField0_ & 0x01000000) == 0x01000000),
                  getParentForChildren(),
                  isClean());
          mentions_ = null;
        }
        return mentionsBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> mentionsForCoref_ =
        java.util.Collections.emptyList();
      private void ensureMentionsForCorefIsMutable() {
        if (!((bitField0_ & 0x02000000) == 0x02000000)) {
          mentionsForCoref_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention>(mentionsForCoref_);
          bitField0_ |= 0x02000000;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Mention, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder> mentionsForCorefBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> getMentionsForCorefList() {
        if (mentionsForCorefBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mentionsForCoref_);
        } else {
          return mentionsForCorefBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public int getMentionsForCorefCount() {
        if (mentionsForCorefBuilder_ == null) {
          return mentionsForCoref_.size();
        } else {
          return mentionsForCorefBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention getMentionsForCoref(int index) {
        if (mentionsForCorefBuilder_ == null) {
          return mentionsForCoref_.get(index);
        } else {
          return mentionsForCorefBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder setMentionsForCoref(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention value) {
        if (mentionsForCorefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.set(index, value);
          onChanged();
        } else {
          mentionsForCorefBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder setMentionsForCoref(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder builderForValue) {
        if (mentionsForCorefBuilder_ == null) {
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.set(index, builderForValue.build());
          onChanged();
        } else {
          mentionsForCorefBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder addMentionsForCoref(edu.stanford.nlp.pipeline.CoreNLPProtos.Mention value) {
        if (mentionsForCorefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.add(value);
          onChanged();
        } else {
          mentionsForCorefBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder addMentionsForCoref(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention value) {
        if (mentionsForCorefBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.add(index, value);
          onChanged();
        } else {
          mentionsForCorefBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder addMentionsForCoref(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder builderForValue) {
        if (mentionsForCorefBuilder_ == null) {
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.add(builderForValue.build());
          onChanged();
        } else {
          mentionsForCorefBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder addMentionsForCoref(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder builderForValue) {
        if (mentionsForCorefBuilder_ == null) {
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.add(index, builderForValue.build());
          onChanged();
        } else {
          mentionsForCorefBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder addAllMentionsForCoref(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Mention> values) {
        if (mentionsForCorefBuilder_ == null) {
          ensureMentionsForCorefIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mentionsForCoref_);
          onChanged();
        } else {
          mentionsForCorefBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder clearMentionsForCoref() {
        if (mentionsForCorefBuilder_ == null) {
          mentionsForCoref_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x02000000);
          onChanged();
        } else {
          mentionsForCorefBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public Builder removeMentionsForCoref(int index) {
        if (mentionsForCorefBuilder_ == null) {
          ensureMentionsForCorefIsMutable();
          mentionsForCoref_.remove(index);
          onChanged();
        } else {
          mentionsForCorefBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder getMentionsForCorefBuilder(
          int index) {
        return getMentionsForCorefFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder getMentionsForCorefOrBuilder(
          int index) {
        if (mentionsForCorefBuilder_ == null) {
          return mentionsForCoref_.get(index);  } else {
          return mentionsForCorefBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder> 
           getMentionsForCorefOrBuilderList() {
        if (mentionsForCorefBuilder_ != null) {
          return mentionsForCorefBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mentionsForCoref_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder addMentionsForCorefBuilder() {
        return getMentionsForCorefFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder addMentionsForCorefBuilder(
          int index) {
        return getMentionsForCorefFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Mention mentionsForCoref = 56;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder> 
           getMentionsForCorefBuilderList() {
        return getMentionsForCorefFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Mention, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder> 
          getMentionsForCorefFieldBuilder() {
        if (mentionsForCorefBuilder_ == null) {
          mentionsForCorefBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Mention, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder>(
                  mentionsForCoref_,
                  ((bitField0_ & 0x02000000) == 0x02000000),
                  getParentForChildren(),
                  isClean());
          mentionsForCoref_ = null;
        }
        return mentionsForCorefBuilder_;
      }

      private boolean hasCorefMentionsAnnotation_ ;
      /**
       * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
       */
      public boolean hasHasCorefMentionsAnnotation() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
       */
      public boolean getHasCorefMentionsAnnotation() {
        return hasCorefMentionsAnnotation_;
      }
      /**
       * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
       */
      public Builder setHasCorefMentionsAnnotation(boolean value) {
        bitField0_ |= 0x04000000;
        hasCorefMentionsAnnotation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasCorefMentionsAnnotation = 57;</code>
       */
      public Builder clearHasCorefMentionsAnnotation() {
        bitField0_ = (bitField0_ & ~0x04000000);
        hasCorefMentionsAnnotation_ = false;
        onChanged();
        return this;
      }

      private java.lang.Object sentenceID_ = "";
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public boolean hasSentenceID() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public java.lang.String getSentenceID() {
        java.lang.Object ref = sentenceID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sentenceID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSentenceIDBytes() {
        java.lang.Object ref = sentenceID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sentenceID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public Builder setSentenceID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sentenceID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public Builder clearSentenceID() {
        bitField0_ = (bitField0_ & ~0x08000000);
        sentenceID_ = getDefaultInstance().getSentenceID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentenceID = 58;</code>
       *
       * <pre>
       * Useful when storing sentences (e.g. ForEach)
       * </pre>
       */
      public Builder setSentenceIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sentenceID_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Sentence)
    }

    static {
      defaultInstance = new Sentence(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Sentence)
  }

  public interface TokenOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Token)
      com.google.protobuf.GeneratedMessage.
          ExtendableMessageOrBuilder<Token> {

    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    boolean hasWord();
    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    java.lang.String getWord();
    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    com.google.protobuf.ByteString
        getWordBytes();

    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    boolean hasPos();
    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    java.lang.String getPos();
    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    com.google.protobuf.ByteString
        getPosBytes();

    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    boolean hasCategory();
    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    java.lang.String getCategory();
    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    com.google.protobuf.ByteString
        getCategoryBytes();

    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    boolean hasBefore();
    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    java.lang.String getBefore();
    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    com.google.protobuf.ByteString
        getBeforeBytes();

    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    boolean hasAfter();
    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    java.lang.String getAfter();
    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    com.google.protobuf.ByteString
        getAfterBytes();

    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    boolean hasOriginalText();
    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    java.lang.String getOriginalText();
    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    com.google.protobuf.ByteString
        getOriginalTextBytes();

    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    boolean hasNer();
    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    java.lang.String getNer();
    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    com.google.protobuf.ByteString
        getNerBytes();

    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    boolean hasNormalizedNER();
    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    java.lang.String getNormalizedNER();
    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    com.google.protobuf.ByteString
        getNormalizedNERBytes();

    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    boolean hasLemma();
    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    java.lang.String getLemma();
    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    com.google.protobuf.ByteString
        getLemmaBytes();

    /**
     * <code>optional uint32 beginChar = 11;</code>
     *
     * <pre>
     * The character offset begin, in the document
     * </pre>
     */
    boolean hasBeginChar();
    /**
     * <code>optional uint32 beginChar = 11;</code>
     *
     * <pre>
     * The character offset begin, in the document
     * </pre>
     */
    int getBeginChar();

    /**
     * <code>optional uint32 endChar = 12;</code>
     *
     * <pre>
     * The character offset end, in the document
     * </pre>
     */
    boolean hasEndChar();
    /**
     * <code>optional uint32 endChar = 12;</code>
     *
     * <pre>
     * The character offset end, in the document
     * </pre>
     */
    int getEndChar();

    /**
     * <code>optional uint32 utterance = 13;</code>
     *
     * <pre>
     * The utterance tag used in dcoref
     * </pre>
     */
    boolean hasUtterance();
    /**
     * <code>optional uint32 utterance = 13;</code>
     *
     * <pre>
     * The utterance tag used in dcoref
     * </pre>
     */
    int getUtterance();

    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    boolean hasSpeaker();
    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    java.lang.String getSpeaker();
    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    com.google.protobuf.ByteString
        getSpeakerBytes();

    /**
     * <code>optional uint32 beginIndex = 15;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    boolean hasBeginIndex();
    /**
     * <code>optional uint32 beginIndex = 15;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    int getBeginIndex();

    /**
     * <code>optional uint32 endIndex = 16;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    boolean hasEndIndex();
    /**
     * <code>optional uint32 endIndex = 16;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    int getEndIndex();

    /**
     * <code>optional uint32 tokenBeginIndex = 17;</code>
     *
     * <pre>
     * The begin index of the token
     * </pre>
     */
    boolean hasTokenBeginIndex();
    /**
     * <code>optional uint32 tokenBeginIndex = 17;</code>
     *
     * <pre>
     * The begin index of the token
     * </pre>
     */
    int getTokenBeginIndex();

    /**
     * <code>optional uint32 tokenEndIndex = 18;</code>
     *
     * <pre>
     * The end index of the token
     * </pre>
     */
    boolean hasTokenEndIndex();
    /**
     * <code>optional uint32 tokenEndIndex = 18;</code>
     *
     * <pre>
     * The end index of the token
     * </pre>
     */
    int getTokenEndIndex();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    boolean hasTimexValue();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimexValue();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexValueOrBuilder();

    /**
     * <code>optional bool hasXmlContext = 21;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    boolean hasHasXmlContext();
    /**
     * <code>optional bool hasXmlContext = 21;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    boolean getHasXmlContext();

    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    com.google.protobuf.ProtocolStringList
        getXmlContextList();
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    int getXmlContextCount();
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    java.lang.String getXmlContext(int index);
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    com.google.protobuf.ByteString
        getXmlContextBytes(int index);

    /**
     * <code>optional uint32 corefClusterID = 23;</code>
     *
     * <pre>
     * The [primary] cluster id for this token
     * </pre>
     */
    boolean hasCorefClusterID();
    /**
     * <code>optional uint32 corefClusterID = 23;</code>
     *
     * <pre>
     * The [primary] cluster id for this token
     * </pre>
     */
    int getCorefClusterID();

    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    boolean hasAnswer();
    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    java.lang.String getAnswer();
    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    com.google.protobuf.ByteString
        getAnswerBytes();

    /**
     * <code>optional uint32 headWordIndex = 26;</code>
     *
     * <pre>
     *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
     * </pre>
     */
    boolean hasHeadWordIndex();
    /**
     * <code>optional uint32 headWordIndex = 26;</code>
     *
     * <pre>
     *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
     * </pre>
     */
    int getHeadWordIndex();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    boolean hasOperator();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Operator getOperator();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder getOperatorOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    boolean hasPolarity();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity getPolarity();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder getPolarityOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    boolean hasSpan();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Span getSpan();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getSpanOrBuilder();

    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    boolean hasSentiment();
    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    java.lang.String getSentiment();
    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    com.google.protobuf.ByteString
        getSentimentBytes();

    /**
     * <code>optional int32 quotationIndex = 31;</code>
     *
     * <pre>
     * The index of the quotation this token refers to
     * </pre>
     */
    boolean hasQuotationIndex();
    /**
     * <code>optional int32 quotationIndex = 31;</code>
     *
     * <pre>
     * The index of the quotation this token refers to
     * </pre>
     */
    int getQuotationIndex();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    boolean hasConllUFeatures();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString getConllUFeatures();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder getConllUFeaturesOrBuilder();

    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    boolean hasCoarseTag();
    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    java.lang.String getCoarseTag();
    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    com.google.protobuf.ByteString
        getCoarseTagBytes();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    boolean hasConllUTokenSpan();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Span getConllUTokenSpan();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getConllUTokenSpanOrBuilder();

    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    boolean hasConllUMisc();
    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    java.lang.String getConllUMisc();
    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    com.google.protobuf.ByteString
        getConllUMiscBytes();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    boolean hasConllUSecondaryDeps();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString getConllUSecondaryDeps();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder getConllUSecondaryDepsOrBuilder();

    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    boolean hasWikipediaEntity();
    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    java.lang.String getWikipediaEntity();
    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    com.google.protobuf.ByteString
        getWikipediaEntityBytes();

    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    boolean hasGender();
    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    java.lang.String getGender();
    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    com.google.protobuf.ByteString
        getGenderBytes();

    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    boolean hasTrueCase();
    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    java.lang.String getTrueCase();
    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    com.google.protobuf.ByteString
        getTrueCaseBytes();

    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    boolean hasTrueCaseText();
    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    java.lang.String getTrueCaseText();
    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    com.google.protobuf.ByteString
        getTrueCaseTextBytes();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Token}
   *
   * <pre>
   * The serialized version of a Token (a CoreLabel).
   * </pre>
   */
  public static final class Token extends
      com.google.protobuf.GeneratedMessage.ExtendableMessage<
        Token> implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Token)
      TokenOrBuilder {
    // Use Token.newBuilder() to construct.
    private Token(com.google.protobuf.GeneratedMessage.ExtendableBuilder<edu.stanford.nlp.pipeline.CoreNLPProtos.Token, ?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Token(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Token defaultInstance;
    public static Token getDefaultInstance() {
      return defaultInstance;
    }

    public Token getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Token(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              word_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              pos_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              value_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              category_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              before_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              after_ = bs;
              break;
            }
            case 58: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              originalText_ = bs;
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              ner_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000100;
              normalizedNER_ = bs;
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              lemma_ = bs;
              break;
            }
            case 88: {
              bitField0_ |= 0x00000400;
              beginChar_ = input.readUInt32();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000800;
              endChar_ = input.readUInt32();
              break;
            }
            case 104: {
              bitField0_ |= 0x00001000;
              utterance_ = input.readUInt32();
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              speaker_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              beginIndex_ = input.readUInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              endIndex_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              tokenBeginIndex_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              tokenEndIndex_ = input.readUInt32();
              break;
            }
            case 154: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder subBuilder = null;
              if (((bitField0_ & 0x00040000) == 0x00040000)) {
                subBuilder = timexValue_.toBuilder();
              }
              timexValue_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timexValue_);
                timexValue_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00040000;
              break;
            }
            case 168: {
              bitField0_ |= 0x00080000;
              hasXmlContext_ = input.readBool();
              break;
            }
            case 178: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
                xmlContext_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00100000;
              }
              xmlContext_.add(bs);
              break;
            }
            case 184: {
              bitField0_ |= 0x00100000;
              corefClusterID_ = input.readUInt32();
              break;
            }
            case 194: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00200000;
              answer_ = bs;
              break;
            }
            case 208: {
              bitField0_ |= 0x00400000;
              headWordIndex_ = input.readUInt32();
              break;
            }
            case 218: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder subBuilder = null;
              if (((bitField0_ & 0x00800000) == 0x00800000)) {
                subBuilder = operator_.toBuilder();
              }
              operator_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(operator_);
                operator_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00800000;
              break;
            }
            case 226: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder subBuilder = null;
              if (((bitField0_ & 0x01000000) == 0x01000000)) {
                subBuilder = polarity_.toBuilder();
              }
              polarity_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(polarity_);
                polarity_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x01000000;
              break;
            }
            case 234: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder subBuilder = null;
              if (((bitField0_ & 0x02000000) == 0x02000000)) {
                subBuilder = span_.toBuilder();
              }
              span_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Span.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(span_);
                span_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x02000000;
              break;
            }
            case 242: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x04000000;
              sentiment_ = bs;
              break;
            }
            case 248: {
              bitField0_ |= 0x08000000;
              quotationIndex_ = input.readInt32();
              break;
            }
            case 258: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder subBuilder = null;
              if (((bitField0_ & 0x10000000) == 0x10000000)) {
                subBuilder = conllUFeatures_.toBuilder();
              }
              conllUFeatures_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(conllUFeatures_);
                conllUFeatures_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x10000000;
              break;
            }
            case 266: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x20000000;
              coarseTag_ = bs;
              break;
            }
            case 274: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = conllUTokenSpan_.toBuilder();
              }
              conllUTokenSpan_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Span.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(conllUTokenSpan_);
                conllUTokenSpan_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 282: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x80000000;
              conllUMisc_ = bs;
              break;
            }
            case 290: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder subBuilder = null;
              if (((bitField1_ & 0x00000001) == 0x00000001)) {
                subBuilder = conllUSecondaryDeps_.toBuilder();
              }
              conllUSecondaryDeps_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(conllUSecondaryDeps_);
                conllUSecondaryDeps_ = subBuilder.buildPartial();
              }
              bitField1_ |= 0x00000001;
              break;
            }
            case 298: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000002;
              wikipediaEntity_ = bs;
              break;
            }
            case 410: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000004;
              gender_ = bs;
              break;
            }
            case 418: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000008;
              trueCase_ = bs;
              break;
            }
            case 426: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField1_ |= 0x00000010;
              trueCaseText_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00100000) == 0x00100000)) {
          xmlContext_ = xmlContext_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Token_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Token_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Token.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.class);
    }

    public static com.google.protobuf.Parser<Token> PARSER =
        new com.google.protobuf.AbstractParser<Token>() {
      public Token parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Token(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Token> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    private int bitField1_;
    public static final int WORD_FIELD_NUMBER = 1;
    private java.lang.Object word_;
    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    public boolean hasWord() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    public java.lang.String getWord() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          word_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string word = 1;</code>
     *
     * <pre>
     * Fields set by the default annotators [new CoreNLP(new Properties())]
     * </pre>
     */
    public com.google.protobuf.ByteString
        getWordBytes() {
      java.lang.Object ref = word_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        word_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int POS_FIELD_NUMBER = 2;
    private java.lang.Object pos_;
    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    public boolean hasPos() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    public java.lang.String getPos() {
      java.lang.Object ref = pos_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          pos_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string pos = 2;</code>
     *
     * <pre>
     * The word's part of speech tag
     * </pre>
     */
    public com.google.protobuf.ByteString
        getPosBytes() {
      java.lang.Object ref = pos_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pos_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int VALUE_FIELD_NUMBER = 3;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 3;</code>
     *
     * <pre>
     * The word's 'value', (e.g., parse tree node)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CATEGORY_FIELD_NUMBER = 4;
    private java.lang.Object category_;
    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    public boolean hasCategory() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    public java.lang.String getCategory() {
      java.lang.Object ref = category_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          category_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string category = 4;</code>
     *
     * <pre>
     * The word's 'category' (e.g., parse tree node)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCategoryBytes() {
      java.lang.Object ref = category_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        category_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEFORE_FIELD_NUMBER = 5;
    private java.lang.Object before_;
    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    public boolean hasBefore() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    public java.lang.String getBefore() {
      java.lang.Object ref = before_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          before_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string before = 5;</code>
     *
     * <pre>
     * The whitespace/xml before the token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getBeforeBytes() {
      java.lang.Object ref = before_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        before_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int AFTER_FIELD_NUMBER = 6;
    private java.lang.Object after_;
    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    public boolean hasAfter() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    public java.lang.String getAfter() {
      java.lang.Object ref = after_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          after_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string after = 6;</code>
     *
     * <pre>
     * The whitespace/xml after the token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAfterBytes() {
      java.lang.Object ref = after_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        after_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGINALTEXT_FIELD_NUMBER = 7;
    private java.lang.Object originalText_;
    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    public boolean hasOriginalText() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    public java.lang.String getOriginalText() {
      java.lang.Object ref = originalText_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          originalText_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string originalText = 7;</code>
     *
     * <pre>
     * The original text for this token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getOriginalTextBytes() {
      java.lang.Object ref = originalText_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        originalText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NER_FIELD_NUMBER = 8;
    private java.lang.Object ner_;
    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    public boolean hasNer() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    public java.lang.String getNer() {
      java.lang.Object ref = ner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ner_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string ner = 8;</code>
     *
     * <pre>
     * The word's NER tag
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNerBytes() {
      java.lang.Object ref = ner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALIZEDNER_FIELD_NUMBER = 9;
    private java.lang.Object normalizedNER_;
    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    public boolean hasNormalizedNER() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    public java.lang.String getNormalizedNER() {
      java.lang.Object ref = normalizedNER_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          normalizedNER_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string normalizedNER = 9;</code>
     *
     * <pre>
     * The word's normalized NER tag
     * </pre>
     */
    public com.google.protobuf.ByteString
        getNormalizedNERBytes() {
      java.lang.Object ref = normalizedNER_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normalizedNER_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int LEMMA_FIELD_NUMBER = 10;
    private java.lang.Object lemma_;
    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    public boolean hasLemma() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    public java.lang.String getLemma() {
      java.lang.Object ref = lemma_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          lemma_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string lemma = 10;</code>
     *
     * <pre>
     * The word's lemma
     * </pre>
     */
    public com.google.protobuf.ByteString
        getLemmaBytes() {
      java.lang.Object ref = lemma_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        lemma_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGINCHAR_FIELD_NUMBER = 11;
    private int beginChar_;
    /**
     * <code>optional uint32 beginChar = 11;</code>
     *
     * <pre>
     * The character offset begin, in the document
     * </pre>
     */
    public boolean hasBeginChar() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional uint32 beginChar = 11;</code>
     *
     * <pre>
     * The character offset begin, in the document
     * </pre>
     */
    public int getBeginChar() {
      return beginChar_;
    }

    public static final int ENDCHAR_FIELD_NUMBER = 12;
    private int endChar_;
    /**
     * <code>optional uint32 endChar = 12;</code>
     *
     * <pre>
     * The character offset end, in the document
     * </pre>
     */
    public boolean hasEndChar() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 endChar = 12;</code>
     *
     * <pre>
     * The character offset end, in the document
     * </pre>
     */
    public int getEndChar() {
      return endChar_;
    }

    public static final int UTTERANCE_FIELD_NUMBER = 13;
    private int utterance_;
    /**
     * <code>optional uint32 utterance = 13;</code>
     *
     * <pre>
     * The utterance tag used in dcoref
     * </pre>
     */
    public boolean hasUtterance() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional uint32 utterance = 13;</code>
     *
     * <pre>
     * The utterance tag used in dcoref
     * </pre>
     */
    public int getUtterance() {
      return utterance_;
    }

    public static final int SPEAKER_FIELD_NUMBER = 14;
    private java.lang.Object speaker_;
    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    public boolean hasSpeaker() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    public java.lang.String getSpeaker() {
      java.lang.Object ref = speaker_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          speaker_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string speaker = 14;</code>
     *
     * <pre>
     * The speaker speaking this word
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSpeakerBytes() {
      java.lang.Object ref = speaker_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        speaker_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGININDEX_FIELD_NUMBER = 15;
    private int beginIndex_;
    /**
     * <code>optional uint32 beginIndex = 15;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    public boolean hasBeginIndex() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 beginIndex = 15;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    public int getBeginIndex() {
      return beginIndex_;
    }

    public static final int ENDINDEX_FIELD_NUMBER = 16;
    private int endIndex_;
    /**
     * <code>optional uint32 endIndex = 16;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    public boolean hasEndIndex() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 endIndex = 16;</code>
     *
     * <pre>
     * The begin index of, e.g., a span
     * </pre>
     */
    public int getEndIndex() {
      return endIndex_;
    }

    public static final int TOKENBEGININDEX_FIELD_NUMBER = 17;
    private int tokenBeginIndex_;
    /**
     * <code>optional uint32 tokenBeginIndex = 17;</code>
     *
     * <pre>
     * The begin index of the token
     * </pre>
     */
    public boolean hasTokenBeginIndex() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 tokenBeginIndex = 17;</code>
     *
     * <pre>
     * The begin index of the token
     * </pre>
     */
    public int getTokenBeginIndex() {
      return tokenBeginIndex_;
    }

    public static final int TOKENENDINDEX_FIELD_NUMBER = 18;
    private int tokenEndIndex_;
    /**
     * <code>optional uint32 tokenEndIndex = 18;</code>
     *
     * <pre>
     * The end index of the token
     * </pre>
     */
    public boolean hasTokenEndIndex() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 tokenEndIndex = 18;</code>
     *
     * <pre>
     * The end index of the token
     * </pre>
     */
    public int getTokenEndIndex() {
      return tokenEndIndex_;
    }

    public static final int TIMEXVALUE_FIELD_NUMBER = 19;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Timex timexValue_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    public boolean hasTimexValue() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimexValue() {
      return timexValue_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
     *
     * <pre>
     * The time this word refers to
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexValueOrBuilder() {
      return timexValue_;
    }

    public static final int HASXMLCONTEXT_FIELD_NUMBER = 21;
    private boolean hasXmlContext_;
    /**
     * <code>optional bool hasXmlContext = 21;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public boolean hasHasXmlContext() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool hasXmlContext = 21;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public boolean getHasXmlContext() {
      return hasXmlContext_;
    }

    public static final int XMLCONTEXT_FIELD_NUMBER = 22;
    private com.google.protobuf.LazyStringList xmlContext_;
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public com.google.protobuf.ProtocolStringList
        getXmlContextList() {
      return xmlContext_;
    }
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public int getXmlContextCount() {
      return xmlContext_.size();
    }
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public java.lang.String getXmlContext(int index) {
      return xmlContext_.get(index);
    }
    /**
     * <code>repeated string xmlContext = 22;</code>
     *
     * <pre>
     * Used by clean xml annotator
     * </pre>
     */
    public com.google.protobuf.ByteString
        getXmlContextBytes(int index) {
      return xmlContext_.getByteString(index);
    }

    public static final int COREFCLUSTERID_FIELD_NUMBER = 23;
    private int corefClusterID_;
    /**
     * <code>optional uint32 corefClusterID = 23;</code>
     *
     * <pre>
     * The [primary] cluster id for this token
     * </pre>
     */
    public boolean hasCorefClusterID() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional uint32 corefClusterID = 23;</code>
     *
     * <pre>
     * The [primary] cluster id for this token
     * </pre>
     */
    public int getCorefClusterID() {
      return corefClusterID_;
    }

    public static final int ANSWER_FIELD_NUMBER = 24;
    private java.lang.Object answer_;
    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    public boolean hasAnswer() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    public java.lang.String getAnswer() {
      java.lang.Object ref = answer_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          answer_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string answer = 24;</code>
     *
     * <pre>
     * A temporary annotation which is occasionally left in
     * </pre>
     */
    public com.google.protobuf.ByteString
        getAnswerBytes() {
      java.lang.Object ref = answer_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        answer_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEADWORDINDEX_FIELD_NUMBER = 26;
    private int headWordIndex_;
    /**
     * <code>optional uint32 headWordIndex = 26;</code>
     *
     * <pre>
     *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
     * </pre>
     */
    public boolean hasHeadWordIndex() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional uint32 headWordIndex = 26;</code>
     *
     * <pre>
     *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
     * </pre>
     */
    public int getHeadWordIndex() {
      return headWordIndex_;
    }

    public static final int OPERATOR_FIELD_NUMBER = 27;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Operator operator_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    public boolean hasOperator() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator getOperator() {
      return operator_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
     *
     * <pre>
     * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder getOperatorOrBuilder() {
      return operator_;
    }

    public static final int POLARITY_FIELD_NUMBER = 28;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity polarity_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    public boolean hasPolarity() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity getPolarity() {
      return polarity_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
     *
     * <pre>
     * The polarity of this word, according to Natural Logic
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder getPolarityOrBuilder() {
      return polarity_;
    }

    public static final int SPAN_FIELD_NUMBER = 29;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Span span_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    public boolean hasSpan() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Span getSpan() {
      return span_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
     *
     * <pre>
     * The span of a leaf node of a tree
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getSpanOrBuilder() {
      return span_;
    }

    public static final int SENTIMENT_FIELD_NUMBER = 30;
    private java.lang.Object sentiment_;
    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    public boolean hasSentiment() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    public java.lang.String getSentiment() {
      java.lang.Object ref = sentiment_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          sentiment_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string sentiment = 30;</code>
     *
     * <pre>
     * The final sentiment of the sentence
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSentimentBytes() {
      java.lang.Object ref = sentiment_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        sentiment_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUOTATIONINDEX_FIELD_NUMBER = 31;
    private int quotationIndex_;
    /**
     * <code>optional int32 quotationIndex = 31;</code>
     *
     * <pre>
     * The index of the quotation this token refers to
     * </pre>
     */
    public boolean hasQuotationIndex() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional int32 quotationIndex = 31;</code>
     *
     * <pre>
     * The index of the quotation this token refers to
     * </pre>
     */
    public int getQuotationIndex() {
      return quotationIndex_;
    }

    public static final int CONLLUFEATURES_FIELD_NUMBER = 32;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString conllUFeatures_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    public boolean hasConllUFeatures() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString getConllUFeatures() {
      return conllUFeatures_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder getConllUFeaturesOrBuilder() {
      return conllUFeatures_;
    }

    public static final int COARSETAG_FIELD_NUMBER = 33;
    private java.lang.Object coarseTag_;
    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    public boolean hasCoarseTag() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    public java.lang.String getCoarseTag() {
      java.lang.Object ref = coarseTag_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          coarseTag_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string coarseTag = 33;</code>
     *
     * <pre>
     *  The coarse POS tag (used to store the UPOS tag)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getCoarseTagBytes() {
      java.lang.Object ref = coarseTag_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        coarseTag_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONLLUTOKENSPAN_FIELD_NUMBER = 34;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Span conllUTokenSpan_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    public boolean hasConllUTokenSpan() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Span getConllUTokenSpan() {
      return conllUTokenSpan_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getConllUTokenSpanOrBuilder() {
      return conllUTokenSpan_;
    }

    public static final int CONLLUMISC_FIELD_NUMBER = 35;
    private java.lang.Object conllUMisc_;
    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    public boolean hasConllUMisc() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    public java.lang.String getConllUMisc() {
      java.lang.Object ref = conllUMisc_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          conllUMisc_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string conllUMisc = 35;</code>
     */
    public com.google.protobuf.ByteString
        getConllUMiscBytes() {
      java.lang.Object ref = conllUMisc_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        conllUMisc_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONLLUSECONDARYDEPS_FIELD_NUMBER = 36;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString conllUSecondaryDeps_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    public boolean hasConllUSecondaryDeps() {
      return ((bitField1_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString getConllUSecondaryDeps() {
      return conllUSecondaryDeps_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder getConllUSecondaryDepsOrBuilder() {
      return conllUSecondaryDeps_;
    }

    public static final int WIKIPEDIAENTITY_FIELD_NUMBER = 37;
    private java.lang.Object wikipediaEntity_;
    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    public boolean hasWikipediaEntity() {
      return ((bitField1_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    public java.lang.String getWikipediaEntity() {
      java.lang.Object ref = wikipediaEntity_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          wikipediaEntity_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string wikipediaEntity = 37;</code>
     */
    public com.google.protobuf.ByteString
        getWikipediaEntityBytes() {
      java.lang.Object ref = wikipediaEntity_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        wikipediaEntity_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENDER_FIELD_NUMBER = 51;
    private java.lang.Object gender_;
    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    public boolean hasGender() {
      return ((bitField1_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    public java.lang.String getGender() {
      java.lang.Object ref = gender_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gender_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gender = 51;</code>
     *
     * <pre>
     * Fields set by other annotators in CoreNLP
     * </pre>
     */
    public com.google.protobuf.ByteString
        getGenderBytes() {
      java.lang.Object ref = gender_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gender_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRUECASE_FIELD_NUMBER = 52;
    private java.lang.Object trueCase_;
    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    public boolean hasTrueCase() {
      return ((bitField1_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    public java.lang.String getTrueCase() {
      java.lang.Object ref = trueCase_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trueCase_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string trueCase = 52;</code>
     *
     * <pre>
     * true case type of token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTrueCaseBytes() {
      java.lang.Object ref = trueCase_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trueCase_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TRUECASETEXT_FIELD_NUMBER = 53;
    private java.lang.Object trueCaseText_;
    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    public boolean hasTrueCaseText() {
      return ((bitField1_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    public java.lang.String getTrueCaseText() {
      java.lang.Object ref = trueCaseText_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          trueCaseText_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string trueCaseText = 53;</code>
     *
     * <pre>
     * true case gloss of token
     * </pre>
     */
    public com.google.protobuf.ByteString
        getTrueCaseTextBytes() {
      java.lang.Object ref = trueCaseText_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        trueCaseText_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      word_ = "";
      pos_ = "";
      value_ = "";
      category_ = "";
      before_ = "";
      after_ = "";
      originalText_ = "";
      ner_ = "";
      normalizedNER_ = "";
      lemma_ = "";
      beginChar_ = 0;
      endChar_ = 0;
      utterance_ = 0;
      speaker_ = "";
      beginIndex_ = 0;
      endIndex_ = 0;
      tokenBeginIndex_ = 0;
      tokenEndIndex_ = 0;
      timexValue_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
      hasXmlContext_ = false;
      xmlContext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      corefClusterID_ = 0;
      answer_ = "";
      headWordIndex_ = 0;
      operator_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
      polarity_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
      span_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
      sentiment_ = "";
      quotationIndex_ = 0;
      conllUFeatures_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance();
      coarseTag_ = "";
      conllUTokenSpan_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
      conllUMisc_ = "";
      conllUSecondaryDeps_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance();
      wikipediaEntity_ = "";
      gender_ = "";
      trueCase_ = "";
      trueCaseText_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasWord()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (hasOperator()) {
        if (!getOperator().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasPolarity()) {
        if (!getPolarity().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasSpan()) {
        if (!getSpan().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (hasConllUTokenSpan()) {
        if (!getConllUTokenSpan().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      if (!extensionsAreInitialized()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      com.google.protobuf.GeneratedMessage
        .ExtendableMessage<edu.stanford.nlp.pipeline.CoreNLPProtos.Token>.ExtensionWriter extensionWriter =
          newExtensionWriter();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getWordBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getPosBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getCategoryBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getBeforeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getAfterBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(7, getOriginalTextBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(8, getNerBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBytes(9, getNormalizedNERBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getLemmaBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeUInt32(11, beginChar_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(12, endChar_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeUInt32(13, utterance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getSpeakerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(15, beginIndex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(16, endIndex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(17, tokenBeginIndex_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(18, tokenEndIndex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeMessage(19, timexValue_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(21, hasXmlContext_);
      }
      for (int i = 0; i < xmlContext_.size(); i++) {
        output.writeBytes(22, xmlContext_.getByteString(i));
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeUInt32(23, corefClusterID_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBytes(24, getAnswerBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeUInt32(26, headWordIndex_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeMessage(27, operator_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeMessage(28, polarity_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeMessage(29, span_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBytes(30, getSentimentBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeInt32(31, quotationIndex_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(32, conllUFeatures_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeBytes(33, getCoarseTagBytes());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(34, conllUTokenSpan_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeBytes(35, getConllUMiscBytes());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        output.writeMessage(36, conllUSecondaryDeps_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(37, getWikipediaEntityBytes());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(51, getGenderBytes());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(52, getTrueCaseBytes());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(53, getTrueCaseTextBytes());
      }
      extensionWriter.writeUntil(256, output);
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getWordBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getPosBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getValueBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getCategoryBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getBeforeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getAfterBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(7, getOriginalTextBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getNerBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNormalizedNERBytes());
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getLemmaBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(11, beginChar_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(12, endChar_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, utterance_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getSpeakerBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(15, beginIndex_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, endIndex_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, tokenBeginIndex_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, tokenEndIndex_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(19, timexValue_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, hasXmlContext_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < xmlContext_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(xmlContext_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getXmlContextList().size();
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(23, corefClusterID_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(24, getAnswerBytes());
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(26, headWordIndex_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(27, operator_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(28, polarity_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(29, span_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(30, getSentimentBytes());
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(31, quotationIndex_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, conllUFeatures_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(33, getCoarseTagBytes());
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(34, conllUTokenSpan_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(35, getConllUMiscBytes());
      }
      if (((bitField1_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(36, conllUSecondaryDeps_);
      }
      if (((bitField1_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(37, getWikipediaEntityBytes());
      }
      if (((bitField1_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(51, getGenderBytes());
      }
      if (((bitField1_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(52, getTrueCaseBytes());
      }
      if (((bitField1_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(53, getTrueCaseTextBytes());
      }
      size += extensionsSerializedSize();
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Token parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Token prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Token}
     *
     * <pre>
     * The serialized version of a Token (a CoreLabel).
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.ExtendableBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Token, Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Token)
        edu.stanford.nlp.pipeline.CoreNLPProtos.TokenOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Token_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Token_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Token.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Token.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Token.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimexValueFieldBuilder();
          getOperatorFieldBuilder();
          getPolarityFieldBuilder();
          getSpanFieldBuilder();
          getConllUFeaturesFieldBuilder();
          getConllUTokenSpanFieldBuilder();
          getConllUSecondaryDepsFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        word_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        pos_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        category_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        before_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        after_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        originalText_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        ner_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        normalizedNER_ = "";
        bitField0_ = (bitField0_ & ~0x00000100);
        lemma_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        beginChar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000400);
        endChar_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        utterance_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        speaker_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        beginIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        endIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        tokenBeginIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        tokenEndIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        if (timexValueBuilder_ == null) {
          timexValue_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
        } else {
          timexValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        hasXmlContext_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        xmlContext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        corefClusterID_ = 0;
        bitField0_ = (bitField0_ & ~0x00200000);
        answer_ = "";
        bitField0_ = (bitField0_ & ~0x00400000);
        headWordIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00800000);
        if (operatorBuilder_ == null) {
          operator_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
        } else {
          operatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        if (polarityBuilder_ == null) {
          polarity_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
        } else {
          polarityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        if (spanBuilder_ == null) {
          span_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
        } else {
          spanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        sentiment_ = "";
        bitField0_ = (bitField0_ & ~0x08000000);
        quotationIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x10000000);
        if (conllUFeaturesBuilder_ == null) {
          conllUFeatures_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance();
        } else {
          conllUFeaturesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        coarseTag_ = "";
        bitField0_ = (bitField0_ & ~0x40000000);
        if (conllUTokenSpanBuilder_ == null) {
          conllUTokenSpan_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
        } else {
          conllUTokenSpanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        conllUMisc_ = "";
        bitField1_ = (bitField1_ & ~0x00000001);
        if (conllUSecondaryDepsBuilder_ == null) {
          conllUSecondaryDeps_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance();
        } else {
          conllUSecondaryDepsBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        wikipediaEntity_ = "";
        bitField1_ = (bitField1_ & ~0x00000004);
        gender_ = "";
        bitField1_ = (bitField1_ & ~0x00000008);
        trueCase_ = "";
        bitField1_ = (bitField1_ & ~0x00000010);
        trueCaseText_ = "";
        bitField1_ = (bitField1_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Token_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Token result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Token buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Token result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Token(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        int to_bitField1_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.word_ = word_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.pos_ = pos_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.category_ = category_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.before_ = before_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.after_ = after_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.originalText_ = originalText_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.ner_ = ner_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.normalizedNER_ = normalizedNER_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.lemma_ = lemma_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.beginChar_ = beginChar_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.endChar_ = endChar_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.utterance_ = utterance_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.speaker_ = speaker_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.beginIndex_ = beginIndex_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.endIndex_ = endIndex_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.tokenBeginIndex_ = tokenBeginIndex_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.tokenEndIndex_ = tokenEndIndex_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        if (timexValueBuilder_ == null) {
          result.timexValue_ = timexValue_;
        } else {
          result.timexValue_ = timexValueBuilder_.build();
        }
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.hasXmlContext_ = hasXmlContext_;
        if (((bitField0_ & 0x00100000) == 0x00100000)) {
          xmlContext_ = xmlContext_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00100000);
        }
        result.xmlContext_ = xmlContext_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.corefClusterID_ = corefClusterID_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.answer_ = answer_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.headWordIndex_ = headWordIndex_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x00800000;
        }
        if (operatorBuilder_ == null) {
          result.operator_ = operator_;
        } else {
          result.operator_ = operatorBuilder_.build();
        }
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x01000000;
        }
        if (polarityBuilder_ == null) {
          result.polarity_ = polarity_;
        } else {
          result.polarity_ = polarityBuilder_.build();
        }
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x02000000;
        }
        if (spanBuilder_ == null) {
          result.span_ = span_;
        } else {
          result.span_ = spanBuilder_.build();
        }
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.sentiment_ = sentiment_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.quotationIndex_ = quotationIndex_;
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x10000000;
        }
        if (conllUFeaturesBuilder_ == null) {
          result.conllUFeatures_ = conllUFeatures_;
        } else {
          result.conllUFeatures_ = conllUFeaturesBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x20000000;
        }
        result.coarseTag_ = coarseTag_;
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (conllUTokenSpanBuilder_ == null) {
          result.conllUTokenSpan_ = conllUTokenSpan_;
        } else {
          result.conllUTokenSpan_ = conllUTokenSpanBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x80000000;
        }
        result.conllUMisc_ = conllUMisc_;
        if (((from_bitField1_ & 0x00000002) == 0x00000002)) {
          to_bitField1_ |= 0x00000001;
        }
        if (conllUSecondaryDepsBuilder_ == null) {
          result.conllUSecondaryDeps_ = conllUSecondaryDeps_;
        } else {
          result.conllUSecondaryDeps_ = conllUSecondaryDepsBuilder_.build();
        }
        if (((from_bitField1_ & 0x00000004) == 0x00000004)) {
          to_bitField1_ |= 0x00000002;
        }
        result.wikipediaEntity_ = wikipediaEntity_;
        if (((from_bitField1_ & 0x00000008) == 0x00000008)) {
          to_bitField1_ |= 0x00000004;
        }
        result.gender_ = gender_;
        if (((from_bitField1_ & 0x00000010) == 0x00000010)) {
          to_bitField1_ |= 0x00000008;
        }
        result.trueCase_ = trueCase_;
        if (((from_bitField1_ & 0x00000020) == 0x00000020)) {
          to_bitField1_ |= 0x00000010;
        }
        result.trueCaseText_ = trueCaseText_;
        result.bitField0_ = to_bitField0_;
        result.bitField1_ = to_bitField1_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Token) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Token)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Token other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Token.getDefaultInstance()) return this;
        if (other.hasWord()) {
          bitField0_ |= 0x00000001;
          word_ = other.word_;
          onChanged();
        }
        if (other.hasPos()) {
          bitField0_ |= 0x00000002;
          pos_ = other.pos_;
          onChanged();
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000004;
          value_ = other.value_;
          onChanged();
        }
        if (other.hasCategory()) {
          bitField0_ |= 0x00000008;
          category_ = other.category_;
          onChanged();
        }
        if (other.hasBefore()) {
          bitField0_ |= 0x00000010;
          before_ = other.before_;
          onChanged();
        }
        if (other.hasAfter()) {
          bitField0_ |= 0x00000020;
          after_ = other.after_;
          onChanged();
        }
        if (other.hasOriginalText()) {
          bitField0_ |= 0x00000040;
          originalText_ = other.originalText_;
          onChanged();
        }
        if (other.hasNer()) {
          bitField0_ |= 0x00000080;
          ner_ = other.ner_;
          onChanged();
        }
        if (other.hasNormalizedNER()) {
          bitField0_ |= 0x00000100;
          normalizedNER_ = other.normalizedNER_;
          onChanged();
        }
        if (other.hasLemma()) {
          bitField0_ |= 0x00000200;
          lemma_ = other.lemma_;
          onChanged();
        }
        if (other.hasBeginChar()) {
          setBeginChar(other.getBeginChar());
        }
        if (other.hasEndChar()) {
          setEndChar(other.getEndChar());
        }
        if (other.hasUtterance()) {
          setUtterance(other.getUtterance());
        }
        if (other.hasSpeaker()) {
          bitField0_ |= 0x00002000;
          speaker_ = other.speaker_;
          onChanged();
        }
        if (other.hasBeginIndex()) {
          setBeginIndex(other.getBeginIndex());
        }
        if (other.hasEndIndex()) {
          setEndIndex(other.getEndIndex());
        }
        if (other.hasTokenBeginIndex()) {
          setTokenBeginIndex(other.getTokenBeginIndex());
        }
        if (other.hasTokenEndIndex()) {
          setTokenEndIndex(other.getTokenEndIndex());
        }
        if (other.hasTimexValue()) {
          mergeTimexValue(other.getTimexValue());
        }
        if (other.hasHasXmlContext()) {
          setHasXmlContext(other.getHasXmlContext());
        }
        if (!other.xmlContext_.isEmpty()) {
          if (xmlContext_.isEmpty()) {
            xmlContext_ = other.xmlContext_;
            bitField0_ = (bitField0_ & ~0x00100000);
          } else {
            ensureXmlContextIsMutable();
            xmlContext_.addAll(other.xmlContext_);
          }
          onChanged();
        }
        if (other.hasCorefClusterID()) {
          setCorefClusterID(other.getCorefClusterID());
        }
        if (other.hasAnswer()) {
          bitField0_ |= 0x00400000;
          answer_ = other.answer_;
          onChanged();
        }
        if (other.hasHeadWordIndex()) {
          setHeadWordIndex(other.getHeadWordIndex());
        }
        if (other.hasOperator()) {
          mergeOperator(other.getOperator());
        }
        if (other.hasPolarity()) {
          mergePolarity(other.getPolarity());
        }
        if (other.hasSpan()) {
          mergeSpan(other.getSpan());
        }
        if (other.hasSentiment()) {
          bitField0_ |= 0x08000000;
          sentiment_ = other.sentiment_;
          onChanged();
        }
        if (other.hasQuotationIndex()) {
          setQuotationIndex(other.getQuotationIndex());
        }
        if (other.hasConllUFeatures()) {
          mergeConllUFeatures(other.getConllUFeatures());
        }
        if (other.hasCoarseTag()) {
          bitField0_ |= 0x40000000;
          coarseTag_ = other.coarseTag_;
          onChanged();
        }
        if (other.hasConllUTokenSpan()) {
          mergeConllUTokenSpan(other.getConllUTokenSpan());
        }
        if (other.hasConllUMisc()) {
          bitField1_ |= 0x00000001;
          conllUMisc_ = other.conllUMisc_;
          onChanged();
        }
        if (other.hasConllUSecondaryDeps()) {
          mergeConllUSecondaryDeps(other.getConllUSecondaryDeps());
        }
        if (other.hasWikipediaEntity()) {
          bitField1_ |= 0x00000004;
          wikipediaEntity_ = other.wikipediaEntity_;
          onChanged();
        }
        if (other.hasGender()) {
          bitField1_ |= 0x00000008;
          gender_ = other.gender_;
          onChanged();
        }
        if (other.hasTrueCase()) {
          bitField1_ |= 0x00000010;
          trueCase_ = other.trueCase_;
          onChanged();
        }
        if (other.hasTrueCaseText()) {
          bitField1_ |= 0x00000020;
          trueCaseText_ = other.trueCaseText_;
          onChanged();
        }
        this.mergeExtensionFields(other);
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasWord()) {
          
          return false;
        }
        if (hasOperator()) {
          if (!getOperator().isInitialized()) {
            
            return false;
          }
        }
        if (hasPolarity()) {
          if (!getPolarity().isInitialized()) {
            
            return false;
          }
        }
        if (hasSpan()) {
          if (!getSpan().isInitialized()) {
            
            return false;
          }
        }
        if (hasConllUTokenSpan()) {
          if (!getConllUTokenSpan().isInitialized()) {
            
            return false;
          }
        }
        if (!extensionsAreInitialized()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Token parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Token) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private java.lang.Object word_ = "";
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public boolean hasWord() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public java.lang.String getWord() {
        java.lang.Object ref = word_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            word_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public com.google.protobuf.ByteString
          getWordBytes() {
        java.lang.Object ref = word_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          word_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public Builder setWord(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        word_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public Builder clearWord() {
        bitField0_ = (bitField0_ & ~0x00000001);
        word_ = getDefaultInstance().getWord();
        onChanged();
        return this;
      }
      /**
       * <code>required string word = 1;</code>
       *
       * <pre>
       * Fields set by the default annotators [new CoreNLP(new Properties())]
       * </pre>
       */
      public Builder setWordBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        word_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object pos_ = "";
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public boolean hasPos() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public java.lang.String getPos() {
        java.lang.Object ref = pos_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            pos_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public com.google.protobuf.ByteString
          getPosBytes() {
        java.lang.Object ref = pos_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          pos_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public Builder setPos(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pos_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public Builder clearPos() {
        bitField0_ = (bitField0_ & ~0x00000002);
        pos_ = getDefaultInstance().getPos();
        onChanged();
        return this;
      }
      /**
       * <code>optional string pos = 2;</code>
       *
       * <pre>
       * The word's part of speech tag
       * </pre>
       */
      public Builder setPosBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        pos_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000004);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 3;</code>
       *
       * <pre>
       * The word's 'value', (e.g., parse tree node)
       * </pre>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        value_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object category_ = "";
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public boolean hasCategory() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public java.lang.String getCategory() {
        java.lang.Object ref = category_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            category_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCategoryBytes() {
        java.lang.Object ref = category_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          category_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public Builder setCategory(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        category_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public Builder clearCategory() {
        bitField0_ = (bitField0_ & ~0x00000008);
        category_ = getDefaultInstance().getCategory();
        onChanged();
        return this;
      }
      /**
       * <code>optional string category = 4;</code>
       *
       * <pre>
       * The word's 'category' (e.g., parse tree node)
       * </pre>
       */
      public Builder setCategoryBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        category_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object before_ = "";
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public boolean hasBefore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public java.lang.String getBefore() {
        java.lang.Object ref = before_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            before_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getBeforeBytes() {
        java.lang.Object ref = before_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          before_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public Builder setBefore(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        before_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public Builder clearBefore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        before_ = getDefaultInstance().getBefore();
        onChanged();
        return this;
      }
      /**
       * <code>optional string before = 5;</code>
       *
       * <pre>
       * The whitespace/xml before the token
       * </pre>
       */
      public Builder setBeforeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        before_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object after_ = "";
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public boolean hasAfter() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public java.lang.String getAfter() {
        java.lang.Object ref = after_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            after_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAfterBytes() {
        java.lang.Object ref = after_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          after_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public Builder setAfter(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        after_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public Builder clearAfter() {
        bitField0_ = (bitField0_ & ~0x00000020);
        after_ = getDefaultInstance().getAfter();
        onChanged();
        return this;
      }
      /**
       * <code>optional string after = 6;</code>
       *
       * <pre>
       * The whitespace/xml after the token
       * </pre>
       */
      public Builder setAfterBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        after_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object originalText_ = "";
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public boolean hasOriginalText() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public java.lang.String getOriginalText() {
        java.lang.Object ref = originalText_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            originalText_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getOriginalTextBytes() {
        java.lang.Object ref = originalText_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          originalText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public Builder setOriginalText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        originalText_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public Builder clearOriginalText() {
        bitField0_ = (bitField0_ & ~0x00000040);
        originalText_ = getDefaultInstance().getOriginalText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string originalText = 7;</code>
       *
       * <pre>
       * The original text for this token
       * </pre>
       */
      public Builder setOriginalTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        originalText_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object ner_ = "";
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public boolean hasNer() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public java.lang.String getNer() {
        java.lang.Object ref = ner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ner_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNerBytes() {
        java.lang.Object ref = ner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public Builder setNer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        ner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public Builder clearNer() {
        bitField0_ = (bitField0_ & ~0x00000080);
        ner_ = getDefaultInstance().getNer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string ner = 8;</code>
       *
       * <pre>
       * The word's NER tag
       * </pre>
       */
      public Builder setNerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        ner_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normalizedNER_ = "";
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public boolean hasNormalizedNER() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public java.lang.String getNormalizedNER() {
        java.lang.Object ref = normalizedNER_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            normalizedNER_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public com.google.protobuf.ByteString
          getNormalizedNERBytes() {
        java.lang.Object ref = normalizedNER_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normalizedNER_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public Builder setNormalizedNER(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        normalizedNER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public Builder clearNormalizedNER() {
        bitField0_ = (bitField0_ & ~0x00000100);
        normalizedNER_ = getDefaultInstance().getNormalizedNER();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedNER = 9;</code>
       *
       * <pre>
       * The word's normalized NER tag
       * </pre>
       */
      public Builder setNormalizedNERBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000100;
        normalizedNER_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object lemma_ = "";
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public boolean hasLemma() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public java.lang.String getLemma() {
        java.lang.Object ref = lemma_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            lemma_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public com.google.protobuf.ByteString
          getLemmaBytes() {
        java.lang.Object ref = lemma_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          lemma_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public Builder setLemma(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        lemma_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public Builder clearLemma() {
        bitField0_ = (bitField0_ & ~0x00000200);
        lemma_ = getDefaultInstance().getLemma();
        onChanged();
        return this;
      }
      /**
       * <code>optional string lemma = 10;</code>
       *
       * <pre>
       * The word's lemma
       * </pre>
       */
      public Builder setLemmaBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        lemma_ = value;
        onChanged();
        return this;
      }

      private int beginChar_ ;
      /**
       * <code>optional uint32 beginChar = 11;</code>
       *
       * <pre>
       * The character offset begin, in the document
       * </pre>
       */
      public boolean hasBeginChar() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional uint32 beginChar = 11;</code>
       *
       * <pre>
       * The character offset begin, in the document
       * </pre>
       */
      public int getBeginChar() {
        return beginChar_;
      }
      /**
       * <code>optional uint32 beginChar = 11;</code>
       *
       * <pre>
       * The character offset begin, in the document
       * </pre>
       */
      public Builder setBeginChar(int value) {
        bitField0_ |= 0x00000400;
        beginChar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 beginChar = 11;</code>
       *
       * <pre>
       * The character offset begin, in the document
       * </pre>
       */
      public Builder clearBeginChar() {
        bitField0_ = (bitField0_ & ~0x00000400);
        beginChar_ = 0;
        onChanged();
        return this;
      }

      private int endChar_ ;
      /**
       * <code>optional uint32 endChar = 12;</code>
       *
       * <pre>
       * The character offset end, in the document
       * </pre>
       */
      public boolean hasEndChar() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 endChar = 12;</code>
       *
       * <pre>
       * The character offset end, in the document
       * </pre>
       */
      public int getEndChar() {
        return endChar_;
      }
      /**
       * <code>optional uint32 endChar = 12;</code>
       *
       * <pre>
       * The character offset end, in the document
       * </pre>
       */
      public Builder setEndChar(int value) {
        bitField0_ |= 0x00000800;
        endChar_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 endChar = 12;</code>
       *
       * <pre>
       * The character offset end, in the document
       * </pre>
       */
      public Builder clearEndChar() {
        bitField0_ = (bitField0_ & ~0x00000800);
        endChar_ = 0;
        onChanged();
        return this;
      }

      private int utterance_ ;
      /**
       * <code>optional uint32 utterance = 13;</code>
       *
       * <pre>
       * The utterance tag used in dcoref
       * </pre>
       */
      public boolean hasUtterance() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional uint32 utterance = 13;</code>
       *
       * <pre>
       * The utterance tag used in dcoref
       * </pre>
       */
      public int getUtterance() {
        return utterance_;
      }
      /**
       * <code>optional uint32 utterance = 13;</code>
       *
       * <pre>
       * The utterance tag used in dcoref
       * </pre>
       */
      public Builder setUtterance(int value) {
        bitField0_ |= 0x00001000;
        utterance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 utterance = 13;</code>
       *
       * <pre>
       * The utterance tag used in dcoref
       * </pre>
       */
      public Builder clearUtterance() {
        bitField0_ = (bitField0_ & ~0x00001000);
        utterance_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object speaker_ = "";
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public boolean hasSpeaker() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public java.lang.String getSpeaker() {
        java.lang.Object ref = speaker_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            speaker_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSpeakerBytes() {
        java.lang.Object ref = speaker_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          speaker_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public Builder setSpeaker(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        speaker_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public Builder clearSpeaker() {
        bitField0_ = (bitField0_ & ~0x00002000);
        speaker_ = getDefaultInstance().getSpeaker();
        onChanged();
        return this;
      }
      /**
       * <code>optional string speaker = 14;</code>
       *
       * <pre>
       * The speaker speaking this word
       * </pre>
       */
      public Builder setSpeakerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        speaker_ = value;
        onChanged();
        return this;
      }

      private int beginIndex_ ;
      /**
       * <code>optional uint32 beginIndex = 15;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public boolean hasBeginIndex() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 beginIndex = 15;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public int getBeginIndex() {
        return beginIndex_;
      }
      /**
       * <code>optional uint32 beginIndex = 15;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public Builder setBeginIndex(int value) {
        bitField0_ |= 0x00004000;
        beginIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 beginIndex = 15;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public Builder clearBeginIndex() {
        bitField0_ = (bitField0_ & ~0x00004000);
        beginIndex_ = 0;
        onChanged();
        return this;
      }

      private int endIndex_ ;
      /**
       * <code>optional uint32 endIndex = 16;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public boolean hasEndIndex() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 endIndex = 16;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public int getEndIndex() {
        return endIndex_;
      }
      /**
       * <code>optional uint32 endIndex = 16;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public Builder setEndIndex(int value) {
        bitField0_ |= 0x00008000;
        endIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 endIndex = 16;</code>
       *
       * <pre>
       * The begin index of, e.g., a span
       * </pre>
       */
      public Builder clearEndIndex() {
        bitField0_ = (bitField0_ & ~0x00008000);
        endIndex_ = 0;
        onChanged();
        return this;
      }

      private int tokenBeginIndex_ ;
      /**
       * <code>optional uint32 tokenBeginIndex = 17;</code>
       *
       * <pre>
       * The begin index of the token
       * </pre>
       */
      public boolean hasTokenBeginIndex() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 tokenBeginIndex = 17;</code>
       *
       * <pre>
       * The begin index of the token
       * </pre>
       */
      public int getTokenBeginIndex() {
        return tokenBeginIndex_;
      }
      /**
       * <code>optional uint32 tokenBeginIndex = 17;</code>
       *
       * <pre>
       * The begin index of the token
       * </pre>
       */
      public Builder setTokenBeginIndex(int value) {
        bitField0_ |= 0x00010000;
        tokenBeginIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tokenBeginIndex = 17;</code>
       *
       * <pre>
       * The begin index of the token
       * </pre>
       */
      public Builder clearTokenBeginIndex() {
        bitField0_ = (bitField0_ & ~0x00010000);
        tokenBeginIndex_ = 0;
        onChanged();
        return this;
      }

      private int tokenEndIndex_ ;
      /**
       * <code>optional uint32 tokenEndIndex = 18;</code>
       *
       * <pre>
       * The end index of the token
       * </pre>
       */
      public boolean hasTokenEndIndex() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 tokenEndIndex = 18;</code>
       *
       * <pre>
       * The end index of the token
       * </pre>
       */
      public int getTokenEndIndex() {
        return tokenEndIndex_;
      }
      /**
       * <code>optional uint32 tokenEndIndex = 18;</code>
       *
       * <pre>
       * The end index of the token
       * </pre>
       */
      public Builder setTokenEndIndex(int value) {
        bitField0_ |= 0x00020000;
        tokenEndIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tokenEndIndex = 18;</code>
       *
       * <pre>
       * The end index of the token
       * </pre>
       */
      public Builder clearTokenEndIndex() {
        bitField0_ = (bitField0_ & ~0x00020000);
        tokenEndIndex_ = 0;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Timex timexValue_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder> timexValueBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public boolean hasTimexValue() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimexValue() {
        if (timexValueBuilder_ == null) {
          return timexValue_;
        } else {
          return timexValueBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public Builder setTimexValue(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex value) {
        if (timexValueBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timexValue_ = value;
          onChanged();
        } else {
          timexValueBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public Builder setTimexValue(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder builderForValue) {
        if (timexValueBuilder_ == null) {
          timexValue_ = builderForValue.build();
          onChanged();
        } else {
          timexValueBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public Builder mergeTimexValue(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex value) {
        if (timexValueBuilder_ == null) {
          if (((bitField0_ & 0x00040000) == 0x00040000) &&
              timexValue_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance()) {
            timexValue_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.newBuilder(timexValue_).mergeFrom(value).buildPartial();
          } else {
            timexValue_ = value;
          }
          onChanged();
        } else {
          timexValueBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00040000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public Builder clearTimexValue() {
        if (timexValueBuilder_ == null) {
          timexValue_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
          onChanged();
        } else {
          timexValueBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00040000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder getTimexValueBuilder() {
        bitField0_ |= 0x00040000;
        onChanged();
        return getTimexValueFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexValueOrBuilder() {
        if (timexValueBuilder_ != null) {
          return timexValueBuilder_.getMessageOrBuilder();
        } else {
          return timexValue_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timexValue = 19;</code>
       *
       * <pre>
       * The time this word refers to
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder> 
          getTimexValueFieldBuilder() {
        if (timexValueBuilder_ == null) {
          timexValueBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder>(
                  getTimexValue(),
                  getParentForChildren(),
                  isClean());
          timexValue_ = null;
        }
        return timexValueBuilder_;
      }

      private boolean hasXmlContext_ ;
      /**
       * <code>optional bool hasXmlContext = 21;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public boolean hasHasXmlContext() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool hasXmlContext = 21;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public boolean getHasXmlContext() {
        return hasXmlContext_;
      }
      /**
       * <code>optional bool hasXmlContext = 21;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder setHasXmlContext(boolean value) {
        bitField0_ |= 0x00080000;
        hasXmlContext_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasXmlContext = 21;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder clearHasXmlContext() {
        bitField0_ = (bitField0_ & ~0x00080000);
        hasXmlContext_ = false;
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList xmlContext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureXmlContextIsMutable() {
        if (!((bitField0_ & 0x00100000) == 0x00100000)) {
          xmlContext_ = new com.google.protobuf.LazyStringArrayList(xmlContext_);
          bitField0_ |= 0x00100000;
         }
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public com.google.protobuf.ProtocolStringList
          getXmlContextList() {
        return xmlContext_.getUnmodifiableView();
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public int getXmlContextCount() {
        return xmlContext_.size();
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public java.lang.String getXmlContext(int index) {
        return xmlContext_.get(index);
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public com.google.protobuf.ByteString
          getXmlContextBytes(int index) {
        return xmlContext_.getByteString(index);
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder setXmlContext(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureXmlContextIsMutable();
        xmlContext_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder addXmlContext(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureXmlContextIsMutable();
        xmlContext_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder addAllXmlContext(
          java.lang.Iterable<java.lang.String> values) {
        ensureXmlContextIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, xmlContext_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder clearXmlContext() {
        xmlContext_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00100000);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string xmlContext = 22;</code>
       *
       * <pre>
       * Used by clean xml annotator
       * </pre>
       */
      public Builder addXmlContextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureXmlContextIsMutable();
        xmlContext_.add(value);
        onChanged();
        return this;
      }

      private int corefClusterID_ ;
      /**
       * <code>optional uint32 corefClusterID = 23;</code>
       *
       * <pre>
       * The [primary] cluster id for this token
       * </pre>
       */
      public boolean hasCorefClusterID() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional uint32 corefClusterID = 23;</code>
       *
       * <pre>
       * The [primary] cluster id for this token
       * </pre>
       */
      public int getCorefClusterID() {
        return corefClusterID_;
      }
      /**
       * <code>optional uint32 corefClusterID = 23;</code>
       *
       * <pre>
       * The [primary] cluster id for this token
       * </pre>
       */
      public Builder setCorefClusterID(int value) {
        bitField0_ |= 0x00200000;
        corefClusterID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 corefClusterID = 23;</code>
       *
       * <pre>
       * The [primary] cluster id for this token
       * </pre>
       */
      public Builder clearCorefClusterID() {
        bitField0_ = (bitField0_ & ~0x00200000);
        corefClusterID_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object answer_ = "";
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public boolean hasAnswer() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public java.lang.String getAnswer() {
        java.lang.Object ref = answer_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            answer_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public com.google.protobuf.ByteString
          getAnswerBytes() {
        java.lang.Object ref = answer_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          answer_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public Builder setAnswer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        answer_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public Builder clearAnswer() {
        bitField0_ = (bitField0_ & ~0x00400000);
        answer_ = getDefaultInstance().getAnswer();
        onChanged();
        return this;
      }
      /**
       * <code>optional string answer = 24;</code>
       *
       * <pre>
       * A temporary annotation which is occasionally left in
       * </pre>
       */
      public Builder setAnswerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00400000;
        answer_ = value;
        onChanged();
        return this;
      }

      private int headWordIndex_ ;
      /**
       * <code>optional uint32 headWordIndex = 26;</code>
       *
       * <pre>
       *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
       * </pre>
       */
      public boolean hasHeadWordIndex() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional uint32 headWordIndex = 26;</code>
       *
       * <pre>
       *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
       * </pre>
       */
      public int getHeadWordIndex() {
        return headWordIndex_;
      }
      /**
       * <code>optional uint32 headWordIndex = 26;</code>
       *
       * <pre>
       *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
       * </pre>
       */
      public Builder setHeadWordIndex(int value) {
        bitField0_ |= 0x00800000;
        headWordIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 headWordIndex = 26;</code>
       *
       * <pre>
       *  optional string projectedCategory = 25;   // The syntactic category of the maximal constituent headed by the word. Not used anywhere, so deleted.
       * </pre>
       */
      public Builder clearHeadWordIndex() {
        bitField0_ = (bitField0_ & ~0x00800000);
        headWordIndex_ = 0;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Operator operator_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Operator, edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder> operatorBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public boolean hasOperator() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator getOperator() {
        if (operatorBuilder_ == null) {
          return operator_;
        } else {
          return operatorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public Builder setOperator(edu.stanford.nlp.pipeline.CoreNLPProtos.Operator value) {
        if (operatorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          operator_ = value;
          onChanged();
        } else {
          operatorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public Builder setOperator(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder builderForValue) {
        if (operatorBuilder_ == null) {
          operator_ = builderForValue.build();
          onChanged();
        } else {
          operatorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public Builder mergeOperator(edu.stanford.nlp.pipeline.CoreNLPProtos.Operator value) {
        if (operatorBuilder_ == null) {
          if (((bitField0_ & 0x01000000) == 0x01000000) &&
              operator_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance()) {
            operator_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.newBuilder(operator_).mergeFrom(value).buildPartial();
          } else {
            operator_ = value;
          }
          onChanged();
        } else {
          operatorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x01000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public Builder clearOperator() {
        if (operatorBuilder_ == null) {
          operator_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
          onChanged();
        } else {
          operatorBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x01000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder getOperatorBuilder() {
        bitField0_ |= 0x01000000;
        onChanged();
        return getOperatorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder getOperatorOrBuilder() {
        if (operatorBuilder_ != null) {
          return operatorBuilder_.getMessageOrBuilder();
        } else {
          return operator_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Operator operator = 27;</code>
       *
       * <pre>
       * If this is an operator, which one is it and what is its scope (as per Natural Logic)?
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Operator, edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder> 
          getOperatorFieldBuilder() {
        if (operatorBuilder_ == null) {
          operatorBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Operator, edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder>(
                  getOperator(),
                  getParentForChildren(),
                  isClean());
          operator_ = null;
        }
        return operatorBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity polarity_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity, edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder> polarityBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public boolean hasPolarity() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity getPolarity() {
        if (polarityBuilder_ == null) {
          return polarity_;
        } else {
          return polarityBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public Builder setPolarity(edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity value) {
        if (polarityBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          polarity_ = value;
          onChanged();
        } else {
          polarityBuilder_.setMessage(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public Builder setPolarity(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder builderForValue) {
        if (polarityBuilder_ == null) {
          polarity_ = builderForValue.build();
          onChanged();
        } else {
          polarityBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public Builder mergePolarity(edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity value) {
        if (polarityBuilder_ == null) {
          if (((bitField0_ & 0x02000000) == 0x02000000) &&
              polarity_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance()) {
            polarity_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.newBuilder(polarity_).mergeFrom(value).buildPartial();
          } else {
            polarity_ = value;
          }
          onChanged();
        } else {
          polarityBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x02000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public Builder clearPolarity() {
        if (polarityBuilder_ == null) {
          polarity_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
          onChanged();
        } else {
          polarityBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x02000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder getPolarityBuilder() {
        bitField0_ |= 0x02000000;
        onChanged();
        return getPolarityFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder getPolarityOrBuilder() {
        if (polarityBuilder_ != null) {
          return polarityBuilder_.getMessageOrBuilder();
        } else {
          return polarity_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Polarity polarity = 28;</code>
       *
       * <pre>
       * The polarity of this word, according to Natural Logic
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity, edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder> 
          getPolarityFieldBuilder() {
        if (polarityBuilder_ == null) {
          polarityBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity, edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder>(
                  getPolarity(),
                  getParentForChildren(),
                  isClean());
          polarity_ = null;
        }
        return polarityBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Span span_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder> spanBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public boolean hasSpan() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span getSpan() {
        if (spanBuilder_ == null) {
          return span_;
        } else {
          return spanBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public Builder setSpan(edu.stanford.nlp.pipeline.CoreNLPProtos.Span value) {
        if (spanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          span_ = value;
          onChanged();
        } else {
          spanBuilder_.setMessage(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public Builder setSpan(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder builderForValue) {
        if (spanBuilder_ == null) {
          span_ = builderForValue.build();
          onChanged();
        } else {
          spanBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public Builder mergeSpan(edu.stanford.nlp.pipeline.CoreNLPProtos.Span value) {
        if (spanBuilder_ == null) {
          if (((bitField0_ & 0x04000000) == 0x04000000) &&
              span_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance()) {
            span_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder(span_).mergeFrom(value).buildPartial();
          } else {
            span_ = value;
          }
          onChanged();
        } else {
          spanBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x04000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public Builder clearSpan() {
        if (spanBuilder_ == null) {
          span_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
          onChanged();
        } else {
          spanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x04000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder getSpanBuilder() {
        bitField0_ |= 0x04000000;
        onChanged();
        return getSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getSpanOrBuilder() {
        if (spanBuilder_ != null) {
          return spanBuilder_.getMessageOrBuilder();
        } else {
          return span_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span span = 29;</code>
       *
       * <pre>
       * The span of a leaf node of a tree
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder> 
          getSpanFieldBuilder() {
        if (spanBuilder_ == null) {
          spanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder>(
                  getSpan(),
                  getParentForChildren(),
                  isClean());
          span_ = null;
        }
        return spanBuilder_;
      }

      private java.lang.Object sentiment_ = "";
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public boolean hasSentiment() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public java.lang.String getSentiment() {
        java.lang.Object ref = sentiment_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            sentiment_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSentimentBytes() {
        java.lang.Object ref = sentiment_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          sentiment_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public Builder setSentiment(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sentiment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public Builder clearSentiment() {
        bitField0_ = (bitField0_ & ~0x08000000);
        sentiment_ = getDefaultInstance().getSentiment();
        onChanged();
        return this;
      }
      /**
       * <code>optional string sentiment = 30;</code>
       *
       * <pre>
       * The final sentiment of the sentence
       * </pre>
       */
      public Builder setSentimentBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x08000000;
        sentiment_ = value;
        onChanged();
        return this;
      }

      private int quotationIndex_ ;
      /**
       * <code>optional int32 quotationIndex = 31;</code>
       *
       * <pre>
       * The index of the quotation this token refers to
       * </pre>
       */
      public boolean hasQuotationIndex() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional int32 quotationIndex = 31;</code>
       *
       * <pre>
       * The index of the quotation this token refers to
       * </pre>
       */
      public int getQuotationIndex() {
        return quotationIndex_;
      }
      /**
       * <code>optional int32 quotationIndex = 31;</code>
       *
       * <pre>
       * The index of the quotation this token refers to
       * </pre>
       */
      public Builder setQuotationIndex(int value) {
        bitField0_ |= 0x10000000;
        quotationIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 quotationIndex = 31;</code>
       *
       * <pre>
       * The index of the quotation this token refers to
       * </pre>
       */
      public Builder clearQuotationIndex() {
        bitField0_ = (bitField0_ & ~0x10000000);
        quotationIndex_ = 0;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString conllUFeatures_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder> conllUFeaturesBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public boolean hasConllUFeatures() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString getConllUFeatures() {
        if (conllUFeaturesBuilder_ == null) {
          return conllUFeatures_;
        } else {
          return conllUFeaturesBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public Builder setConllUFeatures(edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString value) {
        if (conllUFeaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conllUFeatures_ = value;
          onChanged();
        } else {
          conllUFeaturesBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public Builder setConllUFeatures(
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder builderForValue) {
        if (conllUFeaturesBuilder_ == null) {
          conllUFeatures_ = builderForValue.build();
          onChanged();
        } else {
          conllUFeaturesBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public Builder mergeConllUFeatures(edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString value) {
        if (conllUFeaturesBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              conllUFeatures_ != edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance()) {
            conllUFeatures_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.newBuilder(conllUFeatures_).mergeFrom(value).buildPartial();
          } else {
            conllUFeatures_ = value;
          }
          onChanged();
        } else {
          conllUFeaturesBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public Builder clearConllUFeatures() {
        if (conllUFeaturesBuilder_ == null) {
          conllUFeatures_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance();
          onChanged();
        } else {
          conllUFeaturesBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder getConllUFeaturesBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getConllUFeaturesFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder getConllUFeaturesOrBuilder() {
        if (conllUFeaturesBuilder_ != null) {
          return conllUFeaturesBuilder_.getMessageOrBuilder();
        } else {
          return conllUFeatures_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapStringString conllUFeatures = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder> 
          getConllUFeaturesFieldBuilder() {
        if (conllUFeaturesBuilder_ == null) {
          conllUFeaturesBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder>(
                  getConllUFeatures(),
                  getParentForChildren(),
                  isClean());
          conllUFeatures_ = null;
        }
        return conllUFeaturesBuilder_;
      }

      private java.lang.Object coarseTag_ = "";
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public boolean hasCoarseTag() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public java.lang.String getCoarseTag() {
        java.lang.Object ref = coarseTag_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            coarseTag_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getCoarseTagBytes() {
        java.lang.Object ref = coarseTag_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          coarseTag_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public Builder setCoarseTag(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x40000000;
        coarseTag_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public Builder clearCoarseTag() {
        bitField0_ = (bitField0_ & ~0x40000000);
        coarseTag_ = getDefaultInstance().getCoarseTag();
        onChanged();
        return this;
      }
      /**
       * <code>optional string coarseTag = 33;</code>
       *
       * <pre>
       *  The coarse POS tag (used to store the UPOS tag)
       * </pre>
       */
      public Builder setCoarseTagBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x40000000;
        coarseTag_ = value;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Span conllUTokenSpan_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder> conllUTokenSpanBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public boolean hasConllUTokenSpan() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span getConllUTokenSpan() {
        if (conllUTokenSpanBuilder_ == null) {
          return conllUTokenSpan_;
        } else {
          return conllUTokenSpanBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public Builder setConllUTokenSpan(edu.stanford.nlp.pipeline.CoreNLPProtos.Span value) {
        if (conllUTokenSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conllUTokenSpan_ = value;
          onChanged();
        } else {
          conllUTokenSpanBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public Builder setConllUTokenSpan(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder builderForValue) {
        if (conllUTokenSpanBuilder_ == null) {
          conllUTokenSpan_ = builderForValue.build();
          onChanged();
        } else {
          conllUTokenSpanBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public Builder mergeConllUTokenSpan(edu.stanford.nlp.pipeline.CoreNLPProtos.Span value) {
        if (conllUTokenSpanBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              conllUTokenSpan_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance()) {
            conllUTokenSpan_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder(conllUTokenSpan_).mergeFrom(value).buildPartial();
          } else {
            conllUTokenSpan_ = value;
          }
          onChanged();
        } else {
          conllUTokenSpanBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public Builder clearConllUTokenSpan() {
        if (conllUTokenSpanBuilder_ == null) {
          conllUTokenSpan_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
          onChanged();
        } else {
          conllUTokenSpanBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder getConllUTokenSpanBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getConllUTokenSpanFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder getConllUTokenSpanOrBuilder() {
        if (conllUTokenSpanBuilder_ != null) {
          return conllUTokenSpanBuilder_.getMessageOrBuilder();
        } else {
          return conllUTokenSpan_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Span conllUTokenSpan = 34;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder> 
          getConllUTokenSpanFieldBuilder() {
        if (conllUTokenSpanBuilder_ == null) {
          conllUTokenSpanBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder>(
                  getConllUTokenSpan(),
                  getParentForChildren(),
                  isClean());
          conllUTokenSpan_ = null;
        }
        return conllUTokenSpanBuilder_;
      }

      private java.lang.Object conllUMisc_ = "";
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public boolean hasConllUMisc() {
        return ((bitField1_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public java.lang.String getConllUMisc() {
        java.lang.Object ref = conllUMisc_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            conllUMisc_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public com.google.protobuf.ByteString
          getConllUMiscBytes() {
        java.lang.Object ref = conllUMisc_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          conllUMisc_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public Builder setConllUMisc(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000001;
        conllUMisc_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public Builder clearConllUMisc() {
        bitField1_ = (bitField1_ & ~0x00000001);
        conllUMisc_ = getDefaultInstance().getConllUMisc();
        onChanged();
        return this;
      }
      /**
       * <code>optional string conllUMisc = 35;</code>
       */
      public Builder setConllUMiscBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000001;
        conllUMisc_ = value;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString conllUSecondaryDeps_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder> conllUSecondaryDepsBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public boolean hasConllUSecondaryDeps() {
        return ((bitField1_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString getConllUSecondaryDeps() {
        if (conllUSecondaryDepsBuilder_ == null) {
          return conllUSecondaryDeps_;
        } else {
          return conllUSecondaryDepsBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public Builder setConllUSecondaryDeps(edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString value) {
        if (conllUSecondaryDepsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          conllUSecondaryDeps_ = value;
          onChanged();
        } else {
          conllUSecondaryDepsBuilder_.setMessage(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public Builder setConllUSecondaryDeps(
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder builderForValue) {
        if (conllUSecondaryDepsBuilder_ == null) {
          conllUSecondaryDeps_ = builderForValue.build();
          onChanged();
        } else {
          conllUSecondaryDepsBuilder_.setMessage(builderForValue.build());
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public Builder mergeConllUSecondaryDeps(edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString value) {
        if (conllUSecondaryDepsBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002) &&
              conllUSecondaryDeps_ != edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance()) {
            conllUSecondaryDeps_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.newBuilder(conllUSecondaryDeps_).mergeFrom(value).buildPartial();
          } else {
            conllUSecondaryDeps_ = value;
          }
          onChanged();
        } else {
          conllUSecondaryDepsBuilder_.mergeFrom(value);
        }
        bitField1_ |= 0x00000002;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public Builder clearConllUSecondaryDeps() {
        if (conllUSecondaryDepsBuilder_ == null) {
          conllUSecondaryDeps_ = edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance();
          onChanged();
        } else {
          conllUSecondaryDepsBuilder_.clear();
        }
        bitField1_ = (bitField1_ & ~0x00000002);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder getConllUSecondaryDepsBuilder() {
        bitField1_ |= 0x00000002;
        onChanged();
        return getConllUSecondaryDepsFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder getConllUSecondaryDepsOrBuilder() {
        if (conllUSecondaryDepsBuilder_ != null) {
          return conllUSecondaryDepsBuilder_.getMessageOrBuilder();
        } else {
          return conllUSecondaryDeps_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.MapIntString conllUSecondaryDeps = 36;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder> 
          getConllUSecondaryDepsFieldBuilder() {
        if (conllUSecondaryDepsBuilder_ == null) {
          conllUSecondaryDepsBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder>(
                  getConllUSecondaryDeps(),
                  getParentForChildren(),
                  isClean());
          conllUSecondaryDeps_ = null;
        }
        return conllUSecondaryDepsBuilder_;
      }

      private java.lang.Object wikipediaEntity_ = "";
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public boolean hasWikipediaEntity() {
        return ((bitField1_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public java.lang.String getWikipediaEntity() {
        java.lang.Object ref = wikipediaEntity_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            wikipediaEntity_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public com.google.protobuf.ByteString
          getWikipediaEntityBytes() {
        java.lang.Object ref = wikipediaEntity_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          wikipediaEntity_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public Builder setWikipediaEntity(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
        wikipediaEntity_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public Builder clearWikipediaEntity() {
        bitField1_ = (bitField1_ & ~0x00000004);
        wikipediaEntity_ = getDefaultInstance().getWikipediaEntity();
        onChanged();
        return this;
      }
      /**
       * <code>optional string wikipediaEntity = 37;</code>
       */
      public Builder setWikipediaEntityBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000004;
        wikipediaEntity_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gender_ = "";
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public boolean hasGender() {
        return ((bitField1_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public java.lang.String getGender() {
        java.lang.Object ref = gender_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gender_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public com.google.protobuf.ByteString
          getGenderBytes() {
        java.lang.Object ref = gender_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gender_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public Builder setGender(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
        gender_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public Builder clearGender() {
        bitField1_ = (bitField1_ & ~0x00000008);
        gender_ = getDefaultInstance().getGender();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gender = 51;</code>
       *
       * <pre>
       * Fields set by other annotators in CoreNLP
       * </pre>
       */
      public Builder setGenderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000008;
        gender_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object trueCase_ = "";
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public boolean hasTrueCase() {
        return ((bitField1_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public java.lang.String getTrueCase() {
        java.lang.Object ref = trueCase_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trueCase_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTrueCaseBytes() {
        java.lang.Object ref = trueCase_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trueCase_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public Builder setTrueCase(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        trueCase_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public Builder clearTrueCase() {
        bitField1_ = (bitField1_ & ~0x00000010);
        trueCase_ = getDefaultInstance().getTrueCase();
        onChanged();
        return this;
      }
      /**
       * <code>optional string trueCase = 52;</code>
       *
       * <pre>
       * true case type of token
       * </pre>
       */
      public Builder setTrueCaseBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000010;
        trueCase_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object trueCaseText_ = "";
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public boolean hasTrueCaseText() {
        return ((bitField1_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public java.lang.String getTrueCaseText() {
        java.lang.Object ref = trueCaseText_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            trueCaseText_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public com.google.protobuf.ByteString
          getTrueCaseTextBytes() {
        java.lang.Object ref = trueCaseText_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          trueCaseText_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public Builder setTrueCaseText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
        trueCaseText_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public Builder clearTrueCaseText() {
        bitField1_ = (bitField1_ & ~0x00000020);
        trueCaseText_ = getDefaultInstance().getTrueCaseText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string trueCaseText = 53;</code>
       *
       * <pre>
       * true case gloss of token
       * </pre>
       */
      public Builder setTrueCaseTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField1_ |= 0x00000020;
        trueCaseText_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Token)
    }

    static {
      defaultInstance = new Token(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Token)
  }

  public interface QuoteOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Quote)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string text = 1;</code>
     */
    boolean hasText();
    /**
     * <code>optional string text = 1;</code>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 1;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional uint32 begin = 2;</code>
     */
    boolean hasBegin();
    /**
     * <code>optional uint32 begin = 2;</code>
     */
    int getBegin();

    /**
     * <code>optional uint32 end = 3;</code>
     */
    boolean hasEnd();
    /**
     * <code>optional uint32 end = 3;</code>
     */
    int getEnd();

    /**
     * <code>optional uint32 sentenceBegin = 5;</code>
     */
    boolean hasSentenceBegin();
    /**
     * <code>optional uint32 sentenceBegin = 5;</code>
     */
    int getSentenceBegin();

    /**
     * <code>optional uint32 sentenceEnd = 6;</code>
     */
    boolean hasSentenceEnd();
    /**
     * <code>optional uint32 sentenceEnd = 6;</code>
     */
    int getSentenceEnd();

    /**
     * <code>optional uint32 tokenBegin = 7;</code>
     */
    boolean hasTokenBegin();
    /**
     * <code>optional uint32 tokenBegin = 7;</code>
     */
    int getTokenBegin();

    /**
     * <code>optional uint32 tokenEnd = 8;</code>
     */
    boolean hasTokenEnd();
    /**
     * <code>optional uint32 tokenEnd = 8;</code>
     */
    int getTokenEnd();

    /**
     * <code>optional string docid = 9;</code>
     */
    boolean hasDocid();
    /**
     * <code>optional string docid = 9;</code>
     */
    java.lang.String getDocid();
    /**
     * <code>optional string docid = 9;</code>
     */
    com.google.protobuf.ByteString
        getDocidBytes();

    /**
     * <code>optional uint32 index = 10;</code>
     */
    boolean hasIndex();
    /**
     * <code>optional uint32 index = 10;</code>
     */
    int getIndex();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Quote}
   *
   * <pre>
   * A quotation marker in text
   * </pre>
   */
  public static final class Quote extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Quote)
      QuoteOrBuilder {
    // Use Quote.newBuilder() to construct.
    private Quote(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Quote(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Quote defaultInstance;
    public static Quote getDefaultInstance() {
      return defaultInstance;
    }

    public Quote getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Quote(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              text_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              begin_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              end_ = input.readUInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000008;
              sentenceBegin_ = input.readUInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000010;
              sentenceEnd_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000020;
              tokenBegin_ = input.readUInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000040;
              tokenEnd_ = input.readUInt32();
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000080;
              docid_ = bs;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              index_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Quote_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Quote_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder.class);
    }

    public static com.google.protobuf.Parser<Quote> PARSER =
        new com.google.protobuf.AbstractParser<Quote>() {
      public Quote parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Quote(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Quote> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TEXT_FIELD_NUMBER = 1;
    private java.lang.Object text_;
    /**
     * <code>optional string text = 1;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string text = 1;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGIN_FIELD_NUMBER = 2;
    private int begin_;
    /**
     * <code>optional uint32 begin = 2;</code>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 begin = 2;</code>
     */
    public int getBegin() {
      return begin_;
    }

    public static final int END_FIELD_NUMBER = 3;
    private int end_;
    /**
     * <code>optional uint32 end = 3;</code>
     */
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 end = 3;</code>
     */
    public int getEnd() {
      return end_;
    }

    public static final int SENTENCEBEGIN_FIELD_NUMBER = 5;
    private int sentenceBegin_;
    /**
     * <code>optional uint32 sentenceBegin = 5;</code>
     */
    public boolean hasSentenceBegin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 sentenceBegin = 5;</code>
     */
    public int getSentenceBegin() {
      return sentenceBegin_;
    }

    public static final int SENTENCEEND_FIELD_NUMBER = 6;
    private int sentenceEnd_;
    /**
     * <code>optional uint32 sentenceEnd = 6;</code>
     */
    public boolean hasSentenceEnd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 sentenceEnd = 6;</code>
     */
    public int getSentenceEnd() {
      return sentenceEnd_;
    }

    public static final int TOKENBEGIN_FIELD_NUMBER = 7;
    private int tokenBegin_;
    /**
     * <code>optional uint32 tokenBegin = 7;</code>
     */
    public boolean hasTokenBegin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 tokenBegin = 7;</code>
     */
    public int getTokenBegin() {
      return tokenBegin_;
    }

    public static final int TOKENEND_FIELD_NUMBER = 8;
    private int tokenEnd_;
    /**
     * <code>optional uint32 tokenEnd = 8;</code>
     */
    public boolean hasTokenEnd() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 tokenEnd = 8;</code>
     */
    public int getTokenEnd() {
      return tokenEnd_;
    }

    public static final int DOCID_FIELD_NUMBER = 9;
    private java.lang.Object docid_;
    /**
     * <code>optional string docid = 9;</code>
     */
    public boolean hasDocid() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional string docid = 9;</code>
     */
    public java.lang.String getDocid() {
      java.lang.Object ref = docid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          docid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string docid = 9;</code>
     */
    public com.google.protobuf.ByteString
        getDocidBytes() {
      java.lang.Object ref = docid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        docid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INDEX_FIELD_NUMBER = 10;
    private int index_;
    /**
     * <code>optional uint32 index = 10;</code>
     */
    public boolean hasIndex() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 index = 10;</code>
     */
    public int getIndex() {
      return index_;
    }

    private void initFields() {
      text_ = "";
      begin_ = 0;
      end_ = 0;
      sentenceBegin_ = 0;
      sentenceEnd_ = 0;
      tokenBegin_ = 0;
      tokenEnd_ = 0;
      docid_ = "";
      index_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getTextBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, begin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, end_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(5, sentenceBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(6, sentenceEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(7, tokenBegin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(8, tokenEnd_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBytes(9, getDocidBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(10, index_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getTextBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, begin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, end_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(5, sentenceBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, sentenceEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, tokenBegin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(8, tokenEnd_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getDocidBytes());
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, index_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Quote prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Quote}
     *
     * <pre>
     * A quotation marker in text
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Quote)
        edu.stanford.nlp.pipeline.CoreNLPProtos.QuoteOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Quote_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Quote_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        sentenceBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        sentenceEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        tokenBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        tokenEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        docid_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        index_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Quote_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Quote result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Quote buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Quote result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Quote(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.end_ = end_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.sentenceBegin_ = sentenceBegin_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sentenceEnd_ = sentenceEnd_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.tokenBegin_ = tokenBegin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.tokenEnd_ = tokenEnd_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.docid_ = docid_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.index_ = index_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Quote) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Quote)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Quote other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Quote.getDefaultInstance()) return this;
        if (other.hasText()) {
          bitField0_ |= 0x00000001;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        if (other.hasSentenceBegin()) {
          setSentenceBegin(other.getSentenceBegin());
        }
        if (other.hasSentenceEnd()) {
          setSentenceEnd(other.getSentenceEnd());
        }
        if (other.hasTokenBegin()) {
          setTokenBegin(other.getTokenBegin());
        }
        if (other.hasTokenEnd()) {
          setTokenEnd(other.getTokenEnd());
        }
        if (other.hasDocid()) {
          bitField0_ |= 0x00000080;
          docid_ = other.docid_;
          onChanged();
        }
        if (other.hasIndex()) {
          setIndex(other.getIndex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Quote parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Quote) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 1;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string text = 1;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 1;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 1;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 1;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000001);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 1;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        text_ = value;
        onChanged();
        return this;
      }

      private int begin_ ;
      /**
       * <code>optional uint32 begin = 2;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 begin = 2;</code>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <code>optional uint32 begin = 2;</code>
       */
      public Builder setBegin(int value) {
        bitField0_ |= 0x00000002;
        begin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 begin = 2;</code>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        begin_ = 0;
        onChanged();
        return this;
      }

      private int end_ ;
      /**
       * <code>optional uint32 end = 3;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 end = 3;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>optional uint32 end = 3;</code>
       */
      public Builder setEnd(int value) {
        bitField0_ |= 0x00000004;
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 end = 3;</code>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        end_ = 0;
        onChanged();
        return this;
      }

      private int sentenceBegin_ ;
      /**
       * <code>optional uint32 sentenceBegin = 5;</code>
       */
      public boolean hasSentenceBegin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 sentenceBegin = 5;</code>
       */
      public int getSentenceBegin() {
        return sentenceBegin_;
      }
      /**
       * <code>optional uint32 sentenceBegin = 5;</code>
       */
      public Builder setSentenceBegin(int value) {
        bitField0_ |= 0x00000008;
        sentenceBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentenceBegin = 5;</code>
       */
      public Builder clearSentenceBegin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        sentenceBegin_ = 0;
        onChanged();
        return this;
      }

      private int sentenceEnd_ ;
      /**
       * <code>optional uint32 sentenceEnd = 6;</code>
       */
      public boolean hasSentenceEnd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 sentenceEnd = 6;</code>
       */
      public int getSentenceEnd() {
        return sentenceEnd_;
      }
      /**
       * <code>optional uint32 sentenceEnd = 6;</code>
       */
      public Builder setSentenceEnd(int value) {
        bitField0_ |= 0x00000010;
        sentenceEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentenceEnd = 6;</code>
       */
      public Builder clearSentenceEnd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        sentenceEnd_ = 0;
        onChanged();
        return this;
      }

      private int tokenBegin_ ;
      /**
       * <code>optional uint32 tokenBegin = 7;</code>
       */
      public boolean hasTokenBegin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 tokenBegin = 7;</code>
       */
      public int getTokenBegin() {
        return tokenBegin_;
      }
      /**
       * <code>optional uint32 tokenBegin = 7;</code>
       */
      public Builder setTokenBegin(int value) {
        bitField0_ |= 0x00000020;
        tokenBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tokenBegin = 7;</code>
       */
      public Builder clearTokenBegin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        tokenBegin_ = 0;
        onChanged();
        return this;
      }

      private int tokenEnd_ ;
      /**
       * <code>optional uint32 tokenEnd = 8;</code>
       */
      public boolean hasTokenEnd() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 tokenEnd = 8;</code>
       */
      public int getTokenEnd() {
        return tokenEnd_;
      }
      /**
       * <code>optional uint32 tokenEnd = 8;</code>
       */
      public Builder setTokenEnd(int value) {
        bitField0_ |= 0x00000040;
        tokenEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tokenEnd = 8;</code>
       */
      public Builder clearTokenEnd() {
        bitField0_ = (bitField0_ & ~0x00000040);
        tokenEnd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object docid_ = "";
      /**
       * <code>optional string docid = 9;</code>
       */
      public boolean hasDocid() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string docid = 9;</code>
       */
      public java.lang.String getDocid() {
        java.lang.Object ref = docid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            docid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string docid = 9;</code>
       */
      public com.google.protobuf.ByteString
          getDocidBytes() {
        java.lang.Object ref = docid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          docid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string docid = 9;</code>
       */
      public Builder setDocid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        docid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string docid = 9;</code>
       */
      public Builder clearDocid() {
        bitField0_ = (bitField0_ & ~0x00000080);
        docid_ = getDefaultInstance().getDocid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string docid = 9;</code>
       */
      public Builder setDocidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        docid_ = value;
        onChanged();
        return this;
      }

      private int index_ ;
      /**
       * <code>optional uint32 index = 10;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 index = 10;</code>
       */
      public int getIndex() {
        return index_;
      }
      /**
       * <code>optional uint32 index = 10;</code>
       */
      public Builder setIndex(int value) {
        bitField0_ |= 0x00000100;
        index_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 index = 10;</code>
       */
      public Builder clearIndex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        index_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Quote)
    }

    static {
      defaultInstance = new Quote(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Quote)
  }

  public interface ParseTreeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.ParseTree)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> 
        getChildList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getChild(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    int getChildCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
        getChildOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getChildOrBuilder(
        int index);

    /**
     * <code>optional string value = 2;</code>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 2;</code>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>optional uint32 yieldBeginIndex = 3;</code>
     */
    boolean hasYieldBeginIndex();
    /**
     * <code>optional uint32 yieldBeginIndex = 3;</code>
     */
    int getYieldBeginIndex();

    /**
     * <code>optional uint32 yieldEndIndex = 4;</code>
     */
    boolean hasYieldEndIndex();
    /**
     * <code>optional uint32 yieldEndIndex = 4;</code>
     */
    int getYieldEndIndex();

    /**
     * <code>optional double score = 5;</code>
     */
    boolean hasScore();
    /**
     * <code>optional double score = 5;</code>
     */
    double getScore();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
     */
    boolean hasSentiment();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment getSentiment();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.ParseTree}
   *
   * <pre>
   * A syntactic parse tree, with scores.
   * </pre>
   */
  public static final class ParseTree extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.ParseTree)
      ParseTreeOrBuilder {
    // Use ParseTree.newBuilder() to construct.
    private ParseTree(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ParseTree(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ParseTree defaultInstance;
    public static ParseTree getDefaultInstance() {
      return defaultInstance;
    }

    public ParseTree getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ParseTree(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                child_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree>();
                mutable_bitField0_ |= 0x00000001;
              }
              child_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              value_ = bs;
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              yieldBeginIndex_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000004;
              yieldEndIndex_ = input.readUInt32();
              break;
            }
            case 41: {
              bitField0_ |= 0x00000008;
              score_ = input.readDouble();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment value = edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                sentiment_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          child_ = java.util.Collections.unmodifiableList(child_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_ParseTree_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.class, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder.class);
    }

    public static com.google.protobuf.Parser<ParseTree> PARSER =
        new com.google.protobuf.AbstractParser<ParseTree>() {
      public ParseTree parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ParseTree(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ParseTree> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int CHILD_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> child_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> getChildList() {
      return child_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
        getChildOrBuilderList() {
      return child_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    public int getChildCount() {
      return child_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getChild(int index) {
      return child_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getChildOrBuilder(
        int index) {
      return child_.get(index);
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 2;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string value = 2;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int YIELDBEGININDEX_FIELD_NUMBER = 3;
    private int yieldBeginIndex_;
    /**
     * <code>optional uint32 yieldBeginIndex = 3;</code>
     */
    public boolean hasYieldBeginIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 yieldBeginIndex = 3;</code>
     */
    public int getYieldBeginIndex() {
      return yieldBeginIndex_;
    }

    public static final int YIELDENDINDEX_FIELD_NUMBER = 4;
    private int yieldEndIndex_;
    /**
     * <code>optional uint32 yieldEndIndex = 4;</code>
     */
    public boolean hasYieldEndIndex() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 yieldEndIndex = 4;</code>
     */
    public int getYieldEndIndex() {
      return yieldEndIndex_;
    }

    public static final int SCORE_FIELD_NUMBER = 5;
    private double score_;
    /**
     * <code>optional double score = 5;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double score = 5;</code>
     */
    public double getScore() {
      return score_;
    }

    public static final int SENTIMENT_FIELD_NUMBER = 6;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment sentiment_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
     */
    public boolean hasSentiment() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment getSentiment() {
      return sentiment_;
    }

    private void initFields() {
      child_ = java.util.Collections.emptyList();
      value_ = "";
      yieldBeginIndex_ = 0;
      yieldEndIndex_ = 0;
      score_ = 0D;
      sentiment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment.STRONG_NEGATIVE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < child_.size(); i++) {
        output.writeMessage(1, child_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(2, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, yieldBeginIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(4, yieldEndIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(5, score_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(6, sentiment_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < child_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, child_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, yieldBeginIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, yieldEndIndex_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(5, score_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, sentiment_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.ParseTree}
     *
     * <pre>
     * A syntactic parse tree, with scores.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.ParseTree)
        edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_ParseTree_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.class, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getChildFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (childBuilder_ == null) {
          child_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          childBuilder_.clear();
        }
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        yieldBeginIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        yieldEndIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000010);
        sentiment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment.STRONG_NEGATIVE;
        bitField0_ = (bitField0_ & ~0x00000020);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree result = new edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (childBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            child_ = java.util.Collections.unmodifiableList(child_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.child_ = child_;
        } else {
          result.child_ = childBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.yieldBeginIndex_ = yieldBeginIndex_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.yieldEndIndex_ = yieldEndIndex_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000008;
        }
        result.score_ = score_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000010;
        }
        result.sentiment_ = sentiment_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance()) return this;
        if (childBuilder_ == null) {
          if (!other.child_.isEmpty()) {
            if (child_.isEmpty()) {
              child_ = other.child_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureChildIsMutable();
              child_.addAll(other.child_);
            }
            onChanged();
          }
        } else {
          if (!other.child_.isEmpty()) {
            if (childBuilder_.isEmpty()) {
              childBuilder_.dispose();
              childBuilder_ = null;
              child_ = other.child_;
              bitField0_ = (bitField0_ & ~0x00000001);
              childBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getChildFieldBuilder() : null;
            } else {
              childBuilder_.addAllMessages(other.child_);
            }
          }
        }
        if (other.hasValue()) {
          bitField0_ |= 0x00000002;
          value_ = other.value_;
          onChanged();
        }
        if (other.hasYieldBeginIndex()) {
          setYieldBeginIndex(other.getYieldBeginIndex());
        }
        if (other.hasYieldEndIndex()) {
          setYieldEndIndex(other.getYieldEndIndex());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        if (other.hasSentiment()) {
          setSentiment(other.getSentiment());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> child_ =
        java.util.Collections.emptyList();
      private void ensureChildIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          child_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree>(child_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> childBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> getChildList() {
        if (childBuilder_ == null) {
          return java.util.Collections.unmodifiableList(child_);
        } else {
          return childBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public int getChildCount() {
        if (childBuilder_ == null) {
          return child_.size();
        } else {
          return childBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree getChild(int index) {
        if (childBuilder_ == null) {
          return child_.get(index);
        } else {
          return childBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder setChild(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (childBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildIsMutable();
          child_.set(index, value);
          onChanged();
        } else {
          childBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder setChild(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (childBuilder_ == null) {
          ensureChildIsMutable();
          child_.set(index, builderForValue.build());
          onChanged();
        } else {
          childBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder addChild(edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (childBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildIsMutable();
          child_.add(value);
          onChanged();
        } else {
          childBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder addChild(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree value) {
        if (childBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureChildIsMutable();
          child_.add(index, value);
          onChanged();
        } else {
          childBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder addChild(
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (childBuilder_ == null) {
          ensureChildIsMutable();
          child_.add(builderForValue.build());
          onChanged();
        } else {
          childBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder addChild(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder builderForValue) {
        if (childBuilder_ == null) {
          ensureChildIsMutable();
          child_.add(index, builderForValue.build());
          onChanged();
        } else {
          childBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder addAllChild(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree> values) {
        if (childBuilder_ == null) {
          ensureChildIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, child_);
          onChanged();
        } else {
          childBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder clearChild() {
        if (childBuilder_ == null) {
          child_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          childBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public Builder removeChild(int index) {
        if (childBuilder_ == null) {
          ensureChildIsMutable();
          child_.remove(index);
          onChanged();
        } else {
          childBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder getChildBuilder(
          int index) {
        return getChildFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder getChildOrBuilder(
          int index) {
        if (childBuilder_ == null) {
          return child_.get(index);  } else {
          return childBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
           getChildOrBuilderList() {
        if (childBuilder_ != null) {
          return childBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(child_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder addChildBuilder() {
        return getChildFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder addChildBuilder(
          int index) {
        return getChildFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.ParseTree child = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder> 
           getChildBuilderList() {
        return getChildFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder> 
          getChildFieldBuilder() {
        if (childBuilder_ == null) {
          childBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTree.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.ParseTreeOrBuilder>(
                  child_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          child_ = null;
        }
        return childBuilder_;
      }

      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 2;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 2;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        value_ = value;
        onChanged();
        return this;
      }

      private int yieldBeginIndex_ ;
      /**
       * <code>optional uint32 yieldBeginIndex = 3;</code>
       */
      public boolean hasYieldBeginIndex() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 yieldBeginIndex = 3;</code>
       */
      public int getYieldBeginIndex() {
        return yieldBeginIndex_;
      }
      /**
       * <code>optional uint32 yieldBeginIndex = 3;</code>
       */
      public Builder setYieldBeginIndex(int value) {
        bitField0_ |= 0x00000004;
        yieldBeginIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 yieldBeginIndex = 3;</code>
       */
      public Builder clearYieldBeginIndex() {
        bitField0_ = (bitField0_ & ~0x00000004);
        yieldBeginIndex_ = 0;
        onChanged();
        return this;
      }

      private int yieldEndIndex_ ;
      /**
       * <code>optional uint32 yieldEndIndex = 4;</code>
       */
      public boolean hasYieldEndIndex() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 yieldEndIndex = 4;</code>
       */
      public int getYieldEndIndex() {
        return yieldEndIndex_;
      }
      /**
       * <code>optional uint32 yieldEndIndex = 4;</code>
       */
      public Builder setYieldEndIndex(int value) {
        bitField0_ |= 0x00000008;
        yieldEndIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 yieldEndIndex = 4;</code>
       */
      public Builder clearYieldEndIndex() {
        bitField0_ = (bitField0_ & ~0x00000008);
        yieldEndIndex_ = 0;
        onChanged();
        return this;
      }

      private double score_ ;
      /**
       * <code>optional double score = 5;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional double score = 5;</code>
       */
      public double getScore() {
        return score_;
      }
      /**
       * <code>optional double score = 5;</code>
       */
      public Builder setScore(double value) {
        bitField0_ |= 0x00000010;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double score = 5;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000010);
        score_ = 0D;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment sentiment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment.STRONG_NEGATIVE;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
       */
      public boolean hasSentiment() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment getSentiment() {
        return sentiment_;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
       */
      public Builder setSentiment(edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        sentiment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Sentiment sentiment = 6;</code>
       */
      public Builder clearSentiment() {
        bitField0_ = (bitField0_ & ~0x00000020);
        sentiment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Sentiment.STRONG_NEGATIVE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.ParseTree)
    }

    static {
      defaultInstance = new ParseTree(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.ParseTree)
  }

  public interface DependencyGraphOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.DependencyGraph)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> 
        getNodeList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node getNode(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    int getNodeCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder> 
        getNodeOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder getNodeOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> 
        getEdgeList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge getEdge(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    int getEdgeCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder> 
        getEdgeOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder getEdgeOrBuilder(
        int index);

    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    java.util.List<java.lang.Integer> getRootList();
    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    int getRootCount();
    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    int getRoot(int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph}
   *
   * <pre>
   * A dependency graph representation.
   * </pre>
   */
  public static final class DependencyGraph extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.DependencyGraph)
      DependencyGraphOrBuilder {
    // Use DependencyGraph.newBuilder() to construct.
    private DependencyGraph(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private DependencyGraph(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final DependencyGraph defaultInstance;
    public static DependencyGraph getDefaultInstance() {
      return defaultInstance;
    }

    public DependencyGraph getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private DependencyGraph(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                node_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node>();
                mutable_bitField0_ |= 0x00000001;
              }
              node_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.PARSER, extensionRegistry));
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                edge_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge>();
                mutable_bitField0_ |= 0x00000002;
              }
              edge_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
                root_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              root_.add(input.readUInt32());
              break;
            }
            case 26: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000004) == 0x00000004) && input.getBytesUntilLimit() > 0) {
                root_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000004;
              }
              while (input.getBytesUntilLimit() > 0) {
                root_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = java.util.Collections.unmodifiableList(node_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = java.util.Collections.unmodifiableList(edge_);
        }
        if (((mutable_bitField0_ & 0x00000004) == 0x00000004)) {
          root_ = java.util.Collections.unmodifiableList(root_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder.class);
    }

    public static com.google.protobuf.Parser<DependencyGraph> PARSER =
        new com.google.protobuf.AbstractParser<DependencyGraph>() {
      public DependencyGraph parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new DependencyGraph(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<DependencyGraph> getParserForType() {
      return PARSER;
    }

    public interface NodeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.DependencyGraph.Node)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint32 sentenceIndex = 1;</code>
       */
      boolean hasSentenceIndex();
      /**
       * <code>required uint32 sentenceIndex = 1;</code>
       */
      int getSentenceIndex();

      /**
       * <code>required uint32 index = 2;</code>
       */
      boolean hasIndex();
      /**
       * <code>required uint32 index = 2;</code>
       */
      int getIndex();

      /**
       * <code>optional uint32 copyAnnotation = 3;</code>
       */
      boolean hasCopyAnnotation();
      /**
       * <code>optional uint32 copyAnnotation = 3;</code>
       */
      int getCopyAnnotation();
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph.Node}
     */
    public static final class Node extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.DependencyGraph.Node)
        NodeOrBuilder {
      // Use Node.newBuilder() to construct.
      private Node(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Node(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Node defaultInstance;
      public static Node getDefaultInstance() {
        return defaultInstance;
      }

      public Node getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Node(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sentenceIndex_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                index_ = input.readUInt32();
                break;
              }
              case 24: {
                bitField0_ |= 0x00000004;
                copyAnnotation_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder.class);
      }

      public static com.google.protobuf.Parser<Node> PARSER =
          new com.google.protobuf.AbstractParser<Node>() {
        public Node parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Node(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Node> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SENTENCEINDEX_FIELD_NUMBER = 1;
      private int sentenceIndex_;
      /**
       * <code>required uint32 sentenceIndex = 1;</code>
       */
      public boolean hasSentenceIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 sentenceIndex = 1;</code>
       */
      public int getSentenceIndex() {
        return sentenceIndex_;
      }

      public static final int INDEX_FIELD_NUMBER = 2;
      private int index_;
      /**
       * <code>required uint32 index = 2;</code>
       */
      public boolean hasIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 index = 2;</code>
       */
      public int getIndex() {
        return index_;
      }

      public static final int COPYANNOTATION_FIELD_NUMBER = 3;
      private int copyAnnotation_;
      /**
       * <code>optional uint32 copyAnnotation = 3;</code>
       */
      public boolean hasCopyAnnotation() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 copyAnnotation = 3;</code>
       */
      public int getCopyAnnotation() {
        return copyAnnotation_;
      }

      private void initFields() {
        sentenceIndex_ = 0;
        index_ = 0;
        copyAnnotation_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSentenceIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasIndex()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, sentenceIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, index_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeUInt32(3, copyAnnotation_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, sentenceIndex_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, index_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(3, copyAnnotation_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph.Node}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.DependencyGraph.Node)
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder.class);
        }

        // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sentenceIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          index_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          copyAnnotation_ = 0;
          bitField0_ = (bitField0_ & ~0x00000004);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node getDefaultInstanceForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.getDefaultInstance();
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node build() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node buildPartial() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node result = new edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sentenceIndex_ = sentenceIndex_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.index_ = index_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.copyAnnotation_ = copyAnnotation_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node) {
            return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node other) {
          if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.getDefaultInstance()) return this;
          if (other.hasSentenceIndex()) {
            setSentenceIndex(other.getSentenceIndex());
          }
          if (other.hasIndex()) {
            setIndex(other.getIndex());
          }
          if (other.hasCopyAnnotation()) {
            setCopyAnnotation(other.getCopyAnnotation());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSentenceIndex()) {
            
            return false;
          }
          if (!hasIndex()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int sentenceIndex_ ;
        /**
         * <code>required uint32 sentenceIndex = 1;</code>
         */
        public boolean hasSentenceIndex() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint32 sentenceIndex = 1;</code>
         */
        public int getSentenceIndex() {
          return sentenceIndex_;
        }
        /**
         * <code>required uint32 sentenceIndex = 1;</code>
         */
        public Builder setSentenceIndex(int value) {
          bitField0_ |= 0x00000001;
          sentenceIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 sentenceIndex = 1;</code>
         */
        public Builder clearSentenceIndex() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sentenceIndex_ = 0;
          onChanged();
          return this;
        }

        private int index_ ;
        /**
         * <code>required uint32 index = 2;</code>
         */
        public boolean hasIndex() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint32 index = 2;</code>
         */
        public int getIndex() {
          return index_;
        }
        /**
         * <code>required uint32 index = 2;</code>
         */
        public Builder setIndex(int value) {
          bitField0_ |= 0x00000002;
          index_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 index = 2;</code>
         */
        public Builder clearIndex() {
          bitField0_ = (bitField0_ & ~0x00000002);
          index_ = 0;
          onChanged();
          return this;
        }

        private int copyAnnotation_ ;
        /**
         * <code>optional uint32 copyAnnotation = 3;</code>
         */
        public boolean hasCopyAnnotation() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional uint32 copyAnnotation = 3;</code>
         */
        public int getCopyAnnotation() {
          return copyAnnotation_;
        }
        /**
         * <code>optional uint32 copyAnnotation = 3;</code>
         */
        public Builder setCopyAnnotation(int value) {
          bitField0_ |= 0x00000004;
          copyAnnotation_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 copyAnnotation = 3;</code>
         */
        public Builder clearCopyAnnotation() {
          bitField0_ = (bitField0_ & ~0x00000004);
          copyAnnotation_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.DependencyGraph.Node)
      }

      static {
        defaultInstance = new Node(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.DependencyGraph.Node)
    }

    public interface EdgeOrBuilder extends
        // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.DependencyGraph.Edge)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required uint32 source = 1;</code>
       */
      boolean hasSource();
      /**
       * <code>required uint32 source = 1;</code>
       */
      int getSource();

      /**
       * <code>required uint32 target = 2;</code>
       */
      boolean hasTarget();
      /**
       * <code>required uint32 target = 2;</code>
       */
      int getTarget();

      /**
       * <code>optional string dep = 3;</code>
       */
      boolean hasDep();
      /**
       * <code>optional string dep = 3;</code>
       */
      java.lang.String getDep();
      /**
       * <code>optional string dep = 3;</code>
       */
      com.google.protobuf.ByteString
          getDepBytes();

      /**
       * <code>optional bool isExtra = 4;</code>
       */
      boolean hasIsExtra();
      /**
       * <code>optional bool isExtra = 4;</code>
       */
      boolean getIsExtra();

      /**
       * <code>optional uint32 sourceCopy = 5;</code>
       */
      boolean hasSourceCopy();
      /**
       * <code>optional uint32 sourceCopy = 5;</code>
       */
      int getSourceCopy();

      /**
       * <code>optional uint32 targetCopy = 6;</code>
       */
      boolean hasTargetCopy();
      /**
       * <code>optional uint32 targetCopy = 6;</code>
       */
      int getTargetCopy();

      /**
       * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
       */
      boolean hasLanguage();
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
       */
      edu.stanford.nlp.pipeline.CoreNLPProtos.Language getLanguage();
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph.Edge}
     */
    public static final class Edge extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.DependencyGraph.Edge)
        EdgeOrBuilder {
      // Use Edge.newBuilder() to construct.
      private Edge(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Edge(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Edge defaultInstance;
      public static Edge getDefaultInstance() {
        return defaultInstance;
      }

      public Edge getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Edge(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                source_ = input.readUInt32();
                break;
              }
              case 16: {
                bitField0_ |= 0x00000002;
                target_ = input.readUInt32();
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                dep_ = bs;
                break;
              }
              case 32: {
                bitField0_ |= 0x00000008;
                isExtra_ = input.readBool();
                break;
              }
              case 40: {
                bitField0_ |= 0x00000010;
                sourceCopy_ = input.readUInt32();
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                targetCopy_ = input.readUInt32();
                break;
              }
              case 56: {
                int rawValue = input.readEnum();
                edu.stanford.nlp.pipeline.CoreNLPProtos.Language value = edu.stanford.nlp.pipeline.CoreNLPProtos.Language.valueOf(rawValue);
                if (value == null) {
                  unknownFields.mergeVarintField(7, rawValue);
                } else {
                  bitField0_ |= 0x00000040;
                  language_ = value;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder.class);
      }

      public static com.google.protobuf.Parser<Edge> PARSER =
          new com.google.protobuf.AbstractParser<Edge>() {
        public Edge parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Edge(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Edge> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SOURCE_FIELD_NUMBER = 1;
      private int source_;
      /**
       * <code>required uint32 source = 1;</code>
       */
      public boolean hasSource() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 source = 1;</code>
       */
      public int getSource() {
        return source_;
      }

      public static final int TARGET_FIELD_NUMBER = 2;
      private int target_;
      /**
       * <code>required uint32 target = 2;</code>
       */
      public boolean hasTarget() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 target = 2;</code>
       */
      public int getTarget() {
        return target_;
      }

      public static final int DEP_FIELD_NUMBER = 3;
      private java.lang.Object dep_;
      /**
       * <code>optional string dep = 3;</code>
       */
      public boolean hasDep() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string dep = 3;</code>
       */
      public java.lang.String getDep() {
        java.lang.Object ref = dep_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            dep_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string dep = 3;</code>
       */
      public com.google.protobuf.ByteString
          getDepBytes() {
        java.lang.Object ref = dep_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          dep_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ISEXTRA_FIELD_NUMBER = 4;
      private boolean isExtra_;
      /**
       * <code>optional bool isExtra = 4;</code>
       */
      public boolean hasIsExtra() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional bool isExtra = 4;</code>
       */
      public boolean getIsExtra() {
        return isExtra_;
      }

      public static final int SOURCECOPY_FIELD_NUMBER = 5;
      private int sourceCopy_;
      /**
       * <code>optional uint32 sourceCopy = 5;</code>
       */
      public boolean hasSourceCopy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 sourceCopy = 5;</code>
       */
      public int getSourceCopy() {
        return sourceCopy_;
      }

      public static final int TARGETCOPY_FIELD_NUMBER = 6;
      private int targetCopy_;
      /**
       * <code>optional uint32 targetCopy = 6;</code>
       */
      public boolean hasTargetCopy() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 targetCopy = 6;</code>
       */
      public int getTargetCopy() {
        return targetCopy_;
      }

      public static final int LANGUAGE_FIELD_NUMBER = 7;
      private edu.stanford.nlp.pipeline.CoreNLPProtos.Language language_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
       */
      public boolean hasLanguage() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Language getLanguage() {
        return language_;
      }

      private void initFields() {
        source_ = 0;
        target_ = 0;
        dep_ = "";
        isExtra_ = false;
        sourceCopy_ = 0;
        targetCopy_ = 0;
        language_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Language.Unknown;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSource()) {
          memoizedIsInitialized = 0;
          return false;
        }
        if (!hasTarget()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeUInt32(1, source_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeUInt32(2, target_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getDepBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBool(4, isExtra_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeUInt32(5, sourceCopy_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, targetCopy_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeEnum(7, language_.getNumber());
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(1, source_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(2, target_);
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getDepBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(4, isExtra_);
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(5, sourceCopy_);
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, targetCopy_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeEnumSize(7, language_.getNumber());
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph.Edge}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.DependencyGraph.Edge)
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder.class);
        }

        // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          source_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          target_ = 0;
          bitField0_ = (bitField0_ & ~0x00000002);
          dep_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          isExtra_ = false;
          bitField0_ = (bitField0_ & ~0x00000008);
          sourceCopy_ = 0;
          bitField0_ = (bitField0_ & ~0x00000010);
          targetCopy_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          language_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Language.Unknown;
          bitField0_ = (bitField0_ & ~0x00000040);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge getDefaultInstanceForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.getDefaultInstance();
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge build() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge buildPartial() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge result = new edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.source_ = source_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.target_ = target_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.dep_ = dep_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.isExtra_ = isExtra_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.sourceCopy_ = sourceCopy_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.targetCopy_ = targetCopy_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.language_ = language_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge) {
            return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge other) {
          if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.getDefaultInstance()) return this;
          if (other.hasSource()) {
            setSource(other.getSource());
          }
          if (other.hasTarget()) {
            setTarget(other.getTarget());
          }
          if (other.hasDep()) {
            bitField0_ |= 0x00000004;
            dep_ = other.dep_;
            onChanged();
          }
          if (other.hasIsExtra()) {
            setIsExtra(other.getIsExtra());
          }
          if (other.hasSourceCopy()) {
            setSourceCopy(other.getSourceCopy());
          }
          if (other.hasTargetCopy()) {
            setTargetCopy(other.getTargetCopy());
          }
          if (other.hasLanguage()) {
            setLanguage(other.getLanguage());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSource()) {
            
            return false;
          }
          if (!hasTarget()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int source_ ;
        /**
         * <code>required uint32 source = 1;</code>
         */
        public boolean hasSource() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required uint32 source = 1;</code>
         */
        public int getSource() {
          return source_;
        }
        /**
         * <code>required uint32 source = 1;</code>
         */
        public Builder setSource(int value) {
          bitField0_ |= 0x00000001;
          source_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 source = 1;</code>
         */
        public Builder clearSource() {
          bitField0_ = (bitField0_ & ~0x00000001);
          source_ = 0;
          onChanged();
          return this;
        }

        private int target_ ;
        /**
         * <code>required uint32 target = 2;</code>
         */
        public boolean hasTarget() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>required uint32 target = 2;</code>
         */
        public int getTarget() {
          return target_;
        }
        /**
         * <code>required uint32 target = 2;</code>
         */
        public Builder setTarget(int value) {
          bitField0_ |= 0x00000002;
          target_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required uint32 target = 2;</code>
         */
        public Builder clearTarget() {
          bitField0_ = (bitField0_ & ~0x00000002);
          target_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object dep_ = "";
        /**
         * <code>optional string dep = 3;</code>
         */
        public boolean hasDep() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string dep = 3;</code>
         */
        public java.lang.String getDep() {
          java.lang.Object ref = dep_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              dep_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string dep = 3;</code>
         */
        public com.google.protobuf.ByteString
            getDepBytes() {
          java.lang.Object ref = dep_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            dep_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string dep = 3;</code>
         */
        public Builder setDep(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          dep_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string dep = 3;</code>
         */
        public Builder clearDep() {
          bitField0_ = (bitField0_ & ~0x00000004);
          dep_ = getDefaultInstance().getDep();
          onChanged();
          return this;
        }
        /**
         * <code>optional string dep = 3;</code>
         */
        public Builder setDepBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          dep_ = value;
          onChanged();
          return this;
        }

        private boolean isExtra_ ;
        /**
         * <code>optional bool isExtra = 4;</code>
         */
        public boolean hasIsExtra() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional bool isExtra = 4;</code>
         */
        public boolean getIsExtra() {
          return isExtra_;
        }
        /**
         * <code>optional bool isExtra = 4;</code>
         */
        public Builder setIsExtra(boolean value) {
          bitField0_ |= 0x00000008;
          isExtra_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional bool isExtra = 4;</code>
         */
        public Builder clearIsExtra() {
          bitField0_ = (bitField0_ & ~0x00000008);
          isExtra_ = false;
          onChanged();
          return this;
        }

        private int sourceCopy_ ;
        /**
         * <code>optional uint32 sourceCopy = 5;</code>
         */
        public boolean hasSourceCopy() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional uint32 sourceCopy = 5;</code>
         */
        public int getSourceCopy() {
          return sourceCopy_;
        }
        /**
         * <code>optional uint32 sourceCopy = 5;</code>
         */
        public Builder setSourceCopy(int value) {
          bitField0_ |= 0x00000010;
          sourceCopy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 sourceCopy = 5;</code>
         */
        public Builder clearSourceCopy() {
          bitField0_ = (bitField0_ & ~0x00000010);
          sourceCopy_ = 0;
          onChanged();
          return this;
        }

        private int targetCopy_ ;
        /**
         * <code>optional uint32 targetCopy = 6;</code>
         */
        public boolean hasTargetCopy() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 targetCopy = 6;</code>
         */
        public int getTargetCopy() {
          return targetCopy_;
        }
        /**
         * <code>optional uint32 targetCopy = 6;</code>
         */
        public Builder setTargetCopy(int value) {
          bitField0_ |= 0x00000020;
          targetCopy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 targetCopy = 6;</code>
         */
        public Builder clearTargetCopy() {
          bitField0_ = (bitField0_ & ~0x00000020);
          targetCopy_ = 0;
          onChanged();
          return this;
        }

        private edu.stanford.nlp.pipeline.CoreNLPProtos.Language language_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Language.Unknown;
        /**
         * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
         */
        public boolean hasLanguage() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
         */
        public edu.stanford.nlp.pipeline.CoreNLPProtos.Language getLanguage() {
          return language_;
        }
        /**
         * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
         */
        public Builder setLanguage(edu.stanford.nlp.pipeline.CoreNLPProtos.Language value) {
          if (value == null) {
            throw new NullPointerException();
          }
          bitField0_ |= 0x00000040;
          language_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional .edu.stanford.nlp.pipeline.Language language = 7 [default = Unknown];</code>
         */
        public Builder clearLanguage() {
          bitField0_ = (bitField0_ & ~0x00000040);
          language_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Language.Unknown;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.DependencyGraph.Edge)
      }

      static {
        defaultInstance = new Edge(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.DependencyGraph.Edge)
    }

    public static final int NODE_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> node_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> getNodeList() {
      return node_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder> 
        getNodeOrBuilderList() {
      return node_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    public int getNodeCount() {
      return node_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node getNode(int index) {
      return node_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder getNodeOrBuilder(
        int index) {
      return node_.get(index);
    }

    public static final int EDGE_FIELD_NUMBER = 2;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> edge_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> getEdgeList() {
      return edge_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder> 
        getEdgeOrBuilderList() {
      return edge_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    public int getEdgeCount() {
      return edge_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge getEdge(int index) {
      return edge_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder getEdgeOrBuilder(
        int index) {
      return edge_.get(index);
    }

    public static final int ROOT_FIELD_NUMBER = 3;
    private java.util.List<java.lang.Integer> root_;
    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    public java.util.List<java.lang.Integer>
        getRootList() {
      return root_;
    }
    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    public int getRootCount() {
      return root_.size();
    }
    /**
     * <code>repeated uint32 root = 3 [packed = true];</code>
     */
    public int getRoot(int index) {
      return root_.get(index);
    }
    private int rootMemoizedSerializedSize = -1;

    private void initFields() {
      node_ = java.util.Collections.emptyList();
      edge_ = java.util.Collections.emptyList();
      root_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getNodeCount(); i++) {
        if (!getNode(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      for (int i = 0; i < getEdgeCount(); i++) {
        if (!getEdge(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < node_.size(); i++) {
        output.writeMessage(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        output.writeMessage(2, edge_.get(i));
      }
      if (getRootList().size() > 0) {
        output.writeRawVarint32(26);
        output.writeRawVarint32(rootMemoizedSerializedSize);
      }
      for (int i = 0; i < root_.size(); i++) {
        output.writeUInt32NoTag(root_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < node_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, node_.get(i));
      }
      for (int i = 0; i < edge_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, edge_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < root_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(root_.get(i));
        }
        size += dataSize;
        if (!getRootList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        rootMemoizedSerializedSize = dataSize;
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.DependencyGraph}
     *
     * <pre>
     * A dependency graph representation.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.DependencyGraph)
        edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.class, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getNodeFieldBuilder();
          getEdgeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          nodeBuilder_.clear();
        }
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          edgeBuilder_.clear();
        }
        root_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph result = new edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph(this);
        int from_bitField0_ = bitField0_;
        if (nodeBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            node_ = java.util.Collections.unmodifiableList(node_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.node_ = node_;
        } else {
          result.node_ = nodeBuilder_.build();
        }
        if (edgeBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            edge_ = java.util.Collections.unmodifiableList(edge_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.edge_ = edge_;
        } else {
          result.edge_ = edgeBuilder_.build();
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          root_ = java.util.Collections.unmodifiableList(root_);
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.root_ = root_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) return this;
        if (nodeBuilder_ == null) {
          if (!other.node_.isEmpty()) {
            if (node_.isEmpty()) {
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureNodeIsMutable();
              node_.addAll(other.node_);
            }
            onChanged();
          }
        } else {
          if (!other.node_.isEmpty()) {
            if (nodeBuilder_.isEmpty()) {
              nodeBuilder_.dispose();
              nodeBuilder_ = null;
              node_ = other.node_;
              bitField0_ = (bitField0_ & ~0x00000001);
              nodeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getNodeFieldBuilder() : null;
            } else {
              nodeBuilder_.addAllMessages(other.node_);
            }
          }
        }
        if (edgeBuilder_ == null) {
          if (!other.edge_.isEmpty()) {
            if (edge_.isEmpty()) {
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureEdgeIsMutable();
              edge_.addAll(other.edge_);
            }
            onChanged();
          }
        } else {
          if (!other.edge_.isEmpty()) {
            if (edgeBuilder_.isEmpty()) {
              edgeBuilder_.dispose();
              edgeBuilder_ = null;
              edge_ = other.edge_;
              bitField0_ = (bitField0_ & ~0x00000002);
              edgeBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getEdgeFieldBuilder() : null;
            } else {
              edgeBuilder_.addAllMessages(other.edge_);
            }
          }
        }
        if (!other.root_.isEmpty()) {
          if (root_.isEmpty()) {
            root_ = other.root_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureRootIsMutable();
            root_.addAll(other.root_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getNodeCount(); i++) {
          if (!getNode(i).isInitialized()) {
            
            return false;
          }
        }
        for (int i = 0; i < getEdgeCount(); i++) {
          if (!getEdge(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> node_ =
        java.util.Collections.emptyList();
      private void ensureNodeIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          node_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node>(node_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder> nodeBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> getNodeList() {
        if (nodeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(node_);
        } else {
          return nodeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public int getNodeCount() {
        if (nodeBuilder_ == null) {
          return node_.size();
        } else {
          return nodeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node getNode(int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);
        } else {
          return nodeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder setNode(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.set(index, value);
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder setNode(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.set(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder addNode(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder addNode(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node value) {
        if (nodeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureNodeIsMutable();
          node_.add(index, value);
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder addNode(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder addNode(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder builderForValue) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.add(index, builderForValue.build());
          onChanged();
        } else {
          nodeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder addAllNode(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node> values) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, node_);
          onChanged();
        } else {
          nodeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder clearNode() {
        if (nodeBuilder_ == null) {
          node_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          nodeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public Builder removeNode(int index) {
        if (nodeBuilder_ == null) {
          ensureNodeIsMutable();
          node_.remove(index);
          onChanged();
        } else {
          nodeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder getNodeBuilder(
          int index) {
        return getNodeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder getNodeOrBuilder(
          int index) {
        if (nodeBuilder_ == null) {
          return node_.get(index);  } else {
          return nodeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder> 
           getNodeOrBuilderList() {
        if (nodeBuilder_ != null) {
          return nodeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(node_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder addNodeBuilder() {
        return getNodeFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder addNodeBuilder(
          int index) {
        return getNodeFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Node node = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder> 
           getNodeBuilderList() {
        return getNodeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder> 
          getNodeFieldBuilder() {
        if (nodeBuilder_ == null) {
          nodeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Node.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.NodeOrBuilder>(
                  node_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          node_ = null;
        }
        return nodeBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> edge_ =
        java.util.Collections.emptyList();
      private void ensureEdgeIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          edge_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge>(edge_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder> edgeBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> getEdgeList() {
        if (edgeBuilder_ == null) {
          return java.util.Collections.unmodifiableList(edge_);
        } else {
          return edgeBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public int getEdgeCount() {
        if (edgeBuilder_ == null) {
          return edge_.size();
        } else {
          return edgeBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge getEdge(int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);
        } else {
          return edgeBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.set(index, value);
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder setEdge(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.set(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder addEdge(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge value) {
        if (edgeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureEdgeIsMutable();
          edge_.add(index, value);
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder addEdge(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder addEdge(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder builderForValue) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.add(index, builderForValue.build());
          onChanged();
        } else {
          edgeBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder addAllEdge(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge> values) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, edge_);
          onChanged();
        } else {
          edgeBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder clearEdge() {
        if (edgeBuilder_ == null) {
          edge_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          edgeBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public Builder removeEdge(int index) {
        if (edgeBuilder_ == null) {
          ensureEdgeIsMutable();
          edge_.remove(index);
          onChanged();
        } else {
          edgeBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder getEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder getEdgeOrBuilder(
          int index) {
        if (edgeBuilder_ == null) {
          return edge_.get(index);  } else {
          return edgeBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder> 
           getEdgeOrBuilderList() {
        if (edgeBuilder_ != null) {
          return edgeBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(edge_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder addEdgeBuilder() {
        return getEdgeFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder addEdgeBuilder(
          int index) {
        return getEdgeFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.DependencyGraph.Edge edge = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder> 
           getEdgeBuilderList() {
        return getEdgeFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder> 
          getEdgeFieldBuilder() {
        if (edgeBuilder_ == null) {
          edgeBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Edge.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.EdgeOrBuilder>(
                  edge_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          edge_ = null;
        }
        return edgeBuilder_;
      }

      private java.util.List<java.lang.Integer> root_ = java.util.Collections.emptyList();
      private void ensureRootIsMutable() {
        if (!((bitField0_ & 0x00000004) == 0x00000004)) {
          root_ = new java.util.ArrayList<java.lang.Integer>(root_);
          bitField0_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public java.util.List<java.lang.Integer>
          getRootList() {
        return java.util.Collections.unmodifiableList(root_);
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public int getRootCount() {
        return root_.size();
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public int getRoot(int index) {
        return root_.get(index);
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public Builder setRoot(
          int index, int value) {
        ensureRootIsMutable();
        root_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public Builder addRoot(int value) {
        ensureRootIsMutable();
        root_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public Builder addAllRoot(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRootIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, root_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 root = 3 [packed = true];</code>
       */
      public Builder clearRoot() {
        root_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.DependencyGraph)
    }

    static {
      defaultInstance = new DependencyGraph(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.DependencyGraph)
  }

  public interface CorefChainOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.CorefChain)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required int32 chainID = 1;</code>
     */
    boolean hasChainID();
    /**
     * <code>required int32 chainID = 1;</code>
     */
    int getChainID();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> 
        getMentionList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention getMention(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    int getMentionCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder> 
        getMentionOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder getMentionOrBuilder(
        int index);

    /**
     * <code>required uint32 representative = 3;</code>
     */
    boolean hasRepresentative();
    /**
     * <code>required uint32 representative = 3;</code>
     */
    int getRepresentative();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.CorefChain}
   *
   * <pre>
   * A coreference chain.
   * These fields are not *really* optional. CoreNLP will crash without them.
   * </pre>
   */
  public static final class CorefChain extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.CorefChain)
      CorefChainOrBuilder {
    // Use CorefChain.newBuilder() to construct.
    private CorefChain(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private CorefChain(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final CorefChain defaultInstance;
    public static CorefChain getDefaultInstance() {
      return defaultInstance;
    }

    public CorefChain getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private CorefChain(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              chainID_ = input.readInt32();
              break;
            }
            case 18: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mention_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention>();
                mutable_bitField0_ |= 0x00000002;
              }
              mention_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.PARSER, extensionRegistry));
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              representative_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mention_ = java.util.Collections.unmodifiableList(mention_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.class, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder.class);
    }

    public static com.google.protobuf.Parser<CorefChain> PARSER =
        new com.google.protobuf.AbstractParser<CorefChain>() {
      public CorefChain parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new CorefChain(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<CorefChain> getParserForType() {
      return PARSER;
    }

    public interface CorefMentionOrBuilder extends
        // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.CorefChain.CorefMention)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      boolean hasMentionID();
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      int getMentionID();

      /**
       * <code>optional string mentionType = 2;</code>
       */
      boolean hasMentionType();
      /**
       * <code>optional string mentionType = 2;</code>
       */
      java.lang.String getMentionType();
      /**
       * <code>optional string mentionType = 2;</code>
       */
      com.google.protobuf.ByteString
          getMentionTypeBytes();

      /**
       * <code>optional string number = 3;</code>
       */
      boolean hasNumber();
      /**
       * <code>optional string number = 3;</code>
       */
      java.lang.String getNumber();
      /**
       * <code>optional string number = 3;</code>
       */
      com.google.protobuf.ByteString
          getNumberBytes();

      /**
       * <code>optional string gender = 4;</code>
       */
      boolean hasGender();
      /**
       * <code>optional string gender = 4;</code>
       */
      java.lang.String getGender();
      /**
       * <code>optional string gender = 4;</code>
       */
      com.google.protobuf.ByteString
          getGenderBytes();

      /**
       * <code>optional string animacy = 5;</code>
       */
      boolean hasAnimacy();
      /**
       * <code>optional string animacy = 5;</code>
       */
      java.lang.String getAnimacy();
      /**
       * <code>optional string animacy = 5;</code>
       */
      com.google.protobuf.ByteString
          getAnimacyBytes();

      /**
       * <code>optional uint32 beginIndex = 6;</code>
       */
      boolean hasBeginIndex();
      /**
       * <code>optional uint32 beginIndex = 6;</code>
       */
      int getBeginIndex();

      /**
       * <code>optional uint32 endIndex = 7;</code>
       */
      boolean hasEndIndex();
      /**
       * <code>optional uint32 endIndex = 7;</code>
       */
      int getEndIndex();

      /**
       * <code>optional uint32 headIndex = 9;</code>
       */
      boolean hasHeadIndex();
      /**
       * <code>optional uint32 headIndex = 9;</code>
       */
      int getHeadIndex();

      /**
       * <code>optional uint32 sentenceIndex = 10;</code>
       */
      boolean hasSentenceIndex();
      /**
       * <code>optional uint32 sentenceIndex = 10;</code>
       */
      int getSentenceIndex();

      /**
       * <code>optional uint32 position = 11;</code>
       *
       * <pre>
       * the second element of position
       * </pre>
       */
      boolean hasPosition();
      /**
       * <code>optional uint32 position = 11;</code>
       *
       * <pre>
       * the second element of position
       * </pre>
       */
      int getPosition();
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.CorefChain.CorefMention}
     */
    public static final class CorefMention extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.CorefChain.CorefMention)
        CorefMentionOrBuilder {
      // Use CorefMention.newBuilder() to construct.
      private CorefMention(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private CorefMention(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final CorefMention defaultInstance;
      public static CorefMention getDefaultInstance() {
        return defaultInstance;
      }

      public CorefMention getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private CorefMention(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                mentionID_ = input.readInt32();
                break;
              }
              case 18: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000002;
                mentionType_ = bs;
                break;
              }
              case 26: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000004;
                number_ = bs;
                break;
              }
              case 34: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000008;
                gender_ = bs;
                break;
              }
              case 42: {
                com.google.protobuf.ByteString bs = input.readBytes();
                bitField0_ |= 0x00000010;
                animacy_ = bs;
                break;
              }
              case 48: {
                bitField0_ |= 0x00000020;
                beginIndex_ = input.readUInt32();
                break;
              }
              case 56: {
                bitField0_ |= 0x00000040;
                endIndex_ = input.readUInt32();
                break;
              }
              case 72: {
                bitField0_ |= 0x00000080;
                headIndex_ = input.readUInt32();
                break;
              }
              case 80: {
                bitField0_ |= 0x00000100;
                sentenceIndex_ = input.readUInt32();
                break;
              }
              case 88: {
                bitField0_ |= 0x00000200;
                position_ = input.readUInt32();
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder.class);
      }

      public static com.google.protobuf.Parser<CorefMention> PARSER =
          new com.google.protobuf.AbstractParser<CorefMention>() {
        public CorefMention parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new CorefMention(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<CorefMention> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int MENTIONID_FIELD_NUMBER = 1;
      private int mentionID_;
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public boolean hasMentionID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public int getMentionID() {
        return mentionID_;
      }

      public static final int MENTIONTYPE_FIELD_NUMBER = 2;
      private java.lang.Object mentionType_;
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public boolean hasMentionType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public java.lang.String getMentionType() {
        java.lang.Object ref = mentionType_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mentionType_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMentionTypeBytes() {
        java.lang.Object ref = mentionType_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mentionType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int NUMBER_FIELD_NUMBER = 3;
      private java.lang.Object number_;
      /**
       * <code>optional string number = 3;</code>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int GENDER_FIELD_NUMBER = 4;
      private java.lang.Object gender_;
      /**
       * <code>optional string gender = 4;</code>
       */
      public boolean hasGender() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public java.lang.String getGender() {
        java.lang.Object ref = gender_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gender_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGenderBytes() {
        java.lang.Object ref = gender_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gender_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int ANIMACY_FIELD_NUMBER = 5;
      private java.lang.Object animacy_;
      /**
       * <code>optional string animacy = 5;</code>
       */
      public boolean hasAnimacy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public java.lang.String getAnimacy() {
        java.lang.Object ref = animacy_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            animacy_ = s;
          }
          return s;
        }
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public com.google.protobuf.ByteString
          getAnimacyBytes() {
        java.lang.Object ref = animacy_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          animacy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      public static final int BEGININDEX_FIELD_NUMBER = 6;
      private int beginIndex_;
      /**
       * <code>optional uint32 beginIndex = 6;</code>
       */
      public boolean hasBeginIndex() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 beginIndex = 6;</code>
       */
      public int getBeginIndex() {
        return beginIndex_;
      }

      public static final int ENDINDEX_FIELD_NUMBER = 7;
      private int endIndex_;
      /**
       * <code>optional uint32 endIndex = 7;</code>
       */
      public boolean hasEndIndex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 endIndex = 7;</code>
       */
      public int getEndIndex() {
        return endIndex_;
      }

      public static final int HEADINDEX_FIELD_NUMBER = 9;
      private int headIndex_;
      /**
       * <code>optional uint32 headIndex = 9;</code>
       */
      public boolean hasHeadIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 headIndex = 9;</code>
       */
      public int getHeadIndex() {
        return headIndex_;
      }

      public static final int SENTENCEINDEX_FIELD_NUMBER = 10;
      private int sentenceIndex_;
      /**
       * <code>optional uint32 sentenceIndex = 10;</code>
       */
      public boolean hasSentenceIndex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 sentenceIndex = 10;</code>
       */
      public int getSentenceIndex() {
        return sentenceIndex_;
      }

      public static final int POSITION_FIELD_NUMBER = 11;
      private int position_;
      /**
       * <code>optional uint32 position = 11;</code>
       *
       * <pre>
       * the second element of position
       * </pre>
       */
      public boolean hasPosition() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional uint32 position = 11;</code>
       *
       * <pre>
       * the second element of position
       * </pre>
       */
      public int getPosition() {
        return position_;
      }

      private void initFields() {
        mentionID_ = 0;
        mentionType_ = "";
        number_ = "";
        gender_ = "";
        animacy_ = "";
        beginIndex_ = 0;
        endIndex_ = 0;
        headIndex_ = 0;
        sentenceIndex_ = 0;
        position_ = 0;
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeInt32(1, mentionID_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          output.writeBytes(2, getMentionTypeBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          output.writeBytes(3, getNumberBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          output.writeBytes(4, getGenderBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          output.writeBytes(5, getAnimacyBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          output.writeUInt32(6, beginIndex_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          output.writeUInt32(7, endIndex_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          output.writeUInt32(9, headIndex_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          output.writeUInt32(10, sentenceIndex_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          output.writeUInt32(11, position_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeInt32Size(1, mentionID_);
        }
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(2, getMentionTypeBytes());
        }
        if (((bitField0_ & 0x00000004) == 0x00000004)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(3, getNumberBytes());
        }
        if (((bitField0_ & 0x00000008) == 0x00000008)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(4, getGenderBytes());
        }
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBytesSize(5, getAnimacyBytes());
        }
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(6, beginIndex_);
        }
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(7, endIndex_);
        }
        if (((bitField0_ & 0x00000080) == 0x00000080)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(9, headIndex_);
        }
        if (((bitField0_ & 0x00000100) == 0x00000100)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(10, sentenceIndex_);
        }
        if (((bitField0_ & 0x00000200) == 0x00000200)) {
          size += com.google.protobuf.CodedOutputStream
            .computeUInt32Size(11, position_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code edu.stanford.nlp.pipeline.CorefChain.CorefMention}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.CorefChain.CorefMention)
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder.class);
        }

        // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          mentionID_ = 0;
          bitField0_ = (bitField0_ & ~0x00000001);
          mentionType_ = "";
          bitField0_ = (bitField0_ & ~0x00000002);
          number_ = "";
          bitField0_ = (bitField0_ & ~0x00000004);
          gender_ = "";
          bitField0_ = (bitField0_ & ~0x00000008);
          animacy_ = "";
          bitField0_ = (bitField0_ & ~0x00000010);
          beginIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000020);
          endIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000040);
          headIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000080);
          sentenceIndex_ = 0;
          bitField0_ = (bitField0_ & ~0x00000100);
          position_ = 0;
          bitField0_ = (bitField0_ & ~0x00000200);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention getDefaultInstanceForType() {
          return edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.getDefaultInstance();
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention build() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention buildPartial() {
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention result = new edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.mentionID_ = mentionID_;
          if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
            to_bitField0_ |= 0x00000002;
          }
          result.mentionType_ = mentionType_;
          if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
            to_bitField0_ |= 0x00000004;
          }
          result.number_ = number_;
          if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
            to_bitField0_ |= 0x00000008;
          }
          result.gender_ = gender_;
          if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
            to_bitField0_ |= 0x00000010;
          }
          result.animacy_ = animacy_;
          if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
            to_bitField0_ |= 0x00000020;
          }
          result.beginIndex_ = beginIndex_;
          if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
            to_bitField0_ |= 0x00000040;
          }
          result.endIndex_ = endIndex_;
          if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
            to_bitField0_ |= 0x00000080;
          }
          result.headIndex_ = headIndex_;
          if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
            to_bitField0_ |= 0x00000100;
          }
          result.sentenceIndex_ = sentenceIndex_;
          if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
            to_bitField0_ |= 0x00000200;
          }
          result.position_ = position_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention) {
            return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention other) {
          if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.getDefaultInstance()) return this;
          if (other.hasMentionID()) {
            setMentionID(other.getMentionID());
          }
          if (other.hasMentionType()) {
            bitField0_ |= 0x00000002;
            mentionType_ = other.mentionType_;
            onChanged();
          }
          if (other.hasNumber()) {
            bitField0_ |= 0x00000004;
            number_ = other.number_;
            onChanged();
          }
          if (other.hasGender()) {
            bitField0_ |= 0x00000008;
            gender_ = other.gender_;
            onChanged();
          }
          if (other.hasAnimacy()) {
            bitField0_ |= 0x00000010;
            animacy_ = other.animacy_;
            onChanged();
          }
          if (other.hasBeginIndex()) {
            setBeginIndex(other.getBeginIndex());
          }
          if (other.hasEndIndex()) {
            setEndIndex(other.getEndIndex());
          }
          if (other.hasHeadIndex()) {
            setHeadIndex(other.getHeadIndex());
          }
          if (other.hasSentenceIndex()) {
            setSentenceIndex(other.getSentenceIndex());
          }
          if (other.hasPosition()) {
            setPosition(other.getPosition());
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private int mentionID_ ;
        /**
         * <code>optional int32 mentionID = 1;</code>
         */
        public boolean hasMentionID() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>optional int32 mentionID = 1;</code>
         */
        public int getMentionID() {
          return mentionID_;
        }
        /**
         * <code>optional int32 mentionID = 1;</code>
         */
        public Builder setMentionID(int value) {
          bitField0_ |= 0x00000001;
          mentionID_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional int32 mentionID = 1;</code>
         */
        public Builder clearMentionID() {
          bitField0_ = (bitField0_ & ~0x00000001);
          mentionID_ = 0;
          onChanged();
          return this;
        }

        private java.lang.Object mentionType_ = "";
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public boolean hasMentionType() {
          return ((bitField0_ & 0x00000002) == 0x00000002);
        }
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public java.lang.String getMentionType() {
          java.lang.Object ref = mentionType_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              mentionType_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public com.google.protobuf.ByteString
            getMentionTypeBytes() {
          java.lang.Object ref = mentionType_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            mentionType_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public Builder setMentionType(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mentionType_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public Builder clearMentionType() {
          bitField0_ = (bitField0_ & ~0x00000002);
          mentionType_ = getDefaultInstance().getMentionType();
          onChanged();
          return this;
        }
        /**
         * <code>optional string mentionType = 2;</code>
         */
        public Builder setMentionTypeBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
          mentionType_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object number_ = "";
        /**
         * <code>optional string number = 3;</code>
         */
        public boolean hasNumber() {
          return ((bitField0_ & 0x00000004) == 0x00000004);
        }
        /**
         * <code>optional string number = 3;</code>
         */
        public java.lang.String getNumber() {
          java.lang.Object ref = number_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              number_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string number = 3;</code>
         */
        public com.google.protobuf.ByteString
            getNumberBytes() {
          java.lang.Object ref = number_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            number_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string number = 3;</code>
         */
        public Builder setNumber(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          number_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string number = 3;</code>
         */
        public Builder clearNumber() {
          bitField0_ = (bitField0_ & ~0x00000004);
          number_ = getDefaultInstance().getNumber();
          onChanged();
          return this;
        }
        /**
         * <code>optional string number = 3;</code>
         */
        public Builder setNumberBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
          number_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object gender_ = "";
        /**
         * <code>optional string gender = 4;</code>
         */
        public boolean hasGender() {
          return ((bitField0_ & 0x00000008) == 0x00000008);
        }
        /**
         * <code>optional string gender = 4;</code>
         */
        public java.lang.String getGender() {
          java.lang.Object ref = gender_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              gender_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string gender = 4;</code>
         */
        public com.google.protobuf.ByteString
            getGenderBytes() {
          java.lang.Object ref = gender_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            gender_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string gender = 4;</code>
         */
        public Builder setGender(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          gender_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string gender = 4;</code>
         */
        public Builder clearGender() {
          bitField0_ = (bitField0_ & ~0x00000008);
          gender_ = getDefaultInstance().getGender();
          onChanged();
          return this;
        }
        /**
         * <code>optional string gender = 4;</code>
         */
        public Builder setGenderBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
          gender_ = value;
          onChanged();
          return this;
        }

        private java.lang.Object animacy_ = "";
        /**
         * <code>optional string animacy = 5;</code>
         */
        public boolean hasAnimacy() {
          return ((bitField0_ & 0x00000010) == 0x00000010);
        }
        /**
         * <code>optional string animacy = 5;</code>
         */
        public java.lang.String getAnimacy() {
          java.lang.Object ref = animacy_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            if (bs.isValidUtf8()) {
              animacy_ = s;
            }
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string animacy = 5;</code>
         */
        public com.google.protobuf.ByteString
            getAnimacyBytes() {
          java.lang.Object ref = animacy_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            animacy_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string animacy = 5;</code>
         */
        public Builder setAnimacy(
            java.lang.String value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          animacy_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional string animacy = 5;</code>
         */
        public Builder clearAnimacy() {
          bitField0_ = (bitField0_ & ~0x00000010);
          animacy_ = getDefaultInstance().getAnimacy();
          onChanged();
          return this;
        }
        /**
         * <code>optional string animacy = 5;</code>
         */
        public Builder setAnimacyBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
          animacy_ = value;
          onChanged();
          return this;
        }

        private int beginIndex_ ;
        /**
         * <code>optional uint32 beginIndex = 6;</code>
         */
        public boolean hasBeginIndex() {
          return ((bitField0_ & 0x00000020) == 0x00000020);
        }
        /**
         * <code>optional uint32 beginIndex = 6;</code>
         */
        public int getBeginIndex() {
          return beginIndex_;
        }
        /**
         * <code>optional uint32 beginIndex = 6;</code>
         */
        public Builder setBeginIndex(int value) {
          bitField0_ |= 0x00000020;
          beginIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 beginIndex = 6;</code>
         */
        public Builder clearBeginIndex() {
          bitField0_ = (bitField0_ & ~0x00000020);
          beginIndex_ = 0;
          onChanged();
          return this;
        }

        private int endIndex_ ;
        /**
         * <code>optional uint32 endIndex = 7;</code>
         */
        public boolean hasEndIndex() {
          return ((bitField0_ & 0x00000040) == 0x00000040);
        }
        /**
         * <code>optional uint32 endIndex = 7;</code>
         */
        public int getEndIndex() {
          return endIndex_;
        }
        /**
         * <code>optional uint32 endIndex = 7;</code>
         */
        public Builder setEndIndex(int value) {
          bitField0_ |= 0x00000040;
          endIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 endIndex = 7;</code>
         */
        public Builder clearEndIndex() {
          bitField0_ = (bitField0_ & ~0x00000040);
          endIndex_ = 0;
          onChanged();
          return this;
        }

        private int headIndex_ ;
        /**
         * <code>optional uint32 headIndex = 9;</code>
         */
        public boolean hasHeadIndex() {
          return ((bitField0_ & 0x00000080) == 0x00000080);
        }
        /**
         * <code>optional uint32 headIndex = 9;</code>
         */
        public int getHeadIndex() {
          return headIndex_;
        }
        /**
         * <code>optional uint32 headIndex = 9;</code>
         */
        public Builder setHeadIndex(int value) {
          bitField0_ |= 0x00000080;
          headIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 headIndex = 9;</code>
         */
        public Builder clearHeadIndex() {
          bitField0_ = (bitField0_ & ~0x00000080);
          headIndex_ = 0;
          onChanged();
          return this;
        }

        private int sentenceIndex_ ;
        /**
         * <code>optional uint32 sentenceIndex = 10;</code>
         */
        public boolean hasSentenceIndex() {
          return ((bitField0_ & 0x00000100) == 0x00000100);
        }
        /**
         * <code>optional uint32 sentenceIndex = 10;</code>
         */
        public int getSentenceIndex() {
          return sentenceIndex_;
        }
        /**
         * <code>optional uint32 sentenceIndex = 10;</code>
         */
        public Builder setSentenceIndex(int value) {
          bitField0_ |= 0x00000100;
          sentenceIndex_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 sentenceIndex = 10;</code>
         */
        public Builder clearSentenceIndex() {
          bitField0_ = (bitField0_ & ~0x00000100);
          sentenceIndex_ = 0;
          onChanged();
          return this;
        }

        private int position_ ;
        /**
         * <code>optional uint32 position = 11;</code>
         *
         * <pre>
         * the second element of position
         * </pre>
         */
        public boolean hasPosition() {
          return ((bitField0_ & 0x00000200) == 0x00000200);
        }
        /**
         * <code>optional uint32 position = 11;</code>
         *
         * <pre>
         * the second element of position
         * </pre>
         */
        public int getPosition() {
          return position_;
        }
        /**
         * <code>optional uint32 position = 11;</code>
         *
         * <pre>
         * the second element of position
         * </pre>
         */
        public Builder setPosition(int value) {
          bitField0_ |= 0x00000200;
          position_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>optional uint32 position = 11;</code>
         *
         * <pre>
         * the second element of position
         * </pre>
         */
        public Builder clearPosition() {
          bitField0_ = (bitField0_ & ~0x00000200);
          position_ = 0;
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.CorefChain.CorefMention)
      }

      static {
        defaultInstance = new CorefMention(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.CorefChain.CorefMention)
    }

    private int bitField0_;
    public static final int CHAINID_FIELD_NUMBER = 1;
    private int chainID_;
    /**
     * <code>required int32 chainID = 1;</code>
     */
    public boolean hasChainID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required int32 chainID = 1;</code>
     */
    public int getChainID() {
      return chainID_;
    }

    public static final int MENTION_FIELD_NUMBER = 2;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> mention_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> getMentionList() {
      return mention_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder> 
        getMentionOrBuilderList() {
      return mention_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    public int getMentionCount() {
      return mention_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention getMention(int index) {
      return mention_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder getMentionOrBuilder(
        int index) {
      return mention_.get(index);
    }

    public static final int REPRESENTATIVE_FIELD_NUMBER = 3;
    private int representative_;
    /**
     * <code>required uint32 representative = 3;</code>
     */
    public boolean hasRepresentative() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 representative = 3;</code>
     */
    public int getRepresentative() {
      return representative_;
    }

    private void initFields() {
      chainID_ = 0;
      mention_ = java.util.Collections.emptyList();
      representative_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasChainID()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasRepresentative()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, chainID_);
      }
      for (int i = 0; i < mention_.size(); i++) {
        output.writeMessage(2, mention_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(3, representative_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, chainID_);
      }
      for (int i = 0; i < mention_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, mention_.get(i));
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, representative_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.CorefChain}
     *
     * <pre>
     * A coreference chain.
     * These fields are not *really* optional. CoreNLP will crash without them.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.CorefChain)
        edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChainOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.class, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getMentionFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        chainID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (mentionBuilder_ == null) {
          mention_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          mentionBuilder_.clear();
        }
        representative_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain result = new edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.chainID_ = chainID_;
        if (mentionBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            mention_ = java.util.Collections.unmodifiableList(mention_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.mention_ = mention_;
        } else {
          result.mention_ = mentionBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.representative_ = representative_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.getDefaultInstance()) return this;
        if (other.hasChainID()) {
          setChainID(other.getChainID());
        }
        if (mentionBuilder_ == null) {
          if (!other.mention_.isEmpty()) {
            if (mention_.isEmpty()) {
              mention_ = other.mention_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureMentionIsMutable();
              mention_.addAll(other.mention_);
            }
            onChanged();
          }
        } else {
          if (!other.mention_.isEmpty()) {
            if (mentionBuilder_.isEmpty()) {
              mentionBuilder_.dispose();
              mentionBuilder_ = null;
              mention_ = other.mention_;
              bitField0_ = (bitField0_ & ~0x00000002);
              mentionBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getMentionFieldBuilder() : null;
            } else {
              mentionBuilder_.addAllMessages(other.mention_);
            }
          }
        }
        if (other.hasRepresentative()) {
          setRepresentative(other.getRepresentative());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasChainID()) {
          
          return false;
        }
        if (!hasRepresentative()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int chainID_ ;
      /**
       * <code>required int32 chainID = 1;</code>
       */
      public boolean hasChainID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required int32 chainID = 1;</code>
       */
      public int getChainID() {
        return chainID_;
      }
      /**
       * <code>required int32 chainID = 1;</code>
       */
      public Builder setChainID(int value) {
        bitField0_ |= 0x00000001;
        chainID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 chainID = 1;</code>
       */
      public Builder clearChainID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        chainID_ = 0;
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> mention_ =
        java.util.Collections.emptyList();
      private void ensureMentionIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mention_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention>(mention_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder> mentionBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> getMentionList() {
        if (mentionBuilder_ == null) {
          return java.util.Collections.unmodifiableList(mention_);
        } else {
          return mentionBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public int getMentionCount() {
        if (mentionBuilder_ == null) {
          return mention_.size();
        } else {
          return mentionBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention getMention(int index) {
        if (mentionBuilder_ == null) {
          return mention_.get(index);
        } else {
          return mentionBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder setMention(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention value) {
        if (mentionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionIsMutable();
          mention_.set(index, value);
          onChanged();
        } else {
          mentionBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder setMention(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder builderForValue) {
        if (mentionBuilder_ == null) {
          ensureMentionIsMutable();
          mention_.set(index, builderForValue.build());
          onChanged();
        } else {
          mentionBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder addMention(edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention value) {
        if (mentionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionIsMutable();
          mention_.add(value);
          onChanged();
        } else {
          mentionBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder addMention(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention value) {
        if (mentionBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureMentionIsMutable();
          mention_.add(index, value);
          onChanged();
        } else {
          mentionBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder addMention(
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder builderForValue) {
        if (mentionBuilder_ == null) {
          ensureMentionIsMutable();
          mention_.add(builderForValue.build());
          onChanged();
        } else {
          mentionBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder addMention(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder builderForValue) {
        if (mentionBuilder_ == null) {
          ensureMentionIsMutable();
          mention_.add(index, builderForValue.build());
          onChanged();
        } else {
          mentionBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder addAllMention(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention> values) {
        if (mentionBuilder_ == null) {
          ensureMentionIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, mention_);
          onChanged();
        } else {
          mentionBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder clearMention() {
        if (mentionBuilder_ == null) {
          mention_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          mentionBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public Builder removeMention(int index) {
        if (mentionBuilder_ == null) {
          ensureMentionIsMutable();
          mention_.remove(index);
          onChanged();
        } else {
          mentionBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder getMentionBuilder(
          int index) {
        return getMentionFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder getMentionOrBuilder(
          int index) {
        if (mentionBuilder_ == null) {
          return mention_.get(index);  } else {
          return mentionBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder> 
           getMentionOrBuilderList() {
        if (mentionBuilder_ != null) {
          return mentionBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(mention_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder addMentionBuilder() {
        return getMentionFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder addMentionBuilder(
          int index) {
        return getMentionFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.CorefChain.CorefMention mention = 2;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder> 
           getMentionBuilderList() {
        return getMentionFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder> 
          getMentionFieldBuilder() {
        if (mentionBuilder_ == null) {
          mentionBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMention.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.CorefChain.CorefMentionOrBuilder>(
                  mention_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          mention_ = null;
        }
        return mentionBuilder_;
      }

      private int representative_ ;
      /**
       * <code>required uint32 representative = 3;</code>
       */
      public boolean hasRepresentative() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 representative = 3;</code>
       */
      public int getRepresentative() {
        return representative_;
      }
      /**
       * <code>required uint32 representative = 3;</code>
       */
      public Builder setRepresentative(int value) {
        bitField0_ |= 0x00000004;
        representative_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 representative = 3;</code>
       */
      public Builder clearRepresentative() {
        bitField0_ = (bitField0_ & ~0x00000004);
        representative_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.CorefChain)
    }

    static {
      defaultInstance = new CorefChain(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.CorefChain)
  }

  public interface MentionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Mention)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int32 mentionID = 1;</code>
     */
    boolean hasMentionID();
    /**
     * <code>optional int32 mentionID = 1;</code>
     */
    int getMentionID();

    /**
     * <code>optional string mentionType = 2;</code>
     */
    boolean hasMentionType();
    /**
     * <code>optional string mentionType = 2;</code>
     */
    java.lang.String getMentionType();
    /**
     * <code>optional string mentionType = 2;</code>
     */
    com.google.protobuf.ByteString
        getMentionTypeBytes();

    /**
     * <code>optional string number = 3;</code>
     */
    boolean hasNumber();
    /**
     * <code>optional string number = 3;</code>
     */
    java.lang.String getNumber();
    /**
     * <code>optional string number = 3;</code>
     */
    com.google.protobuf.ByteString
        getNumberBytes();

    /**
     * <code>optional string gender = 4;</code>
     */
    boolean hasGender();
    /**
     * <code>optional string gender = 4;</code>
     */
    java.lang.String getGender();
    /**
     * <code>optional string gender = 4;</code>
     */
    com.google.protobuf.ByteString
        getGenderBytes();

    /**
     * <code>optional string animacy = 5;</code>
     */
    boolean hasAnimacy();
    /**
     * <code>optional string animacy = 5;</code>
     */
    java.lang.String getAnimacy();
    /**
     * <code>optional string animacy = 5;</code>
     */
    com.google.protobuf.ByteString
        getAnimacyBytes();

    /**
     * <code>optional string person = 6;</code>
     */
    boolean hasPerson();
    /**
     * <code>optional string person = 6;</code>
     */
    java.lang.String getPerson();
    /**
     * <code>optional string person = 6;</code>
     */
    com.google.protobuf.ByteString
        getPersonBytes();

    /**
     * <code>optional uint32 startIndex = 7;</code>
     */
    boolean hasStartIndex();
    /**
     * <code>optional uint32 startIndex = 7;</code>
     */
    int getStartIndex();

    /**
     * <code>optional uint32 endIndex = 9;</code>
     */
    boolean hasEndIndex();
    /**
     * <code>optional uint32 endIndex = 9;</code>
     */
    int getEndIndex();

    /**
     * <code>optional uint32 headIndex = 10;</code>
     */
    boolean hasHeadIndex();
    /**
     * <code>optional uint32 headIndex = 10;</code>
     */
    int getHeadIndex();

    /**
     * <code>optional string headString = 11;</code>
     */
    boolean hasHeadString();
    /**
     * <code>optional string headString = 11;</code>
     */
    java.lang.String getHeadString();
    /**
     * <code>optional string headString = 11;</code>
     */
    com.google.protobuf.ByteString
        getHeadStringBytes();

    /**
     * <code>optional string nerString = 12;</code>
     */
    boolean hasNerString();
    /**
     * <code>optional string nerString = 12;</code>
     */
    java.lang.String getNerString();
    /**
     * <code>optional string nerString = 12;</code>
     */
    com.google.protobuf.ByteString
        getNerStringBytes();

    /**
     * <code>optional uint32 originalRef = 13;</code>
     */
    boolean hasOriginalRef();
    /**
     * <code>optional uint32 originalRef = 13;</code>
     */
    int getOriginalRef();

    /**
     * <code>optional int32 goldCorefClusterID = 14;</code>
     */
    boolean hasGoldCorefClusterID();
    /**
     * <code>optional int32 goldCorefClusterID = 14;</code>
     */
    int getGoldCorefClusterID();

    /**
     * <code>optional int32 corefClusterID = 15;</code>
     */
    boolean hasCorefClusterID();
    /**
     * <code>optional int32 corefClusterID = 15;</code>
     */
    int getCorefClusterID();

    /**
     * <code>optional uint32 mentionNum = 16;</code>
     */
    boolean hasMentionNum();
    /**
     * <code>optional uint32 mentionNum = 16;</code>
     */
    int getMentionNum();

    /**
     * <code>optional uint32 sentNum = 17;</code>
     */
    boolean hasSentNum();
    /**
     * <code>optional uint32 sentNum = 17;</code>
     */
    int getSentNum();

    /**
     * <code>optional uint32 utter = 18;</code>
     */
    boolean hasUtter();
    /**
     * <code>optional uint32 utter = 18;</code>
     */
    int getUtter();

    /**
     * <code>optional uint32 paragraph = 19;</code>
     */
    boolean hasParagraph();
    /**
     * <code>optional uint32 paragraph = 19;</code>
     */
    int getParagraph();

    /**
     * <code>optional bool isSubject = 20;</code>
     */
    boolean hasIsSubject();
    /**
     * <code>optional bool isSubject = 20;</code>
     */
    boolean getIsSubject();

    /**
     * <code>optional bool isDirectObject = 21;</code>
     */
    boolean hasIsDirectObject();
    /**
     * <code>optional bool isDirectObject = 21;</code>
     */
    boolean getIsDirectObject();

    /**
     * <code>optional bool isIndirectObject = 22;</code>
     */
    boolean hasIsIndirectObject();
    /**
     * <code>optional bool isIndirectObject = 22;</code>
     */
    boolean getIsIndirectObject();

    /**
     * <code>optional bool isPrepositionObject = 23;</code>
     */
    boolean hasIsPrepositionObject();
    /**
     * <code>optional bool isPrepositionObject = 23;</code>
     */
    boolean getIsPrepositionObject();

    /**
     * <code>optional bool hasTwin = 24;</code>
     */
    boolean hasHasTwin();
    /**
     * <code>optional bool hasTwin = 24;</code>
     */
    boolean getHasTwin();

    /**
     * <code>optional bool generic = 25;</code>
     */
    boolean hasGeneric();
    /**
     * <code>optional bool generic = 25;</code>
     */
    boolean getGeneric();

    /**
     * <code>optional bool isSingleton = 26;</code>
     */
    boolean hasIsSingleton();
    /**
     * <code>optional bool isSingleton = 26;</code>
     */
    boolean getIsSingleton();

    /**
     * <code>optional bool hasBasicDependency = 27;</code>
     */
    boolean hasHasBasicDependency();
    /**
     * <code>optional bool hasBasicDependency = 27;</code>
     */
    boolean getHasBasicDependency();

    /**
     * <code>optional bool hasCollapsedDependency = 28;</code>
     */
    boolean hasHasCollapsedDependency();
    /**
     * <code>optional bool hasCollapsedDependency = 28;</code>
     */
    boolean getHasCollapsedDependency();

    /**
     * <code>optional bool hasContextParseTree = 29;</code>
     */
    boolean hasHasContextParseTree();
    /**
     * <code>optional bool hasContextParseTree = 29;</code>
     */
    boolean getHasContextParseTree();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    boolean hasHeadIndexedWord();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadIndexedWord();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadIndexedWordOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    boolean hasDependingVerb();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getDependingVerb();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getDependingVerbOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    boolean hasHeadWord();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadWord();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadWordOrBuilder();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    boolean hasSpeakerInfo();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo getSpeakerInfo();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder getSpeakerInfoOrBuilder();

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> 
        getSentenceWordsList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getSentenceWords(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    int getSentenceWordsCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
        getSentenceWordsOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getSentenceWordsOrBuilder(
        int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> 
        getOriginalSpanList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getOriginalSpan(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    int getOriginalSpanCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
        getOriginalSpanOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getOriginalSpanOrBuilder(
        int index);

    /**
     * <code>repeated string dependents = 52;</code>
     */
    com.google.protobuf.ProtocolStringList
        getDependentsList();
    /**
     * <code>repeated string dependents = 52;</code>
     */
    int getDependentsCount();
    /**
     * <code>repeated string dependents = 52;</code>
     */
    java.lang.String getDependents(int index);
    /**
     * <code>repeated string dependents = 52;</code>
     */
    com.google.protobuf.ByteString
        getDependentsBytes(int index);

    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    com.google.protobuf.ProtocolStringList
        getPreprocessedTermsList();
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    int getPreprocessedTermsCount();
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    java.lang.String getPreprocessedTerms(int index);
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    com.google.protobuf.ByteString
        getPreprocessedTermsBytes(int index);

    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    java.util.List<java.lang.Integer> getAppositionsList();
    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    int getAppositionsCount();
    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    int getAppositions(int index);

    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    java.util.List<java.lang.Integer> getPredicateNominativesList();
    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    int getPredicateNominativesCount();
    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    int getPredicateNominatives(int index);

    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    java.util.List<java.lang.Integer> getRelativePronounsList();
    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    int getRelativePronounsCount();
    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    int getRelativePronouns(int index);

    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    java.util.List<java.lang.Integer> getListMembersList();
    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    int getListMembersCount();
    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    int getListMembers(int index);

    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    java.util.List<java.lang.Integer> getBelongToListsList();
    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    int getBelongToListsCount();
    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    int getBelongToLists(int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Mention}
   */
  public static final class Mention extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Mention)
      MentionOrBuilder {
    // Use Mention.newBuilder() to construct.
    private Mention(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Mention(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Mention defaultInstance;
    public static Mention getDefaultInstance() {
      return defaultInstance;
    }

    public Mention getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Mention(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      int mutable_bitField1_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              mentionID_ = input.readInt32();
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              mentionType_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              number_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              gender_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              animacy_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              person_ = bs;
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              startIndex_ = input.readUInt32();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000080;
              endIndex_ = input.readUInt32();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000100;
              headIndex_ = input.readUInt32();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              headString_ = bs;
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              nerString_ = bs;
              break;
            }
            case 104: {
              bitField0_ |= 0x00000800;
              originalRef_ = input.readUInt32();
              break;
            }
            case 112: {
              bitField0_ |= 0x00001000;
              goldCorefClusterID_ = input.readInt32();
              break;
            }
            case 120: {
              bitField0_ |= 0x00002000;
              corefClusterID_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00004000;
              mentionNum_ = input.readUInt32();
              break;
            }
            case 136: {
              bitField0_ |= 0x00008000;
              sentNum_ = input.readUInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00010000;
              utter_ = input.readUInt32();
              break;
            }
            case 152: {
              bitField0_ |= 0x00020000;
              paragraph_ = input.readUInt32();
              break;
            }
            case 160: {
              bitField0_ |= 0x00040000;
              isSubject_ = input.readBool();
              break;
            }
            case 168: {
              bitField0_ |= 0x00080000;
              isDirectObject_ = input.readBool();
              break;
            }
            case 176: {
              bitField0_ |= 0x00100000;
              isIndirectObject_ = input.readBool();
              break;
            }
            case 184: {
              bitField0_ |= 0x00200000;
              isPrepositionObject_ = input.readBool();
              break;
            }
            case 192: {
              bitField0_ |= 0x00400000;
              hasTwin_ = input.readBool();
              break;
            }
            case 200: {
              bitField0_ |= 0x00800000;
              generic_ = input.readBool();
              break;
            }
            case 208: {
              bitField0_ |= 0x01000000;
              isSingleton_ = input.readBool();
              break;
            }
            case 216: {
              bitField0_ |= 0x02000000;
              hasBasicDependency_ = input.readBool();
              break;
            }
            case 224: {
              bitField0_ |= 0x04000000;
              hasCollapsedDependency_ = input.readBool();
              break;
            }
            case 232: {
              bitField0_ |= 0x08000000;
              hasContextParseTree_ = input.readBool();
              break;
            }
            case 242: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder subBuilder = null;
              if (((bitField0_ & 0x10000000) == 0x10000000)) {
                subBuilder = headIndexedWord_.toBuilder();
              }
              headIndexedWord_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(headIndexedWord_);
                headIndexedWord_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x10000000;
              break;
            }
            case 250: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder subBuilder = null;
              if (((bitField0_ & 0x20000000) == 0x20000000)) {
                subBuilder = dependingVerb_.toBuilder();
              }
              dependingVerb_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(dependingVerb_);
                dependingVerb_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x20000000;
              break;
            }
            case 258: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder subBuilder = null;
              if (((bitField0_ & 0x40000000) == 0x40000000)) {
                subBuilder = headWord_.toBuilder();
              }
              headWord_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(headWord_);
                headWord_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x40000000;
              break;
            }
            case 266: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder subBuilder = null;
              if (((bitField0_ & 0x80000000) == 0x80000000)) {
                subBuilder = speakerInfo_.toBuilder();
              }
              speakerInfo_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(speakerInfo_);
                speakerInfo_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x80000000;
              break;
            }
            case 402: {
              if (!((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
                sentenceWords_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord>();
                mutable_bitField1_ |= 0x00000001;
              }
              sentenceWords_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.PARSER, extensionRegistry));
              break;
            }
            case 410: {
              if (!((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
                originalSpan_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord>();
                mutable_bitField1_ |= 0x00000002;
              }
              originalSpan_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.PARSER, extensionRegistry));
              break;
            }
            case 418: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
                dependents_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField1_ |= 0x00000004;
              }
              dependents_.add(bs);
              break;
            }
            case 426: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
                preprocessedTerms_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField1_ |= 0x00000008;
              }
              preprocessedTerms_.add(bs);
              break;
            }
            case 432: {
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
                appositions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000010;
              }
              appositions_.add(input.readInt32());
              break;
            }
            case 434: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                appositions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                appositions_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 440: {
              if (!((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
                predicateNominatives_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000020;
              }
              predicateNominatives_.add(input.readInt32());
              break;
            }
            case 442: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                predicateNominatives_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                predicateNominatives_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 448: {
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
                relativePronouns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000040;
              }
              relativePronouns_.add(input.readInt32());
              break;
            }
            case 450: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                relativePronouns_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                relativePronouns_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 456: {
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
                listMembers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000080;
              }
              listMembers_.add(input.readInt32());
              break;
            }
            case 458: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000080) == 0x00000080) && input.getBytesUntilLimit() > 0) {
                listMembers_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000080;
              }
              while (input.getBytesUntilLimit() > 0) {
                listMembers_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 464: {
              if (!((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
                belongToLists_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000100;
              }
              belongToLists_.add(input.readInt32());
              break;
            }
            case 466: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField1_ & 0x00000100) == 0x00000100) && input.getBytesUntilLimit() > 0) {
                belongToLists_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField1_ |= 0x00000100;
              }
              while (input.getBytesUntilLimit() > 0) {
                belongToLists_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField1_ & 0x00000001) == 0x00000001)) {
          sentenceWords_ = java.util.Collections.unmodifiableList(sentenceWords_);
        }
        if (((mutable_bitField1_ & 0x00000002) == 0x00000002)) {
          originalSpan_ = java.util.Collections.unmodifiableList(originalSpan_);
        }
        if (((mutable_bitField1_ & 0x00000004) == 0x00000004)) {
          dependents_ = dependents_.getUnmodifiableView();
        }
        if (((mutable_bitField1_ & 0x00000008) == 0x00000008)) {
          preprocessedTerms_ = preprocessedTerms_.getUnmodifiableView();
        }
        if (((mutable_bitField1_ & 0x00000010) == 0x00000010)) {
          appositions_ = java.util.Collections.unmodifiableList(appositions_);
        }
        if (((mutable_bitField1_ & 0x00000020) == 0x00000020)) {
          predicateNominatives_ = java.util.Collections.unmodifiableList(predicateNominatives_);
        }
        if (((mutable_bitField1_ & 0x00000040) == 0x00000040)) {
          relativePronouns_ = java.util.Collections.unmodifiableList(relativePronouns_);
        }
        if (((mutable_bitField1_ & 0x00000080) == 0x00000080)) {
          listMembers_ = java.util.Collections.unmodifiableList(listMembers_);
        }
        if (((mutable_bitField1_ & 0x00000100) == 0x00000100)) {
          belongToLists_ = java.util.Collections.unmodifiableList(belongToLists_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Mention_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Mention_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder.class);
    }

    public static com.google.protobuf.Parser<Mention> PARSER =
        new com.google.protobuf.AbstractParser<Mention>() {
      public Mention parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Mention(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Mention> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int MENTIONID_FIELD_NUMBER = 1;
    private int mentionID_;
    /**
     * <code>optional int32 mentionID = 1;</code>
     */
    public boolean hasMentionID() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional int32 mentionID = 1;</code>
     */
    public int getMentionID() {
      return mentionID_;
    }

    public static final int MENTIONTYPE_FIELD_NUMBER = 2;
    private java.lang.Object mentionType_;
    /**
     * <code>optional string mentionType = 2;</code>
     */
    public boolean hasMentionType() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string mentionType = 2;</code>
     */
    public java.lang.String getMentionType() {
      java.lang.Object ref = mentionType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mentionType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mentionType = 2;</code>
     */
    public com.google.protobuf.ByteString
        getMentionTypeBytes() {
      java.lang.Object ref = mentionType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mentionType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NUMBER_FIELD_NUMBER = 3;
    private java.lang.Object number_;
    /**
     * <code>optional string number = 3;</code>
     */
    public boolean hasNumber() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string number = 3;</code>
     */
    public java.lang.String getNumber() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          number_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string number = 3;</code>
     */
    public com.google.protobuf.ByteString
        getNumberBytes() {
      java.lang.Object ref = number_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        number_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int GENDER_FIELD_NUMBER = 4;
    private java.lang.Object gender_;
    /**
     * <code>optional string gender = 4;</code>
     */
    public boolean hasGender() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string gender = 4;</code>
     */
    public java.lang.String getGender() {
      java.lang.Object ref = gender_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          gender_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string gender = 4;</code>
     */
    public com.google.protobuf.ByteString
        getGenderBytes() {
      java.lang.Object ref = gender_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        gender_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ANIMACY_FIELD_NUMBER = 5;
    private java.lang.Object animacy_;
    /**
     * <code>optional string animacy = 5;</code>
     */
    public boolean hasAnimacy() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string animacy = 5;</code>
     */
    public java.lang.String getAnimacy() {
      java.lang.Object ref = animacy_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          animacy_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string animacy = 5;</code>
     */
    public com.google.protobuf.ByteString
        getAnimacyBytes() {
      java.lang.Object ref = animacy_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        animacy_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int PERSON_FIELD_NUMBER = 6;
    private java.lang.Object person_;
    /**
     * <code>optional string person = 6;</code>
     */
    public boolean hasPerson() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string person = 6;</code>
     */
    public java.lang.String getPerson() {
      java.lang.Object ref = person_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          person_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string person = 6;</code>
     */
    public com.google.protobuf.ByteString
        getPersonBytes() {
      java.lang.Object ref = person_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        person_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int STARTINDEX_FIELD_NUMBER = 7;
    private int startIndex_;
    /**
     * <code>optional uint32 startIndex = 7;</code>
     */
    public boolean hasStartIndex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 startIndex = 7;</code>
     */
    public int getStartIndex() {
      return startIndex_;
    }

    public static final int ENDINDEX_FIELD_NUMBER = 9;
    private int endIndex_;
    /**
     * <code>optional uint32 endIndex = 9;</code>
     */
    public boolean hasEndIndex() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 endIndex = 9;</code>
     */
    public int getEndIndex() {
      return endIndex_;
    }

    public static final int HEADINDEX_FIELD_NUMBER = 10;
    private int headIndex_;
    /**
     * <code>optional uint32 headIndex = 10;</code>
     */
    public boolean hasHeadIndex() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 headIndex = 10;</code>
     */
    public int getHeadIndex() {
      return headIndex_;
    }

    public static final int HEADSTRING_FIELD_NUMBER = 11;
    private java.lang.Object headString_;
    /**
     * <code>optional string headString = 11;</code>
     */
    public boolean hasHeadString() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string headString = 11;</code>
     */
    public java.lang.String getHeadString() {
      java.lang.Object ref = headString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          headString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string headString = 11;</code>
     */
    public com.google.protobuf.ByteString
        getHeadStringBytes() {
      java.lang.Object ref = headString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        headString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NERSTRING_FIELD_NUMBER = 12;
    private java.lang.Object nerString_;
    /**
     * <code>optional string nerString = 12;</code>
     */
    public boolean hasNerString() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string nerString = 12;</code>
     */
    public java.lang.String getNerString() {
      java.lang.Object ref = nerString_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nerString_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nerString = 12;</code>
     */
    public com.google.protobuf.ByteString
        getNerStringBytes() {
      java.lang.Object ref = nerString_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nerString_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ORIGINALREF_FIELD_NUMBER = 13;
    private int originalRef_;
    /**
     * <code>optional uint32 originalRef = 13;</code>
     */
    public boolean hasOriginalRef() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional uint32 originalRef = 13;</code>
     */
    public int getOriginalRef() {
      return originalRef_;
    }

    public static final int GOLDCOREFCLUSTERID_FIELD_NUMBER = 14;
    private int goldCorefClusterID_;
    /**
     * <code>optional int32 goldCorefClusterID = 14;</code>
     */
    public boolean hasGoldCorefClusterID() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional int32 goldCorefClusterID = 14;</code>
     */
    public int getGoldCorefClusterID() {
      return goldCorefClusterID_;
    }

    public static final int COREFCLUSTERID_FIELD_NUMBER = 15;
    private int corefClusterID_;
    /**
     * <code>optional int32 corefClusterID = 15;</code>
     */
    public boolean hasCorefClusterID() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional int32 corefClusterID = 15;</code>
     */
    public int getCorefClusterID() {
      return corefClusterID_;
    }

    public static final int MENTIONNUM_FIELD_NUMBER = 16;
    private int mentionNum_;
    /**
     * <code>optional uint32 mentionNum = 16;</code>
     */
    public boolean hasMentionNum() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional uint32 mentionNum = 16;</code>
     */
    public int getMentionNum() {
      return mentionNum_;
    }

    public static final int SENTNUM_FIELD_NUMBER = 17;
    private int sentNum_;
    /**
     * <code>optional uint32 sentNum = 17;</code>
     */
    public boolean hasSentNum() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional uint32 sentNum = 17;</code>
     */
    public int getSentNum() {
      return sentNum_;
    }

    public static final int UTTER_FIELD_NUMBER = 18;
    private int utter_;
    /**
     * <code>optional uint32 utter = 18;</code>
     */
    public boolean hasUtter() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional uint32 utter = 18;</code>
     */
    public int getUtter() {
      return utter_;
    }

    public static final int PARAGRAPH_FIELD_NUMBER = 19;
    private int paragraph_;
    /**
     * <code>optional uint32 paragraph = 19;</code>
     */
    public boolean hasParagraph() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional uint32 paragraph = 19;</code>
     */
    public int getParagraph() {
      return paragraph_;
    }

    public static final int ISSUBJECT_FIELD_NUMBER = 20;
    private boolean isSubject_;
    /**
     * <code>optional bool isSubject = 20;</code>
     */
    public boolean hasIsSubject() {
      return ((bitField0_ & 0x00040000) == 0x00040000);
    }
    /**
     * <code>optional bool isSubject = 20;</code>
     */
    public boolean getIsSubject() {
      return isSubject_;
    }

    public static final int ISDIRECTOBJECT_FIELD_NUMBER = 21;
    private boolean isDirectObject_;
    /**
     * <code>optional bool isDirectObject = 21;</code>
     */
    public boolean hasIsDirectObject() {
      return ((bitField0_ & 0x00080000) == 0x00080000);
    }
    /**
     * <code>optional bool isDirectObject = 21;</code>
     */
    public boolean getIsDirectObject() {
      return isDirectObject_;
    }

    public static final int ISINDIRECTOBJECT_FIELD_NUMBER = 22;
    private boolean isIndirectObject_;
    /**
     * <code>optional bool isIndirectObject = 22;</code>
     */
    public boolean hasIsIndirectObject() {
      return ((bitField0_ & 0x00100000) == 0x00100000);
    }
    /**
     * <code>optional bool isIndirectObject = 22;</code>
     */
    public boolean getIsIndirectObject() {
      return isIndirectObject_;
    }

    public static final int ISPREPOSITIONOBJECT_FIELD_NUMBER = 23;
    private boolean isPrepositionObject_;
    /**
     * <code>optional bool isPrepositionObject = 23;</code>
     */
    public boolean hasIsPrepositionObject() {
      return ((bitField0_ & 0x00200000) == 0x00200000);
    }
    /**
     * <code>optional bool isPrepositionObject = 23;</code>
     */
    public boolean getIsPrepositionObject() {
      return isPrepositionObject_;
    }

    public static final int HASTWIN_FIELD_NUMBER = 24;
    private boolean hasTwin_;
    /**
     * <code>optional bool hasTwin = 24;</code>
     */
    public boolean hasHasTwin() {
      return ((bitField0_ & 0x00400000) == 0x00400000);
    }
    /**
     * <code>optional bool hasTwin = 24;</code>
     */
    public boolean getHasTwin() {
      return hasTwin_;
    }

    public static final int GENERIC_FIELD_NUMBER = 25;
    private boolean generic_;
    /**
     * <code>optional bool generic = 25;</code>
     */
    public boolean hasGeneric() {
      return ((bitField0_ & 0x00800000) == 0x00800000);
    }
    /**
     * <code>optional bool generic = 25;</code>
     */
    public boolean getGeneric() {
      return generic_;
    }

    public static final int ISSINGLETON_FIELD_NUMBER = 26;
    private boolean isSingleton_;
    /**
     * <code>optional bool isSingleton = 26;</code>
     */
    public boolean hasIsSingleton() {
      return ((bitField0_ & 0x01000000) == 0x01000000);
    }
    /**
     * <code>optional bool isSingleton = 26;</code>
     */
    public boolean getIsSingleton() {
      return isSingleton_;
    }

    public static final int HASBASICDEPENDENCY_FIELD_NUMBER = 27;
    private boolean hasBasicDependency_;
    /**
     * <code>optional bool hasBasicDependency = 27;</code>
     */
    public boolean hasHasBasicDependency() {
      return ((bitField0_ & 0x02000000) == 0x02000000);
    }
    /**
     * <code>optional bool hasBasicDependency = 27;</code>
     */
    public boolean getHasBasicDependency() {
      return hasBasicDependency_;
    }

    public static final int HASCOLLAPSEDDEPENDENCY_FIELD_NUMBER = 28;
    private boolean hasCollapsedDependency_;
    /**
     * <code>optional bool hasCollapsedDependency = 28;</code>
     */
    public boolean hasHasCollapsedDependency() {
      return ((bitField0_ & 0x04000000) == 0x04000000);
    }
    /**
     * <code>optional bool hasCollapsedDependency = 28;</code>
     */
    public boolean getHasCollapsedDependency() {
      return hasCollapsedDependency_;
    }

    public static final int HASCONTEXTPARSETREE_FIELD_NUMBER = 29;
    private boolean hasContextParseTree_;
    /**
     * <code>optional bool hasContextParseTree = 29;</code>
     */
    public boolean hasHasContextParseTree() {
      return ((bitField0_ & 0x08000000) == 0x08000000);
    }
    /**
     * <code>optional bool hasContextParseTree = 29;</code>
     */
    public boolean getHasContextParseTree() {
      return hasContextParseTree_;
    }

    public static final int HEADINDEXEDWORD_FIELD_NUMBER = 30;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord headIndexedWord_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    public boolean hasHeadIndexedWord() {
      return ((bitField0_ & 0x10000000) == 0x10000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadIndexedWord() {
      return headIndexedWord_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadIndexedWordOrBuilder() {
      return headIndexedWord_;
    }

    public static final int DEPENDINGVERB_FIELD_NUMBER = 31;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord dependingVerb_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    public boolean hasDependingVerb() {
      return ((bitField0_ & 0x20000000) == 0x20000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getDependingVerb() {
      return dependingVerb_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getDependingVerbOrBuilder() {
      return dependingVerb_;
    }

    public static final int HEADWORD_FIELD_NUMBER = 32;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord headWord_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    public boolean hasHeadWord() {
      return ((bitField0_ & 0x40000000) == 0x40000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadWord() {
      return headWord_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadWordOrBuilder() {
      return headWord_;
    }

    public static final int SPEAKERINFO_FIELD_NUMBER = 33;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo speakerInfo_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    public boolean hasSpeakerInfo() {
      return ((bitField0_ & 0x80000000) == 0x80000000);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo getSpeakerInfo() {
      return speakerInfo_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder getSpeakerInfoOrBuilder() {
      return speakerInfo_;
    }

    public static final int SENTENCEWORDS_FIELD_NUMBER = 50;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> sentenceWords_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> getSentenceWordsList() {
      return sentenceWords_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
        getSentenceWordsOrBuilderList() {
      return sentenceWords_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    public int getSentenceWordsCount() {
      return sentenceWords_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getSentenceWords(int index) {
      return sentenceWords_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getSentenceWordsOrBuilder(
        int index) {
      return sentenceWords_.get(index);
    }

    public static final int ORIGINALSPAN_FIELD_NUMBER = 51;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> originalSpan_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> getOriginalSpanList() {
      return originalSpan_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
        getOriginalSpanOrBuilderList() {
      return originalSpan_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    public int getOriginalSpanCount() {
      return originalSpan_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getOriginalSpan(int index) {
      return originalSpan_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getOriginalSpanOrBuilder(
        int index) {
      return originalSpan_.get(index);
    }

    public static final int DEPENDENTS_FIELD_NUMBER = 52;
    private com.google.protobuf.LazyStringList dependents_;
    /**
     * <code>repeated string dependents = 52;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getDependentsList() {
      return dependents_;
    }
    /**
     * <code>repeated string dependents = 52;</code>
     */
    public int getDependentsCount() {
      return dependents_.size();
    }
    /**
     * <code>repeated string dependents = 52;</code>
     */
    public java.lang.String getDependents(int index) {
      return dependents_.get(index);
    }
    /**
     * <code>repeated string dependents = 52;</code>
     */
    public com.google.protobuf.ByteString
        getDependentsBytes(int index) {
      return dependents_.getByteString(index);
    }

    public static final int PREPROCESSEDTERMS_FIELD_NUMBER = 53;
    private com.google.protobuf.LazyStringList preprocessedTerms_;
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getPreprocessedTermsList() {
      return preprocessedTerms_;
    }
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    public int getPreprocessedTermsCount() {
      return preprocessedTerms_.size();
    }
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    public java.lang.String getPreprocessedTerms(int index) {
      return preprocessedTerms_.get(index);
    }
    /**
     * <code>repeated string preprocessedTerms = 53;</code>
     */
    public com.google.protobuf.ByteString
        getPreprocessedTermsBytes(int index) {
      return preprocessedTerms_.getByteString(index);
    }

    public static final int APPOSITIONS_FIELD_NUMBER = 54;
    private java.util.List<java.lang.Integer> appositions_;
    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    public java.util.List<java.lang.Integer>
        getAppositionsList() {
      return appositions_;
    }
    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    public int getAppositionsCount() {
      return appositions_.size();
    }
    /**
     * <code>repeated int32 appositions = 54;</code>
     */
    public int getAppositions(int index) {
      return appositions_.get(index);
    }

    public static final int PREDICATENOMINATIVES_FIELD_NUMBER = 55;
    private java.util.List<java.lang.Integer> predicateNominatives_;
    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    public java.util.List<java.lang.Integer>
        getPredicateNominativesList() {
      return predicateNominatives_;
    }
    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    public int getPredicateNominativesCount() {
      return predicateNominatives_.size();
    }
    /**
     * <code>repeated int32 predicateNominatives = 55;</code>
     */
    public int getPredicateNominatives(int index) {
      return predicateNominatives_.get(index);
    }

    public static final int RELATIVEPRONOUNS_FIELD_NUMBER = 56;
    private java.util.List<java.lang.Integer> relativePronouns_;
    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    public java.util.List<java.lang.Integer>
        getRelativePronounsList() {
      return relativePronouns_;
    }
    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    public int getRelativePronounsCount() {
      return relativePronouns_.size();
    }
    /**
     * <code>repeated int32 relativePronouns = 56;</code>
     */
    public int getRelativePronouns(int index) {
      return relativePronouns_.get(index);
    }

    public static final int LISTMEMBERS_FIELD_NUMBER = 57;
    private java.util.List<java.lang.Integer> listMembers_;
    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    public java.util.List<java.lang.Integer>
        getListMembersList() {
      return listMembers_;
    }
    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    public int getListMembersCount() {
      return listMembers_.size();
    }
    /**
     * <code>repeated int32 listMembers = 57;</code>
     */
    public int getListMembers(int index) {
      return listMembers_.get(index);
    }

    public static final int BELONGTOLISTS_FIELD_NUMBER = 58;
    private java.util.List<java.lang.Integer> belongToLists_;
    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    public java.util.List<java.lang.Integer>
        getBelongToListsList() {
      return belongToLists_;
    }
    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    public int getBelongToListsCount() {
      return belongToLists_.size();
    }
    /**
     * <code>repeated int32 belongToLists = 58;</code>
     */
    public int getBelongToLists(int index) {
      return belongToLists_.get(index);
    }

    private void initFields() {
      mentionID_ = 0;
      mentionType_ = "";
      number_ = "";
      gender_ = "";
      animacy_ = "";
      person_ = "";
      startIndex_ = 0;
      endIndex_ = 0;
      headIndex_ = 0;
      headString_ = "";
      nerString_ = "";
      originalRef_ = 0;
      goldCorefClusterID_ = 0;
      corefClusterID_ = 0;
      mentionNum_ = 0;
      sentNum_ = 0;
      utter_ = 0;
      paragraph_ = 0;
      isSubject_ = false;
      isDirectObject_ = false;
      isIndirectObject_ = false;
      isPrepositionObject_ = false;
      hasTwin_ = false;
      generic_ = false;
      isSingleton_ = false;
      hasBasicDependency_ = false;
      hasCollapsedDependency_ = false;
      hasContextParseTree_ = false;
      headIndexedWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      dependingVerb_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      headWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      speakerInfo_ = edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance();
      sentenceWords_ = java.util.Collections.emptyList();
      originalSpan_ = java.util.Collections.emptyList();
      dependents_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      preprocessedTerms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      appositions_ = java.util.Collections.emptyList();
      predicateNominatives_ = java.util.Collections.emptyList();
      relativePronouns_ = java.util.Collections.emptyList();
      listMembers_ = java.util.Collections.emptyList();
      belongToLists_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeInt32(1, mentionID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getMentionTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getNumberBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getGenderBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getAnimacyBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getPersonBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, startIndex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(9, endIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(10, headIndex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(11, getHeadStringBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(12, getNerStringBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeUInt32(13, originalRef_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeInt32(14, goldCorefClusterID_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeInt32(15, corefClusterID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeUInt32(16, mentionNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeUInt32(17, sentNum_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeUInt32(18, utter_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeUInt32(19, paragraph_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        output.writeBool(20, isSubject_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        output.writeBool(21, isDirectObject_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        output.writeBool(22, isIndirectObject_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        output.writeBool(23, isPrepositionObject_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        output.writeBool(24, hasTwin_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        output.writeBool(25, generic_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        output.writeBool(26, isSingleton_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        output.writeBool(27, hasBasicDependency_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        output.writeBool(28, hasCollapsedDependency_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        output.writeBool(29, hasContextParseTree_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        output.writeMessage(30, headIndexedWord_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        output.writeMessage(31, dependingVerb_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        output.writeMessage(32, headWord_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        output.writeMessage(33, speakerInfo_);
      }
      for (int i = 0; i < sentenceWords_.size(); i++) {
        output.writeMessage(50, sentenceWords_.get(i));
      }
      for (int i = 0; i < originalSpan_.size(); i++) {
        output.writeMessage(51, originalSpan_.get(i));
      }
      for (int i = 0; i < dependents_.size(); i++) {
        output.writeBytes(52, dependents_.getByteString(i));
      }
      for (int i = 0; i < preprocessedTerms_.size(); i++) {
        output.writeBytes(53, preprocessedTerms_.getByteString(i));
      }
      for (int i = 0; i < appositions_.size(); i++) {
        output.writeInt32(54, appositions_.get(i));
      }
      for (int i = 0; i < predicateNominatives_.size(); i++) {
        output.writeInt32(55, predicateNominatives_.get(i));
      }
      for (int i = 0; i < relativePronouns_.size(); i++) {
        output.writeInt32(56, relativePronouns_.get(i));
      }
      for (int i = 0; i < listMembers_.size(); i++) {
        output.writeInt32(57, listMembers_.get(i));
      }
      for (int i = 0; i < belongToLists_.size(); i++) {
        output.writeInt32(58, belongToLists_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(1, mentionID_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getMentionTypeBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getNumberBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getGenderBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getAnimacyBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getPersonBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, startIndex_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(9, endIndex_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, headIndex_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getHeadStringBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getNerStringBytes());
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(13, originalRef_);
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(14, goldCorefClusterID_);
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, corefClusterID_);
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(16, mentionNum_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(17, sentNum_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(18, utter_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(19, paragraph_);
      }
      if (((bitField0_ & 0x00040000) == 0x00040000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(20, isSubject_);
      }
      if (((bitField0_ & 0x00080000) == 0x00080000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(21, isDirectObject_);
      }
      if (((bitField0_ & 0x00100000) == 0x00100000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(22, isIndirectObject_);
      }
      if (((bitField0_ & 0x00200000) == 0x00200000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(23, isPrepositionObject_);
      }
      if (((bitField0_ & 0x00400000) == 0x00400000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(24, hasTwin_);
      }
      if (((bitField0_ & 0x00800000) == 0x00800000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(25, generic_);
      }
      if (((bitField0_ & 0x01000000) == 0x01000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(26, isSingleton_);
      }
      if (((bitField0_ & 0x02000000) == 0x02000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(27, hasBasicDependency_);
      }
      if (((bitField0_ & 0x04000000) == 0x04000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(28, hasCollapsedDependency_);
      }
      if (((bitField0_ & 0x08000000) == 0x08000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(29, hasContextParseTree_);
      }
      if (((bitField0_ & 0x10000000) == 0x10000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(30, headIndexedWord_);
      }
      if (((bitField0_ & 0x20000000) == 0x20000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(31, dependingVerb_);
      }
      if (((bitField0_ & 0x40000000) == 0x40000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(32, headWord_);
      }
      if (((bitField0_ & 0x80000000) == 0x80000000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(33, speakerInfo_);
      }
      for (int i = 0; i < sentenceWords_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(50, sentenceWords_.get(i));
      }
      for (int i = 0; i < originalSpan_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(51, originalSpan_.get(i));
      }
      {
        int dataSize = 0;
        for (int i = 0; i < dependents_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(dependents_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getDependentsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < preprocessedTerms_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(preprocessedTerms_.getByteString(i));
        }
        size += dataSize;
        size += 2 * getPreprocessedTermsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < appositions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(appositions_.get(i));
        }
        size += dataSize;
        size += 2 * getAppositionsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < predicateNominatives_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(predicateNominatives_.get(i));
        }
        size += dataSize;
        size += 2 * getPredicateNominativesList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < relativePronouns_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(relativePronouns_.get(i));
        }
        size += dataSize;
        size += 2 * getRelativePronounsList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < listMembers_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(listMembers_.get(i));
        }
        size += dataSize;
        size += 2 * getListMembersList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < belongToLists_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(belongToLists_.get(i));
        }
        size += dataSize;
        size += 2 * getBelongToListsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Mention prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Mention}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Mention)
        edu.stanford.nlp.pipeline.CoreNLPProtos.MentionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Mention_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Mention_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getHeadIndexedWordFieldBuilder();
          getDependingVerbFieldBuilder();
          getHeadWordFieldBuilder();
          getSpeakerInfoFieldBuilder();
          getSentenceWordsFieldBuilder();
          getOriginalSpanFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        mentionID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        mentionType_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        number_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        gender_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        animacy_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        person_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        startIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        endIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        headIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        headString_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        nerString_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        originalRef_ = 0;
        bitField0_ = (bitField0_ & ~0x00000800);
        goldCorefClusterID_ = 0;
        bitField0_ = (bitField0_ & ~0x00001000);
        corefClusterID_ = 0;
        bitField0_ = (bitField0_ & ~0x00002000);
        mentionNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        sentNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00008000);
        utter_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        paragraph_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        isSubject_ = false;
        bitField0_ = (bitField0_ & ~0x00040000);
        isDirectObject_ = false;
        bitField0_ = (bitField0_ & ~0x00080000);
        isIndirectObject_ = false;
        bitField0_ = (bitField0_ & ~0x00100000);
        isPrepositionObject_ = false;
        bitField0_ = (bitField0_ & ~0x00200000);
        hasTwin_ = false;
        bitField0_ = (bitField0_ & ~0x00400000);
        generic_ = false;
        bitField0_ = (bitField0_ & ~0x00800000);
        isSingleton_ = false;
        bitField0_ = (bitField0_ & ~0x01000000);
        hasBasicDependency_ = false;
        bitField0_ = (bitField0_ & ~0x02000000);
        hasCollapsedDependency_ = false;
        bitField0_ = (bitField0_ & ~0x04000000);
        hasContextParseTree_ = false;
        bitField0_ = (bitField0_ & ~0x08000000);
        if (headIndexedWordBuilder_ == null) {
          headIndexedWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
        } else {
          headIndexedWordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        if (dependingVerbBuilder_ == null) {
          dependingVerb_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
        } else {
          dependingVerbBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        if (headWordBuilder_ == null) {
          headWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
        } else {
          headWordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        if (speakerInfoBuilder_ == null) {
          speakerInfo_ = edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance();
        } else {
          speakerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        if (sentenceWordsBuilder_ == null) {
          sentenceWords_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
        } else {
          sentenceWordsBuilder_.clear();
        }
        if (originalSpanBuilder_ == null) {
          originalSpan_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000002);
        } else {
          originalSpanBuilder_.clear();
        }
        dependents_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000004);
        preprocessedTerms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000008);
        appositions_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000010);
        predicateNominatives_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000020);
        relativePronouns_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000040);
        listMembers_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        belongToLists_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000100);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Mention_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Mention result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Mention buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Mention result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Mention(this);
        int from_bitField0_ = bitField0_;
        int from_bitField1_ = bitField1_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.mentionID_ = mentionID_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.mentionType_ = mentionType_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.number_ = number_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.gender_ = gender_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.animacy_ = animacy_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.person_ = person_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.startIndex_ = startIndex_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.endIndex_ = endIndex_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.headIndex_ = headIndex_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.headString_ = headString_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.nerString_ = nerString_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.originalRef_ = originalRef_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.goldCorefClusterID_ = goldCorefClusterID_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.corefClusterID_ = corefClusterID_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.mentionNum_ = mentionNum_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.sentNum_ = sentNum_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.utter_ = utter_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.paragraph_ = paragraph_;
        if (((from_bitField0_ & 0x00040000) == 0x00040000)) {
          to_bitField0_ |= 0x00040000;
        }
        result.isSubject_ = isSubject_;
        if (((from_bitField0_ & 0x00080000) == 0x00080000)) {
          to_bitField0_ |= 0x00080000;
        }
        result.isDirectObject_ = isDirectObject_;
        if (((from_bitField0_ & 0x00100000) == 0x00100000)) {
          to_bitField0_ |= 0x00100000;
        }
        result.isIndirectObject_ = isIndirectObject_;
        if (((from_bitField0_ & 0x00200000) == 0x00200000)) {
          to_bitField0_ |= 0x00200000;
        }
        result.isPrepositionObject_ = isPrepositionObject_;
        if (((from_bitField0_ & 0x00400000) == 0x00400000)) {
          to_bitField0_ |= 0x00400000;
        }
        result.hasTwin_ = hasTwin_;
        if (((from_bitField0_ & 0x00800000) == 0x00800000)) {
          to_bitField0_ |= 0x00800000;
        }
        result.generic_ = generic_;
        if (((from_bitField0_ & 0x01000000) == 0x01000000)) {
          to_bitField0_ |= 0x01000000;
        }
        result.isSingleton_ = isSingleton_;
        if (((from_bitField0_ & 0x02000000) == 0x02000000)) {
          to_bitField0_ |= 0x02000000;
        }
        result.hasBasicDependency_ = hasBasicDependency_;
        if (((from_bitField0_ & 0x04000000) == 0x04000000)) {
          to_bitField0_ |= 0x04000000;
        }
        result.hasCollapsedDependency_ = hasCollapsedDependency_;
        if (((from_bitField0_ & 0x08000000) == 0x08000000)) {
          to_bitField0_ |= 0x08000000;
        }
        result.hasContextParseTree_ = hasContextParseTree_;
        if (((from_bitField0_ & 0x10000000) == 0x10000000)) {
          to_bitField0_ |= 0x10000000;
        }
        if (headIndexedWordBuilder_ == null) {
          result.headIndexedWord_ = headIndexedWord_;
        } else {
          result.headIndexedWord_ = headIndexedWordBuilder_.build();
        }
        if (((from_bitField0_ & 0x20000000) == 0x20000000)) {
          to_bitField0_ |= 0x20000000;
        }
        if (dependingVerbBuilder_ == null) {
          result.dependingVerb_ = dependingVerb_;
        } else {
          result.dependingVerb_ = dependingVerbBuilder_.build();
        }
        if (((from_bitField0_ & 0x40000000) == 0x40000000)) {
          to_bitField0_ |= 0x40000000;
        }
        if (headWordBuilder_ == null) {
          result.headWord_ = headWord_;
        } else {
          result.headWord_ = headWordBuilder_.build();
        }
        if (((from_bitField0_ & 0x80000000) == 0x80000000)) {
          to_bitField0_ |= 0x80000000;
        }
        if (speakerInfoBuilder_ == null) {
          result.speakerInfo_ = speakerInfo_;
        } else {
          result.speakerInfo_ = speakerInfoBuilder_.build();
        }
        if (sentenceWordsBuilder_ == null) {
          if (((bitField1_ & 0x00000001) == 0x00000001)) {
            sentenceWords_ = java.util.Collections.unmodifiableList(sentenceWords_);
            bitField1_ = (bitField1_ & ~0x00000001);
          }
          result.sentenceWords_ = sentenceWords_;
        } else {
          result.sentenceWords_ = sentenceWordsBuilder_.build();
        }
        if (originalSpanBuilder_ == null) {
          if (((bitField1_ & 0x00000002) == 0x00000002)) {
            originalSpan_ = java.util.Collections.unmodifiableList(originalSpan_);
            bitField1_ = (bitField1_ & ~0x00000002);
          }
          result.originalSpan_ = originalSpan_;
        } else {
          result.originalSpan_ = originalSpanBuilder_.build();
        }
        if (((bitField1_ & 0x00000004) == 0x00000004)) {
          dependents_ = dependents_.getUnmodifiableView();
          bitField1_ = (bitField1_ & ~0x00000004);
        }
        result.dependents_ = dependents_;
        if (((bitField1_ & 0x00000008) == 0x00000008)) {
          preprocessedTerms_ = preprocessedTerms_.getUnmodifiableView();
          bitField1_ = (bitField1_ & ~0x00000008);
        }
        result.preprocessedTerms_ = preprocessedTerms_;
        if (((bitField1_ & 0x00000010) == 0x00000010)) {
          appositions_ = java.util.Collections.unmodifiableList(appositions_);
          bitField1_ = (bitField1_ & ~0x00000010);
        }
        result.appositions_ = appositions_;
        if (((bitField1_ & 0x00000020) == 0x00000020)) {
          predicateNominatives_ = java.util.Collections.unmodifiableList(predicateNominatives_);
          bitField1_ = (bitField1_ & ~0x00000020);
        }
        result.predicateNominatives_ = predicateNominatives_;
        if (((bitField1_ & 0x00000040) == 0x00000040)) {
          relativePronouns_ = java.util.Collections.unmodifiableList(relativePronouns_);
          bitField1_ = (bitField1_ & ~0x00000040);
        }
        result.relativePronouns_ = relativePronouns_;
        if (((bitField1_ & 0x00000080) == 0x00000080)) {
          listMembers_ = java.util.Collections.unmodifiableList(listMembers_);
          bitField1_ = (bitField1_ & ~0x00000080);
        }
        result.listMembers_ = listMembers_;
        if (((bitField1_ & 0x00000100) == 0x00000100)) {
          belongToLists_ = java.util.Collections.unmodifiableList(belongToLists_);
          bitField1_ = (bitField1_ & ~0x00000100);
        }
        result.belongToLists_ = belongToLists_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Mention) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Mention)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Mention other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Mention.getDefaultInstance()) return this;
        if (other.hasMentionID()) {
          setMentionID(other.getMentionID());
        }
        if (other.hasMentionType()) {
          bitField0_ |= 0x00000002;
          mentionType_ = other.mentionType_;
          onChanged();
        }
        if (other.hasNumber()) {
          bitField0_ |= 0x00000004;
          number_ = other.number_;
          onChanged();
        }
        if (other.hasGender()) {
          bitField0_ |= 0x00000008;
          gender_ = other.gender_;
          onChanged();
        }
        if (other.hasAnimacy()) {
          bitField0_ |= 0x00000010;
          animacy_ = other.animacy_;
          onChanged();
        }
        if (other.hasPerson()) {
          bitField0_ |= 0x00000020;
          person_ = other.person_;
          onChanged();
        }
        if (other.hasStartIndex()) {
          setStartIndex(other.getStartIndex());
        }
        if (other.hasEndIndex()) {
          setEndIndex(other.getEndIndex());
        }
        if (other.hasHeadIndex()) {
          setHeadIndex(other.getHeadIndex());
        }
        if (other.hasHeadString()) {
          bitField0_ |= 0x00000200;
          headString_ = other.headString_;
          onChanged();
        }
        if (other.hasNerString()) {
          bitField0_ |= 0x00000400;
          nerString_ = other.nerString_;
          onChanged();
        }
        if (other.hasOriginalRef()) {
          setOriginalRef(other.getOriginalRef());
        }
        if (other.hasGoldCorefClusterID()) {
          setGoldCorefClusterID(other.getGoldCorefClusterID());
        }
        if (other.hasCorefClusterID()) {
          setCorefClusterID(other.getCorefClusterID());
        }
        if (other.hasMentionNum()) {
          setMentionNum(other.getMentionNum());
        }
        if (other.hasSentNum()) {
          setSentNum(other.getSentNum());
        }
        if (other.hasUtter()) {
          setUtter(other.getUtter());
        }
        if (other.hasParagraph()) {
          setParagraph(other.getParagraph());
        }
        if (other.hasIsSubject()) {
          setIsSubject(other.getIsSubject());
        }
        if (other.hasIsDirectObject()) {
          setIsDirectObject(other.getIsDirectObject());
        }
        if (other.hasIsIndirectObject()) {
          setIsIndirectObject(other.getIsIndirectObject());
        }
        if (other.hasIsPrepositionObject()) {
          setIsPrepositionObject(other.getIsPrepositionObject());
        }
        if (other.hasHasTwin()) {
          setHasTwin(other.getHasTwin());
        }
        if (other.hasGeneric()) {
          setGeneric(other.getGeneric());
        }
        if (other.hasIsSingleton()) {
          setIsSingleton(other.getIsSingleton());
        }
        if (other.hasHasBasicDependency()) {
          setHasBasicDependency(other.getHasBasicDependency());
        }
        if (other.hasHasCollapsedDependency()) {
          setHasCollapsedDependency(other.getHasCollapsedDependency());
        }
        if (other.hasHasContextParseTree()) {
          setHasContextParseTree(other.getHasContextParseTree());
        }
        if (other.hasHeadIndexedWord()) {
          mergeHeadIndexedWord(other.getHeadIndexedWord());
        }
        if (other.hasDependingVerb()) {
          mergeDependingVerb(other.getDependingVerb());
        }
        if (other.hasHeadWord()) {
          mergeHeadWord(other.getHeadWord());
        }
        if (other.hasSpeakerInfo()) {
          mergeSpeakerInfo(other.getSpeakerInfo());
        }
        if (sentenceWordsBuilder_ == null) {
          if (!other.sentenceWords_.isEmpty()) {
            if (sentenceWords_.isEmpty()) {
              sentenceWords_ = other.sentenceWords_;
              bitField1_ = (bitField1_ & ~0x00000001);
            } else {
              ensureSentenceWordsIsMutable();
              sentenceWords_.addAll(other.sentenceWords_);
            }
            onChanged();
          }
        } else {
          if (!other.sentenceWords_.isEmpty()) {
            if (sentenceWordsBuilder_.isEmpty()) {
              sentenceWordsBuilder_.dispose();
              sentenceWordsBuilder_ = null;
              sentenceWords_ = other.sentenceWords_;
              bitField1_ = (bitField1_ & ~0x00000001);
              sentenceWordsBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getSentenceWordsFieldBuilder() : null;
            } else {
              sentenceWordsBuilder_.addAllMessages(other.sentenceWords_);
            }
          }
        }
        if (originalSpanBuilder_ == null) {
          if (!other.originalSpan_.isEmpty()) {
            if (originalSpan_.isEmpty()) {
              originalSpan_ = other.originalSpan_;
              bitField1_ = (bitField1_ & ~0x00000002);
            } else {
              ensureOriginalSpanIsMutable();
              originalSpan_.addAll(other.originalSpan_);
            }
            onChanged();
          }
        } else {
          if (!other.originalSpan_.isEmpty()) {
            if (originalSpanBuilder_.isEmpty()) {
              originalSpanBuilder_.dispose();
              originalSpanBuilder_ = null;
              originalSpan_ = other.originalSpan_;
              bitField1_ = (bitField1_ & ~0x00000002);
              originalSpanBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getOriginalSpanFieldBuilder() : null;
            } else {
              originalSpanBuilder_.addAllMessages(other.originalSpan_);
            }
          }
        }
        if (!other.dependents_.isEmpty()) {
          if (dependents_.isEmpty()) {
            dependents_ = other.dependents_;
            bitField1_ = (bitField1_ & ~0x00000004);
          } else {
            ensureDependentsIsMutable();
            dependents_.addAll(other.dependents_);
          }
          onChanged();
        }
        if (!other.preprocessedTerms_.isEmpty()) {
          if (preprocessedTerms_.isEmpty()) {
            preprocessedTerms_ = other.preprocessedTerms_;
            bitField1_ = (bitField1_ & ~0x00000008);
          } else {
            ensurePreprocessedTermsIsMutable();
            preprocessedTerms_.addAll(other.preprocessedTerms_);
          }
          onChanged();
        }
        if (!other.appositions_.isEmpty()) {
          if (appositions_.isEmpty()) {
            appositions_ = other.appositions_;
            bitField1_ = (bitField1_ & ~0x00000010);
          } else {
            ensureAppositionsIsMutable();
            appositions_.addAll(other.appositions_);
          }
          onChanged();
        }
        if (!other.predicateNominatives_.isEmpty()) {
          if (predicateNominatives_.isEmpty()) {
            predicateNominatives_ = other.predicateNominatives_;
            bitField1_ = (bitField1_ & ~0x00000020);
          } else {
            ensurePredicateNominativesIsMutable();
            predicateNominatives_.addAll(other.predicateNominatives_);
          }
          onChanged();
        }
        if (!other.relativePronouns_.isEmpty()) {
          if (relativePronouns_.isEmpty()) {
            relativePronouns_ = other.relativePronouns_;
            bitField1_ = (bitField1_ & ~0x00000040);
          } else {
            ensureRelativePronounsIsMutable();
            relativePronouns_.addAll(other.relativePronouns_);
          }
          onChanged();
        }
        if (!other.listMembers_.isEmpty()) {
          if (listMembers_.isEmpty()) {
            listMembers_ = other.listMembers_;
            bitField1_ = (bitField1_ & ~0x00000080);
          } else {
            ensureListMembersIsMutable();
            listMembers_.addAll(other.listMembers_);
          }
          onChanged();
        }
        if (!other.belongToLists_.isEmpty()) {
          if (belongToLists_.isEmpty()) {
            belongToLists_ = other.belongToLists_;
            bitField1_ = (bitField1_ & ~0x00000100);
          } else {
            ensureBelongToListsIsMutable();
            belongToLists_.addAll(other.belongToLists_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Mention parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Mention) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;
      private int bitField1_;

      private int mentionID_ ;
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public boolean hasMentionID() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public int getMentionID() {
        return mentionID_;
      }
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public Builder setMentionID(int value) {
        bitField0_ |= 0x00000001;
        mentionID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 mentionID = 1;</code>
       */
      public Builder clearMentionID() {
        bitField0_ = (bitField0_ & ~0x00000001);
        mentionID_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object mentionType_ = "";
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public boolean hasMentionType() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public java.lang.String getMentionType() {
        java.lang.Object ref = mentionType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mentionType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public com.google.protobuf.ByteString
          getMentionTypeBytes() {
        java.lang.Object ref = mentionType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mentionType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public Builder setMentionType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mentionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public Builder clearMentionType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        mentionType_ = getDefaultInstance().getMentionType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mentionType = 2;</code>
       */
      public Builder setMentionTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        mentionType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object number_ = "";
      /**
       * <code>optional string number = 3;</code>
       */
      public boolean hasNumber() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public java.lang.String getNumber() {
        java.lang.Object ref = number_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            number_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public com.google.protobuf.ByteString
          getNumberBytes() {
        java.lang.Object ref = number_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          number_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder setNumber(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        number_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder clearNumber() {
        bitField0_ = (bitField0_ & ~0x00000004);
        number_ = getDefaultInstance().getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional string number = 3;</code>
       */
      public Builder setNumberBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        number_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object gender_ = "";
      /**
       * <code>optional string gender = 4;</code>
       */
      public boolean hasGender() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public java.lang.String getGender() {
        java.lang.Object ref = gender_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            gender_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public com.google.protobuf.ByteString
          getGenderBytes() {
        java.lang.Object ref = gender_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          gender_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public Builder setGender(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gender_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public Builder clearGender() {
        bitField0_ = (bitField0_ & ~0x00000008);
        gender_ = getDefaultInstance().getGender();
        onChanged();
        return this;
      }
      /**
       * <code>optional string gender = 4;</code>
       */
      public Builder setGenderBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        gender_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object animacy_ = "";
      /**
       * <code>optional string animacy = 5;</code>
       */
      public boolean hasAnimacy() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public java.lang.String getAnimacy() {
        java.lang.Object ref = animacy_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            animacy_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public com.google.protobuf.ByteString
          getAnimacyBytes() {
        java.lang.Object ref = animacy_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          animacy_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public Builder setAnimacy(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        animacy_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public Builder clearAnimacy() {
        bitField0_ = (bitField0_ & ~0x00000010);
        animacy_ = getDefaultInstance().getAnimacy();
        onChanged();
        return this;
      }
      /**
       * <code>optional string animacy = 5;</code>
       */
      public Builder setAnimacyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        animacy_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object person_ = "";
      /**
       * <code>optional string person = 6;</code>
       */
      public boolean hasPerson() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string person = 6;</code>
       */
      public java.lang.String getPerson() {
        java.lang.Object ref = person_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            person_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string person = 6;</code>
       */
      public com.google.protobuf.ByteString
          getPersonBytes() {
        java.lang.Object ref = person_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          person_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string person = 6;</code>
       */
      public Builder setPerson(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        person_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string person = 6;</code>
       */
      public Builder clearPerson() {
        bitField0_ = (bitField0_ & ~0x00000020);
        person_ = getDefaultInstance().getPerson();
        onChanged();
        return this;
      }
      /**
       * <code>optional string person = 6;</code>
       */
      public Builder setPersonBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        person_ = value;
        onChanged();
        return this;
      }

      private int startIndex_ ;
      /**
       * <code>optional uint32 startIndex = 7;</code>
       */
      public boolean hasStartIndex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 startIndex = 7;</code>
       */
      public int getStartIndex() {
        return startIndex_;
      }
      /**
       * <code>optional uint32 startIndex = 7;</code>
       */
      public Builder setStartIndex(int value) {
        bitField0_ |= 0x00000040;
        startIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 startIndex = 7;</code>
       */
      public Builder clearStartIndex() {
        bitField0_ = (bitField0_ & ~0x00000040);
        startIndex_ = 0;
        onChanged();
        return this;
      }

      private int endIndex_ ;
      /**
       * <code>optional uint32 endIndex = 9;</code>
       */
      public boolean hasEndIndex() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 endIndex = 9;</code>
       */
      public int getEndIndex() {
        return endIndex_;
      }
      /**
       * <code>optional uint32 endIndex = 9;</code>
       */
      public Builder setEndIndex(int value) {
        bitField0_ |= 0x00000080;
        endIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 endIndex = 9;</code>
       */
      public Builder clearEndIndex() {
        bitField0_ = (bitField0_ & ~0x00000080);
        endIndex_ = 0;
        onChanged();
        return this;
      }

      private int headIndex_ ;
      /**
       * <code>optional uint32 headIndex = 10;</code>
       */
      public boolean hasHeadIndex() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 headIndex = 10;</code>
       */
      public int getHeadIndex() {
        return headIndex_;
      }
      /**
       * <code>optional uint32 headIndex = 10;</code>
       */
      public Builder setHeadIndex(int value) {
        bitField0_ |= 0x00000100;
        headIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 headIndex = 10;</code>
       */
      public Builder clearHeadIndex() {
        bitField0_ = (bitField0_ & ~0x00000100);
        headIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object headString_ = "";
      /**
       * <code>optional string headString = 11;</code>
       */
      public boolean hasHeadString() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string headString = 11;</code>
       */
      public java.lang.String getHeadString() {
        java.lang.Object ref = headString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            headString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string headString = 11;</code>
       */
      public com.google.protobuf.ByteString
          getHeadStringBytes() {
        java.lang.Object ref = headString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          headString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string headString = 11;</code>
       */
      public Builder setHeadString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        headString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string headString = 11;</code>
       */
      public Builder clearHeadString() {
        bitField0_ = (bitField0_ & ~0x00000200);
        headString_ = getDefaultInstance().getHeadString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string headString = 11;</code>
       */
      public Builder setHeadStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        headString_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nerString_ = "";
      /**
       * <code>optional string nerString = 12;</code>
       */
      public boolean hasNerString() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string nerString = 12;</code>
       */
      public java.lang.String getNerString() {
        java.lang.Object ref = nerString_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nerString_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nerString = 12;</code>
       */
      public com.google.protobuf.ByteString
          getNerStringBytes() {
        java.lang.Object ref = nerString_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nerString_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nerString = 12;</code>
       */
      public Builder setNerString(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        nerString_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nerString = 12;</code>
       */
      public Builder clearNerString() {
        bitField0_ = (bitField0_ & ~0x00000400);
        nerString_ = getDefaultInstance().getNerString();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nerString = 12;</code>
       */
      public Builder setNerStringBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        nerString_ = value;
        onChanged();
        return this;
      }

      private int originalRef_ ;
      /**
       * <code>optional uint32 originalRef = 13;</code>
       */
      public boolean hasOriginalRef() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional uint32 originalRef = 13;</code>
       */
      public int getOriginalRef() {
        return originalRef_;
      }
      /**
       * <code>optional uint32 originalRef = 13;</code>
       */
      public Builder setOriginalRef(int value) {
        bitField0_ |= 0x00000800;
        originalRef_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 originalRef = 13;</code>
       */
      public Builder clearOriginalRef() {
        bitField0_ = (bitField0_ & ~0x00000800);
        originalRef_ = 0;
        onChanged();
        return this;
      }

      private int goldCorefClusterID_ ;
      /**
       * <code>optional int32 goldCorefClusterID = 14;</code>
       */
      public boolean hasGoldCorefClusterID() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional int32 goldCorefClusterID = 14;</code>
       */
      public int getGoldCorefClusterID() {
        return goldCorefClusterID_;
      }
      /**
       * <code>optional int32 goldCorefClusterID = 14;</code>
       */
      public Builder setGoldCorefClusterID(int value) {
        bitField0_ |= 0x00001000;
        goldCorefClusterID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 goldCorefClusterID = 14;</code>
       */
      public Builder clearGoldCorefClusterID() {
        bitField0_ = (bitField0_ & ~0x00001000);
        goldCorefClusterID_ = 0;
        onChanged();
        return this;
      }

      private int corefClusterID_ ;
      /**
       * <code>optional int32 corefClusterID = 15;</code>
       */
      public boolean hasCorefClusterID() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional int32 corefClusterID = 15;</code>
       */
      public int getCorefClusterID() {
        return corefClusterID_;
      }
      /**
       * <code>optional int32 corefClusterID = 15;</code>
       */
      public Builder setCorefClusterID(int value) {
        bitField0_ |= 0x00002000;
        corefClusterID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 corefClusterID = 15;</code>
       */
      public Builder clearCorefClusterID() {
        bitField0_ = (bitField0_ & ~0x00002000);
        corefClusterID_ = 0;
        onChanged();
        return this;
      }

      private int mentionNum_ ;
      /**
       * <code>optional uint32 mentionNum = 16;</code>
       */
      public boolean hasMentionNum() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional uint32 mentionNum = 16;</code>
       */
      public int getMentionNum() {
        return mentionNum_;
      }
      /**
       * <code>optional uint32 mentionNum = 16;</code>
       */
      public Builder setMentionNum(int value) {
        bitField0_ |= 0x00004000;
        mentionNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 mentionNum = 16;</code>
       */
      public Builder clearMentionNum() {
        bitField0_ = (bitField0_ & ~0x00004000);
        mentionNum_ = 0;
        onChanged();
        return this;
      }

      private int sentNum_ ;
      /**
       * <code>optional uint32 sentNum = 17;</code>
       */
      public boolean hasSentNum() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional uint32 sentNum = 17;</code>
       */
      public int getSentNum() {
        return sentNum_;
      }
      /**
       * <code>optional uint32 sentNum = 17;</code>
       */
      public Builder setSentNum(int value) {
        bitField0_ |= 0x00008000;
        sentNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentNum = 17;</code>
       */
      public Builder clearSentNum() {
        bitField0_ = (bitField0_ & ~0x00008000);
        sentNum_ = 0;
        onChanged();
        return this;
      }

      private int utter_ ;
      /**
       * <code>optional uint32 utter = 18;</code>
       */
      public boolean hasUtter() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional uint32 utter = 18;</code>
       */
      public int getUtter() {
        return utter_;
      }
      /**
       * <code>optional uint32 utter = 18;</code>
       */
      public Builder setUtter(int value) {
        bitField0_ |= 0x00010000;
        utter_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 utter = 18;</code>
       */
      public Builder clearUtter() {
        bitField0_ = (bitField0_ & ~0x00010000);
        utter_ = 0;
        onChanged();
        return this;
      }

      private int paragraph_ ;
      /**
       * <code>optional uint32 paragraph = 19;</code>
       */
      public boolean hasParagraph() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional uint32 paragraph = 19;</code>
       */
      public int getParagraph() {
        return paragraph_;
      }
      /**
       * <code>optional uint32 paragraph = 19;</code>
       */
      public Builder setParagraph(int value) {
        bitField0_ |= 0x00020000;
        paragraph_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 paragraph = 19;</code>
       */
      public Builder clearParagraph() {
        bitField0_ = (bitField0_ & ~0x00020000);
        paragraph_ = 0;
        onChanged();
        return this;
      }

      private boolean isSubject_ ;
      /**
       * <code>optional bool isSubject = 20;</code>
       */
      public boolean hasIsSubject() {
        return ((bitField0_ & 0x00040000) == 0x00040000);
      }
      /**
       * <code>optional bool isSubject = 20;</code>
       */
      public boolean getIsSubject() {
        return isSubject_;
      }
      /**
       * <code>optional bool isSubject = 20;</code>
       */
      public Builder setIsSubject(boolean value) {
        bitField0_ |= 0x00040000;
        isSubject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isSubject = 20;</code>
       */
      public Builder clearIsSubject() {
        bitField0_ = (bitField0_ & ~0x00040000);
        isSubject_ = false;
        onChanged();
        return this;
      }

      private boolean isDirectObject_ ;
      /**
       * <code>optional bool isDirectObject = 21;</code>
       */
      public boolean hasIsDirectObject() {
        return ((bitField0_ & 0x00080000) == 0x00080000);
      }
      /**
       * <code>optional bool isDirectObject = 21;</code>
       */
      public boolean getIsDirectObject() {
        return isDirectObject_;
      }
      /**
       * <code>optional bool isDirectObject = 21;</code>
       */
      public Builder setIsDirectObject(boolean value) {
        bitField0_ |= 0x00080000;
        isDirectObject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isDirectObject = 21;</code>
       */
      public Builder clearIsDirectObject() {
        bitField0_ = (bitField0_ & ~0x00080000);
        isDirectObject_ = false;
        onChanged();
        return this;
      }

      private boolean isIndirectObject_ ;
      /**
       * <code>optional bool isIndirectObject = 22;</code>
       */
      public boolean hasIsIndirectObject() {
        return ((bitField0_ & 0x00100000) == 0x00100000);
      }
      /**
       * <code>optional bool isIndirectObject = 22;</code>
       */
      public boolean getIsIndirectObject() {
        return isIndirectObject_;
      }
      /**
       * <code>optional bool isIndirectObject = 22;</code>
       */
      public Builder setIsIndirectObject(boolean value) {
        bitField0_ |= 0x00100000;
        isIndirectObject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isIndirectObject = 22;</code>
       */
      public Builder clearIsIndirectObject() {
        bitField0_ = (bitField0_ & ~0x00100000);
        isIndirectObject_ = false;
        onChanged();
        return this;
      }

      private boolean isPrepositionObject_ ;
      /**
       * <code>optional bool isPrepositionObject = 23;</code>
       */
      public boolean hasIsPrepositionObject() {
        return ((bitField0_ & 0x00200000) == 0x00200000);
      }
      /**
       * <code>optional bool isPrepositionObject = 23;</code>
       */
      public boolean getIsPrepositionObject() {
        return isPrepositionObject_;
      }
      /**
       * <code>optional bool isPrepositionObject = 23;</code>
       */
      public Builder setIsPrepositionObject(boolean value) {
        bitField0_ |= 0x00200000;
        isPrepositionObject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isPrepositionObject = 23;</code>
       */
      public Builder clearIsPrepositionObject() {
        bitField0_ = (bitField0_ & ~0x00200000);
        isPrepositionObject_ = false;
        onChanged();
        return this;
      }

      private boolean hasTwin_ ;
      /**
       * <code>optional bool hasTwin = 24;</code>
       */
      public boolean hasHasTwin() {
        return ((bitField0_ & 0x00400000) == 0x00400000);
      }
      /**
       * <code>optional bool hasTwin = 24;</code>
       */
      public boolean getHasTwin() {
        return hasTwin_;
      }
      /**
       * <code>optional bool hasTwin = 24;</code>
       */
      public Builder setHasTwin(boolean value) {
        bitField0_ |= 0x00400000;
        hasTwin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasTwin = 24;</code>
       */
      public Builder clearHasTwin() {
        bitField0_ = (bitField0_ & ~0x00400000);
        hasTwin_ = false;
        onChanged();
        return this;
      }

      private boolean generic_ ;
      /**
       * <code>optional bool generic = 25;</code>
       */
      public boolean hasGeneric() {
        return ((bitField0_ & 0x00800000) == 0x00800000);
      }
      /**
       * <code>optional bool generic = 25;</code>
       */
      public boolean getGeneric() {
        return generic_;
      }
      /**
       * <code>optional bool generic = 25;</code>
       */
      public Builder setGeneric(boolean value) {
        bitField0_ |= 0x00800000;
        generic_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool generic = 25;</code>
       */
      public Builder clearGeneric() {
        bitField0_ = (bitField0_ & ~0x00800000);
        generic_ = false;
        onChanged();
        return this;
      }

      private boolean isSingleton_ ;
      /**
       * <code>optional bool isSingleton = 26;</code>
       */
      public boolean hasIsSingleton() {
        return ((bitField0_ & 0x01000000) == 0x01000000);
      }
      /**
       * <code>optional bool isSingleton = 26;</code>
       */
      public boolean getIsSingleton() {
        return isSingleton_;
      }
      /**
       * <code>optional bool isSingleton = 26;</code>
       */
      public Builder setIsSingleton(boolean value) {
        bitField0_ |= 0x01000000;
        isSingleton_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool isSingleton = 26;</code>
       */
      public Builder clearIsSingleton() {
        bitField0_ = (bitField0_ & ~0x01000000);
        isSingleton_ = false;
        onChanged();
        return this;
      }

      private boolean hasBasicDependency_ ;
      /**
       * <code>optional bool hasBasicDependency = 27;</code>
       */
      public boolean hasHasBasicDependency() {
        return ((bitField0_ & 0x02000000) == 0x02000000);
      }
      /**
       * <code>optional bool hasBasicDependency = 27;</code>
       */
      public boolean getHasBasicDependency() {
        return hasBasicDependency_;
      }
      /**
       * <code>optional bool hasBasicDependency = 27;</code>
       */
      public Builder setHasBasicDependency(boolean value) {
        bitField0_ |= 0x02000000;
        hasBasicDependency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasBasicDependency = 27;</code>
       */
      public Builder clearHasBasicDependency() {
        bitField0_ = (bitField0_ & ~0x02000000);
        hasBasicDependency_ = false;
        onChanged();
        return this;
      }

      private boolean hasCollapsedDependency_ ;
      /**
       * <code>optional bool hasCollapsedDependency = 28;</code>
       */
      public boolean hasHasCollapsedDependency() {
        return ((bitField0_ & 0x04000000) == 0x04000000);
      }
      /**
       * <code>optional bool hasCollapsedDependency = 28;</code>
       */
      public boolean getHasCollapsedDependency() {
        return hasCollapsedDependency_;
      }
      /**
       * <code>optional bool hasCollapsedDependency = 28;</code>
       */
      public Builder setHasCollapsedDependency(boolean value) {
        bitField0_ |= 0x04000000;
        hasCollapsedDependency_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasCollapsedDependency = 28;</code>
       */
      public Builder clearHasCollapsedDependency() {
        bitField0_ = (bitField0_ & ~0x04000000);
        hasCollapsedDependency_ = false;
        onChanged();
        return this;
      }

      private boolean hasContextParseTree_ ;
      /**
       * <code>optional bool hasContextParseTree = 29;</code>
       */
      public boolean hasHasContextParseTree() {
        return ((bitField0_ & 0x08000000) == 0x08000000);
      }
      /**
       * <code>optional bool hasContextParseTree = 29;</code>
       */
      public boolean getHasContextParseTree() {
        return hasContextParseTree_;
      }
      /**
       * <code>optional bool hasContextParseTree = 29;</code>
       */
      public Builder setHasContextParseTree(boolean value) {
        bitField0_ |= 0x08000000;
        hasContextParseTree_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool hasContextParseTree = 29;</code>
       */
      public Builder clearHasContextParseTree() {
        bitField0_ = (bitField0_ & ~0x08000000);
        hasContextParseTree_ = false;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord headIndexedWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> headIndexedWordBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public boolean hasHeadIndexedWord() {
        return ((bitField0_ & 0x10000000) == 0x10000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadIndexedWord() {
        if (headIndexedWordBuilder_ == null) {
          return headIndexedWord_;
        } else {
          return headIndexedWordBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public Builder setHeadIndexedWord(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (headIndexedWordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          headIndexedWord_ = value;
          onChanged();
        } else {
          headIndexedWordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public Builder setHeadIndexedWord(
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (headIndexedWordBuilder_ == null) {
          headIndexedWord_ = builderForValue.build();
          onChanged();
        } else {
          headIndexedWordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public Builder mergeHeadIndexedWord(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (headIndexedWordBuilder_ == null) {
          if (((bitField0_ & 0x10000000) == 0x10000000) &&
              headIndexedWord_ != edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance()) {
            headIndexedWord_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.newBuilder(headIndexedWord_).mergeFrom(value).buildPartial();
          } else {
            headIndexedWord_ = value;
          }
          onChanged();
        } else {
          headIndexedWordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x10000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public Builder clearHeadIndexedWord() {
        if (headIndexedWordBuilder_ == null) {
          headIndexedWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
          onChanged();
        } else {
          headIndexedWordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x10000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder getHeadIndexedWordBuilder() {
        bitField0_ |= 0x10000000;
        onChanged();
        return getHeadIndexedWordFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadIndexedWordOrBuilder() {
        if (headIndexedWordBuilder_ != null) {
          return headIndexedWordBuilder_.getMessageOrBuilder();
        } else {
          return headIndexedWord_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headIndexedWord = 30;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
          getHeadIndexedWordFieldBuilder() {
        if (headIndexedWordBuilder_ == null) {
          headIndexedWordBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder>(
                  getHeadIndexedWord(),
                  getParentForChildren(),
                  isClean());
          headIndexedWord_ = null;
        }
        return headIndexedWordBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord dependingVerb_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> dependingVerbBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public boolean hasDependingVerb() {
        return ((bitField0_ & 0x20000000) == 0x20000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getDependingVerb() {
        if (dependingVerbBuilder_ == null) {
          return dependingVerb_;
        } else {
          return dependingVerbBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public Builder setDependingVerb(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (dependingVerbBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          dependingVerb_ = value;
          onChanged();
        } else {
          dependingVerbBuilder_.setMessage(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public Builder setDependingVerb(
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (dependingVerbBuilder_ == null) {
          dependingVerb_ = builderForValue.build();
          onChanged();
        } else {
          dependingVerbBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public Builder mergeDependingVerb(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (dependingVerbBuilder_ == null) {
          if (((bitField0_ & 0x20000000) == 0x20000000) &&
              dependingVerb_ != edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance()) {
            dependingVerb_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.newBuilder(dependingVerb_).mergeFrom(value).buildPartial();
          } else {
            dependingVerb_ = value;
          }
          onChanged();
        } else {
          dependingVerbBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x20000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public Builder clearDependingVerb() {
        if (dependingVerbBuilder_ == null) {
          dependingVerb_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
          onChanged();
        } else {
          dependingVerbBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x20000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder getDependingVerbBuilder() {
        bitField0_ |= 0x20000000;
        onChanged();
        return getDependingVerbFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getDependingVerbOrBuilder() {
        if (dependingVerbBuilder_ != null) {
          return dependingVerbBuilder_.getMessageOrBuilder();
        } else {
          return dependingVerb_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord dependingVerb = 31;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
          getDependingVerbFieldBuilder() {
        if (dependingVerbBuilder_ == null) {
          dependingVerbBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder>(
                  getDependingVerb(),
                  getParentForChildren(),
                  isClean());
          dependingVerb_ = null;
        }
        return dependingVerbBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord headWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> headWordBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public boolean hasHeadWord() {
        return ((bitField0_ & 0x40000000) == 0x40000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getHeadWord() {
        if (headWordBuilder_ == null) {
          return headWord_;
        } else {
          return headWordBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public Builder setHeadWord(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (headWordBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          headWord_ = value;
          onChanged();
        } else {
          headWordBuilder_.setMessage(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public Builder setHeadWord(
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (headWordBuilder_ == null) {
          headWord_ = builderForValue.build();
          onChanged();
        } else {
          headWordBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public Builder mergeHeadWord(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (headWordBuilder_ == null) {
          if (((bitField0_ & 0x40000000) == 0x40000000) &&
              headWord_ != edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance()) {
            headWord_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.newBuilder(headWord_).mergeFrom(value).buildPartial();
          } else {
            headWord_ = value;
          }
          onChanged();
        } else {
          headWordBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x40000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public Builder clearHeadWord() {
        if (headWordBuilder_ == null) {
          headWord_ = edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
          onChanged();
        } else {
          headWordBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x40000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder getHeadWordBuilder() {
        bitField0_ |= 0x40000000;
        onChanged();
        return getHeadWordFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getHeadWordOrBuilder() {
        if (headWordBuilder_ != null) {
          return headWordBuilder_.getMessageOrBuilder();
        } else {
          return headWord_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.IndexedWord headWord = 32;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
          getHeadWordFieldBuilder() {
        if (headWordBuilder_ == null) {
          headWordBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder>(
                  getHeadWord(),
                  getParentForChildren(),
                  isClean());
          headWord_ = null;
        }
        return headWordBuilder_;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo speakerInfo_ = edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder> speakerInfoBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public boolean hasSpeakerInfo() {
        return ((bitField0_ & 0x80000000) == 0x80000000);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo getSpeakerInfo() {
        if (speakerInfoBuilder_ == null) {
          return speakerInfo_;
        } else {
          return speakerInfoBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public Builder setSpeakerInfo(edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo value) {
        if (speakerInfoBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          speakerInfo_ = value;
          onChanged();
        } else {
          speakerInfoBuilder_.setMessage(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public Builder setSpeakerInfo(
          edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder builderForValue) {
        if (speakerInfoBuilder_ == null) {
          speakerInfo_ = builderForValue.build();
          onChanged();
        } else {
          speakerInfoBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public Builder mergeSpeakerInfo(edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo value) {
        if (speakerInfoBuilder_ == null) {
          if (((bitField0_ & 0x80000000) == 0x80000000) &&
              speakerInfo_ != edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance()) {
            speakerInfo_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.newBuilder(speakerInfo_).mergeFrom(value).buildPartial();
          } else {
            speakerInfo_ = value;
          }
          onChanged();
        } else {
          speakerInfoBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x80000000;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public Builder clearSpeakerInfo() {
        if (speakerInfoBuilder_ == null) {
          speakerInfo_ = edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance();
          onChanged();
        } else {
          speakerInfoBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x80000000);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder getSpeakerInfoBuilder() {
        bitField0_ |= 0x80000000;
        onChanged();
        return getSpeakerInfoFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder getSpeakerInfoOrBuilder() {
        if (speakerInfoBuilder_ != null) {
          return speakerInfoBuilder_.getMessageOrBuilder();
        } else {
          return speakerInfo_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.SpeakerInfo speakerInfo = 33;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder> 
          getSpeakerInfoFieldBuilder() {
        if (speakerInfoBuilder_ == null) {
          speakerInfoBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder>(
                  getSpeakerInfo(),
                  getParentForChildren(),
                  isClean());
          speakerInfo_ = null;
        }
        return speakerInfoBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> sentenceWords_ =
        java.util.Collections.emptyList();
      private void ensureSentenceWordsIsMutable() {
        if (!((bitField1_ & 0x00000001) == 0x00000001)) {
          sentenceWords_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord>(sentenceWords_);
          bitField1_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> sentenceWordsBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> getSentenceWordsList() {
        if (sentenceWordsBuilder_ == null) {
          return java.util.Collections.unmodifiableList(sentenceWords_);
        } else {
          return sentenceWordsBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public int getSentenceWordsCount() {
        if (sentenceWordsBuilder_ == null) {
          return sentenceWords_.size();
        } else {
          return sentenceWordsBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getSentenceWords(int index) {
        if (sentenceWordsBuilder_ == null) {
          return sentenceWords_.get(index);
        } else {
          return sentenceWordsBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder setSentenceWords(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (sentenceWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceWordsIsMutable();
          sentenceWords_.set(index, value);
          onChanged();
        } else {
          sentenceWordsBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder setSentenceWords(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (sentenceWordsBuilder_ == null) {
          ensureSentenceWordsIsMutable();
          sentenceWords_.set(index, builderForValue.build());
          onChanged();
        } else {
          sentenceWordsBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder addSentenceWords(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (sentenceWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceWordsIsMutable();
          sentenceWords_.add(value);
          onChanged();
        } else {
          sentenceWordsBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder addSentenceWords(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (sentenceWordsBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSentenceWordsIsMutable();
          sentenceWords_.add(index, value);
          onChanged();
        } else {
          sentenceWordsBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder addSentenceWords(
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (sentenceWordsBuilder_ == null) {
          ensureSentenceWordsIsMutable();
          sentenceWords_.add(builderForValue.build());
          onChanged();
        } else {
          sentenceWordsBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder addSentenceWords(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (sentenceWordsBuilder_ == null) {
          ensureSentenceWordsIsMutable();
          sentenceWords_.add(index, builderForValue.build());
          onChanged();
        } else {
          sentenceWordsBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder addAllSentenceWords(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> values) {
        if (sentenceWordsBuilder_ == null) {
          ensureSentenceWordsIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, sentenceWords_);
          onChanged();
        } else {
          sentenceWordsBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder clearSentenceWords() {
        if (sentenceWordsBuilder_ == null) {
          sentenceWords_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000001);
          onChanged();
        } else {
          sentenceWordsBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public Builder removeSentenceWords(int index) {
        if (sentenceWordsBuilder_ == null) {
          ensureSentenceWordsIsMutable();
          sentenceWords_.remove(index);
          onChanged();
        } else {
          sentenceWordsBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder getSentenceWordsBuilder(
          int index) {
        return getSentenceWordsFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getSentenceWordsOrBuilder(
          int index) {
        if (sentenceWordsBuilder_ == null) {
          return sentenceWords_.get(index);  } else {
          return sentenceWordsBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
           getSentenceWordsOrBuilderList() {
        if (sentenceWordsBuilder_ != null) {
          return sentenceWordsBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(sentenceWords_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder addSentenceWordsBuilder() {
        return getSentenceWordsFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder addSentenceWordsBuilder(
          int index) {
        return getSentenceWordsFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord sentenceWords = 50;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder> 
           getSentenceWordsBuilderList() {
        return getSentenceWordsFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
          getSentenceWordsFieldBuilder() {
        if (sentenceWordsBuilder_ == null) {
          sentenceWordsBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder>(
                  sentenceWords_,
                  ((bitField1_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          sentenceWords_ = null;
        }
        return sentenceWordsBuilder_;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> originalSpan_ =
        java.util.Collections.emptyList();
      private void ensureOriginalSpanIsMutable() {
        if (!((bitField1_ & 0x00000002) == 0x00000002)) {
          originalSpan_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord>(originalSpan_);
          bitField1_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> originalSpanBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> getOriginalSpanList() {
        if (originalSpanBuilder_ == null) {
          return java.util.Collections.unmodifiableList(originalSpan_);
        } else {
          return originalSpanBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public int getOriginalSpanCount() {
        if (originalSpanBuilder_ == null) {
          return originalSpan_.size();
        } else {
          return originalSpanBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getOriginalSpan(int index) {
        if (originalSpanBuilder_ == null) {
          return originalSpan_.get(index);
        } else {
          return originalSpanBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder setOriginalSpan(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (originalSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalSpanIsMutable();
          originalSpan_.set(index, value);
          onChanged();
        } else {
          originalSpanBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder setOriginalSpan(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (originalSpanBuilder_ == null) {
          ensureOriginalSpanIsMutable();
          originalSpan_.set(index, builderForValue.build());
          onChanged();
        } else {
          originalSpanBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder addOriginalSpan(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (originalSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalSpanIsMutable();
          originalSpan_.add(value);
          onChanged();
        } else {
          originalSpanBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder addOriginalSpan(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord value) {
        if (originalSpanBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureOriginalSpanIsMutable();
          originalSpan_.add(index, value);
          onChanged();
        } else {
          originalSpanBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder addOriginalSpan(
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (originalSpanBuilder_ == null) {
          ensureOriginalSpanIsMutable();
          originalSpan_.add(builderForValue.build());
          onChanged();
        } else {
          originalSpanBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder addOriginalSpan(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder builderForValue) {
        if (originalSpanBuilder_ == null) {
          ensureOriginalSpanIsMutable();
          originalSpan_.add(index, builderForValue.build());
          onChanged();
        } else {
          originalSpanBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder addAllOriginalSpan(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord> values) {
        if (originalSpanBuilder_ == null) {
          ensureOriginalSpanIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, originalSpan_);
          onChanged();
        } else {
          originalSpanBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder clearOriginalSpan() {
        if (originalSpanBuilder_ == null) {
          originalSpan_ = java.util.Collections.emptyList();
          bitField1_ = (bitField1_ & ~0x00000002);
          onChanged();
        } else {
          originalSpanBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public Builder removeOriginalSpan(int index) {
        if (originalSpanBuilder_ == null) {
          ensureOriginalSpanIsMutable();
          originalSpan_.remove(index);
          onChanged();
        } else {
          originalSpanBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder getOriginalSpanBuilder(
          int index) {
        return getOriginalSpanFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder getOriginalSpanOrBuilder(
          int index) {
        if (originalSpanBuilder_ == null) {
          return originalSpan_.get(index);  } else {
          return originalSpanBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
           getOriginalSpanOrBuilderList() {
        if (originalSpanBuilder_ != null) {
          return originalSpanBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(originalSpan_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder addOriginalSpanBuilder() {
        return getOriginalSpanFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder addOriginalSpanBuilder(
          int index) {
        return getOriginalSpanFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.IndexedWord originalSpan = 51;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder> 
           getOriginalSpanBuilderList() {
        return getOriginalSpanFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder> 
          getOriginalSpanFieldBuilder() {
        if (originalSpanBuilder_ == null) {
          originalSpanBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder>(
                  originalSpan_,
                  ((bitField1_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          originalSpan_ = null;
        }
        return originalSpanBuilder_;
      }

      private com.google.protobuf.LazyStringList dependents_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureDependentsIsMutable() {
        if (!((bitField1_ & 0x00000004) == 0x00000004)) {
          dependents_ = new com.google.protobuf.LazyStringArrayList(dependents_);
          bitField1_ |= 0x00000004;
         }
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getDependentsList() {
        return dependents_.getUnmodifiableView();
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public int getDependentsCount() {
        return dependents_.size();
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public java.lang.String getDependents(int index) {
        return dependents_.get(index);
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public com.google.protobuf.ByteString
          getDependentsBytes(int index) {
        return dependents_.getByteString(index);
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public Builder setDependents(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDependentsIsMutable();
        dependents_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public Builder addDependents(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDependentsIsMutable();
        dependents_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public Builder addAllDependents(
          java.lang.Iterable<java.lang.String> values) {
        ensureDependentsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, dependents_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public Builder clearDependents() {
        dependents_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000004);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string dependents = 52;</code>
       */
      public Builder addDependentsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureDependentsIsMutable();
        dependents_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList preprocessedTerms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensurePreprocessedTermsIsMutable() {
        if (!((bitField1_ & 0x00000008) == 0x00000008)) {
          preprocessedTerms_ = new com.google.protobuf.LazyStringArrayList(preprocessedTerms_);
          bitField1_ |= 0x00000008;
         }
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getPreprocessedTermsList() {
        return preprocessedTerms_.getUnmodifiableView();
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public int getPreprocessedTermsCount() {
        return preprocessedTerms_.size();
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public java.lang.String getPreprocessedTerms(int index) {
        return preprocessedTerms_.get(index);
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public com.google.protobuf.ByteString
          getPreprocessedTermsBytes(int index) {
        return preprocessedTerms_.getByteString(index);
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public Builder setPreprocessedTerms(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreprocessedTermsIsMutable();
        preprocessedTerms_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public Builder addPreprocessedTerms(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreprocessedTermsIsMutable();
        preprocessedTerms_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public Builder addAllPreprocessedTerms(
          java.lang.Iterable<java.lang.String> values) {
        ensurePreprocessedTermsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, preprocessedTerms_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public Builder clearPreprocessedTerms() {
        preprocessedTerms_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField1_ = (bitField1_ & ~0x00000008);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string preprocessedTerms = 53;</code>
       */
      public Builder addPreprocessedTermsBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensurePreprocessedTermsIsMutable();
        preprocessedTerms_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> appositions_ = java.util.Collections.emptyList();
      private void ensureAppositionsIsMutable() {
        if (!((bitField1_ & 0x00000010) == 0x00000010)) {
          appositions_ = new java.util.ArrayList<java.lang.Integer>(appositions_);
          bitField1_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public java.util.List<java.lang.Integer>
          getAppositionsList() {
        return java.util.Collections.unmodifiableList(appositions_);
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public int getAppositionsCount() {
        return appositions_.size();
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public int getAppositions(int index) {
        return appositions_.get(index);
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public Builder setAppositions(
          int index, int value) {
        ensureAppositionsIsMutable();
        appositions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public Builder addAppositions(int value) {
        ensureAppositionsIsMutable();
        appositions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public Builder addAllAppositions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureAppositionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, appositions_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 appositions = 54;</code>
       */
      public Builder clearAppositions() {
        appositions_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> predicateNominatives_ = java.util.Collections.emptyList();
      private void ensurePredicateNominativesIsMutable() {
        if (!((bitField1_ & 0x00000020) == 0x00000020)) {
          predicateNominatives_ = new java.util.ArrayList<java.lang.Integer>(predicateNominatives_);
          bitField1_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public java.util.List<java.lang.Integer>
          getPredicateNominativesList() {
        return java.util.Collections.unmodifiableList(predicateNominatives_);
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public int getPredicateNominativesCount() {
        return predicateNominatives_.size();
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public int getPredicateNominatives(int index) {
        return predicateNominatives_.get(index);
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public Builder setPredicateNominatives(
          int index, int value) {
        ensurePredicateNominativesIsMutable();
        predicateNominatives_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public Builder addPredicateNominatives(int value) {
        ensurePredicateNominativesIsMutable();
        predicateNominatives_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public Builder addAllPredicateNominatives(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensurePredicateNominativesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, predicateNominatives_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 predicateNominatives = 55;</code>
       */
      public Builder clearPredicateNominatives() {
        predicateNominatives_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> relativePronouns_ = java.util.Collections.emptyList();
      private void ensureRelativePronounsIsMutable() {
        if (!((bitField1_ & 0x00000040) == 0x00000040)) {
          relativePronouns_ = new java.util.ArrayList<java.lang.Integer>(relativePronouns_);
          bitField1_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public java.util.List<java.lang.Integer>
          getRelativePronounsList() {
        return java.util.Collections.unmodifiableList(relativePronouns_);
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public int getRelativePronounsCount() {
        return relativePronouns_.size();
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public int getRelativePronouns(int index) {
        return relativePronouns_.get(index);
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public Builder setRelativePronouns(
          int index, int value) {
        ensureRelativePronounsIsMutable();
        relativePronouns_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public Builder addRelativePronouns(int value) {
        ensureRelativePronounsIsMutable();
        relativePronouns_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public Builder addAllRelativePronouns(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRelativePronounsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relativePronouns_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 relativePronouns = 56;</code>
       */
      public Builder clearRelativePronouns() {
        relativePronouns_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000040);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> listMembers_ = java.util.Collections.emptyList();
      private void ensureListMembersIsMutable() {
        if (!((bitField1_ & 0x00000080) == 0x00000080)) {
          listMembers_ = new java.util.ArrayList<java.lang.Integer>(listMembers_);
          bitField1_ |= 0x00000080;
         }
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public java.util.List<java.lang.Integer>
          getListMembersList() {
        return java.util.Collections.unmodifiableList(listMembers_);
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public int getListMembersCount() {
        return listMembers_.size();
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public int getListMembers(int index) {
        return listMembers_.get(index);
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public Builder setListMembers(
          int index, int value) {
        ensureListMembersIsMutable();
        listMembers_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public Builder addListMembers(int value) {
        ensureListMembersIsMutable();
        listMembers_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public Builder addAllListMembers(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureListMembersIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, listMembers_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 listMembers = 57;</code>
       */
      public Builder clearListMembers() {
        listMembers_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000080);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> belongToLists_ = java.util.Collections.emptyList();
      private void ensureBelongToListsIsMutable() {
        if (!((bitField1_ & 0x00000100) == 0x00000100)) {
          belongToLists_ = new java.util.ArrayList<java.lang.Integer>(belongToLists_);
          bitField1_ |= 0x00000100;
         }
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public java.util.List<java.lang.Integer>
          getBelongToListsList() {
        return java.util.Collections.unmodifiableList(belongToLists_);
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public int getBelongToListsCount() {
        return belongToLists_.size();
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public int getBelongToLists(int index) {
        return belongToLists_.get(index);
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public Builder setBelongToLists(
          int index, int value) {
        ensureBelongToListsIsMutable();
        belongToLists_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public Builder addBelongToLists(int value) {
        ensureBelongToListsIsMutable();
        belongToLists_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public Builder addAllBelongToLists(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureBelongToListsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, belongToLists_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 belongToLists = 58;</code>
       */
      public Builder clearBelongToLists() {
        belongToLists_ = java.util.Collections.emptyList();
        bitField1_ = (bitField1_ & ~0x00000100);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Mention)
    }

    static {
      defaultInstance = new Mention(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Mention)
  }

  public interface IndexedWordOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.IndexedWord)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 sentenceNum = 1;</code>
     */
    boolean hasSentenceNum();
    /**
     * <code>optional uint32 sentenceNum = 1;</code>
     */
    int getSentenceNum();

    /**
     * <code>optional uint32 tokenIndex = 2;</code>
     */
    boolean hasTokenIndex();
    /**
     * <code>optional uint32 tokenIndex = 2;</code>
     */
    int getTokenIndex();

    /**
     * <code>optional uint32 docID = 3;</code>
     */
    boolean hasDocID();
    /**
     * <code>optional uint32 docID = 3;</code>
     */
    int getDocID();

    /**
     * <code>optional uint32 copyCount = 4;</code>
     */
    boolean hasCopyCount();
    /**
     * <code>optional uint32 copyCount = 4;</code>
     */
    int getCopyCount();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.IndexedWord}
   */
  public static final class IndexedWord extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.IndexedWord)
      IndexedWordOrBuilder {
    // Use IndexedWord.newBuilder() to construct.
    private IndexedWord(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private IndexedWord(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final IndexedWord defaultInstance;
    public static IndexedWord getDefaultInstance() {
      return defaultInstance;
    }

    public IndexedWord getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private IndexedWord(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sentenceNum_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tokenIndex_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              docID_ = input.readUInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              copyCount_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_IndexedWord_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.class, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder.class);
    }

    public static com.google.protobuf.Parser<IndexedWord> PARSER =
        new com.google.protobuf.AbstractParser<IndexedWord>() {
      public IndexedWord parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new IndexedWord(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<IndexedWord> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENTENCENUM_FIELD_NUMBER = 1;
    private int sentenceNum_;
    /**
     * <code>optional uint32 sentenceNum = 1;</code>
     */
    public boolean hasSentenceNum() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 sentenceNum = 1;</code>
     */
    public int getSentenceNum() {
      return sentenceNum_;
    }

    public static final int TOKENINDEX_FIELD_NUMBER = 2;
    private int tokenIndex_;
    /**
     * <code>optional uint32 tokenIndex = 2;</code>
     */
    public boolean hasTokenIndex() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 tokenIndex = 2;</code>
     */
    public int getTokenIndex() {
      return tokenIndex_;
    }

    public static final int DOCID_FIELD_NUMBER = 3;
    private int docID_;
    /**
     * <code>optional uint32 docID = 3;</code>
     */
    public boolean hasDocID() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 docID = 3;</code>
     */
    public int getDocID() {
      return docID_;
    }

    public static final int COPYCOUNT_FIELD_NUMBER = 4;
    private int copyCount_;
    /**
     * <code>optional uint32 copyCount = 4;</code>
     */
    public boolean hasCopyCount() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 copyCount = 4;</code>
     */
    public int getCopyCount() {
      return copyCount_;
    }

    private void initFields() {
      sentenceNum_ = 0;
      tokenIndex_ = 0;
      docID_ = 0;
      copyCount_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sentenceNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tokenIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, docID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(4, copyCount_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sentenceNum_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tokenIndex_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, docID_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(4, copyCount_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.IndexedWord}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.IndexedWord)
        edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWordOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_IndexedWord_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.class, edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sentenceNum_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tokenIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        docID_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        copyCount_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord result = new edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sentenceNum_ = sentenceNum_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tokenIndex_ = tokenIndex_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.docID_ = docID_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.copyCount_ = copyCount_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord.getDefaultInstance()) return this;
        if (other.hasSentenceNum()) {
          setSentenceNum(other.getSentenceNum());
        }
        if (other.hasTokenIndex()) {
          setTokenIndex(other.getTokenIndex());
        }
        if (other.hasDocID()) {
          setDocID(other.getDocID());
        }
        if (other.hasCopyCount()) {
          setCopyCount(other.getCopyCount());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.IndexedWord) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sentenceNum_ ;
      /**
       * <code>optional uint32 sentenceNum = 1;</code>
       */
      public boolean hasSentenceNum() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 sentenceNum = 1;</code>
       */
      public int getSentenceNum() {
        return sentenceNum_;
      }
      /**
       * <code>optional uint32 sentenceNum = 1;</code>
       */
      public Builder setSentenceNum(int value) {
        bitField0_ |= 0x00000001;
        sentenceNum_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentenceNum = 1;</code>
       */
      public Builder clearSentenceNum() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sentenceNum_ = 0;
        onChanged();
        return this;
      }

      private int tokenIndex_ ;
      /**
       * <code>optional uint32 tokenIndex = 2;</code>
       */
      public boolean hasTokenIndex() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 tokenIndex = 2;</code>
       */
      public int getTokenIndex() {
        return tokenIndex_;
      }
      /**
       * <code>optional uint32 tokenIndex = 2;</code>
       */
      public Builder setTokenIndex(int value) {
        bitField0_ |= 0x00000002;
        tokenIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 tokenIndex = 2;</code>
       */
      public Builder clearTokenIndex() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tokenIndex_ = 0;
        onChanged();
        return this;
      }

      private int docID_ ;
      /**
       * <code>optional uint32 docID = 3;</code>
       */
      public boolean hasDocID() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional uint32 docID = 3;</code>
       */
      public int getDocID() {
        return docID_;
      }
      /**
       * <code>optional uint32 docID = 3;</code>
       */
      public Builder setDocID(int value) {
        bitField0_ |= 0x00000004;
        docID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 docID = 3;</code>
       */
      public Builder clearDocID() {
        bitField0_ = (bitField0_ & ~0x00000004);
        docID_ = 0;
        onChanged();
        return this;
      }

      private int copyCount_ ;
      /**
       * <code>optional uint32 copyCount = 4;</code>
       */
      public boolean hasCopyCount() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional uint32 copyCount = 4;</code>
       */
      public int getCopyCount() {
        return copyCount_;
      }
      /**
       * <code>optional uint32 copyCount = 4;</code>
       */
      public Builder setCopyCount(int value) {
        bitField0_ |= 0x00000008;
        copyCount_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 copyCount = 4;</code>
       */
      public Builder clearCopyCount() {
        bitField0_ = (bitField0_ & ~0x00000008);
        copyCount_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.IndexedWord)
    }

    static {
      defaultInstance = new IndexedWord(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.IndexedWord)
  }

  public interface SpeakerInfoOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.SpeakerInfo)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string speakerName = 1;</code>
     */
    boolean hasSpeakerName();
    /**
     * <code>optional string speakerName = 1;</code>
     */
    java.lang.String getSpeakerName();
    /**
     * <code>optional string speakerName = 1;</code>
     */
    com.google.protobuf.ByteString
        getSpeakerNameBytes();

    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    java.util.List<java.lang.Integer> getMentionsList();
    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    int getMentionsCount();
    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    int getMentions(int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.SpeakerInfo}
   */
  public static final class SpeakerInfo extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.SpeakerInfo)
      SpeakerInfoOrBuilder {
    // Use SpeakerInfo.newBuilder() to construct.
    private SpeakerInfo(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SpeakerInfo(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SpeakerInfo defaultInstance;
    public static SpeakerInfo getDefaultInstance() {
      return defaultInstance;
    }

    public SpeakerInfo getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SpeakerInfo(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              speakerName_ = bs;
              break;
            }
            case 16: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                mentions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              mentions_.add(input.readInt32());
              break;
            }
            case 18: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                mentions_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000002;
              }
              while (input.getBytesUntilLimit() > 0) {
                mentions_.add(input.readInt32());
              }
              input.popLimit(limit);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          mentions_ = java.util.Collections.unmodifiableList(mentions_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.class, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder.class);
    }

    public static com.google.protobuf.Parser<SpeakerInfo> PARSER =
        new com.google.protobuf.AbstractParser<SpeakerInfo>() {
      public SpeakerInfo parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SpeakerInfo(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SpeakerInfo> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SPEAKERNAME_FIELD_NUMBER = 1;
    private java.lang.Object speakerName_;
    /**
     * <code>optional string speakerName = 1;</code>
     */
    public boolean hasSpeakerName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string speakerName = 1;</code>
     */
    public java.lang.String getSpeakerName() {
      java.lang.Object ref = speakerName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          speakerName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string speakerName = 1;</code>
     */
    public com.google.protobuf.ByteString
        getSpeakerNameBytes() {
      java.lang.Object ref = speakerName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        speakerName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int MENTIONS_FIELD_NUMBER = 2;
    private java.util.List<java.lang.Integer> mentions_;
    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    public java.util.List<java.lang.Integer>
        getMentionsList() {
      return mentions_;
    }
    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    public int getMentionsCount() {
      return mentions_.size();
    }
    /**
     * <code>repeated int32 mentions = 2;</code>
     */
    public int getMentions(int index) {
      return mentions_.get(index);
    }

    private void initFields() {
      speakerName_ = "";
      mentions_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSpeakerNameBytes());
      }
      for (int i = 0; i < mentions_.size(); i++) {
        output.writeInt32(2, mentions_.get(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSpeakerNameBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < mentions_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeInt32SizeNoTag(mentions_.get(i));
        }
        size += dataSize;
        size += 1 * getMentionsList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.SpeakerInfo}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.SpeakerInfo)
        edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfoOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.class, edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        speakerName_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        mentions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo result = new edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.speakerName_ = speakerName_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          mentions_ = java.util.Collections.unmodifiableList(mentions_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.mentions_ = mentions_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo.getDefaultInstance()) return this;
        if (other.hasSpeakerName()) {
          bitField0_ |= 0x00000001;
          speakerName_ = other.speakerName_;
          onChanged();
        }
        if (!other.mentions_.isEmpty()) {
          if (mentions_.isEmpty()) {
            mentions_ = other.mentions_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureMentionsIsMutable();
            mentions_.addAll(other.mentions_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.SpeakerInfo) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object speakerName_ = "";
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public boolean hasSpeakerName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public java.lang.String getSpeakerName() {
        java.lang.Object ref = speakerName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            speakerName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public com.google.protobuf.ByteString
          getSpeakerNameBytes() {
        java.lang.Object ref = speakerName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          speakerName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public Builder setSpeakerName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        speakerName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public Builder clearSpeakerName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        speakerName_ = getDefaultInstance().getSpeakerName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string speakerName = 1;</code>
       */
      public Builder setSpeakerNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        speakerName_ = value;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> mentions_ = java.util.Collections.emptyList();
      private void ensureMentionsIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          mentions_ = new java.util.ArrayList<java.lang.Integer>(mentions_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public java.util.List<java.lang.Integer>
          getMentionsList() {
        return java.util.Collections.unmodifiableList(mentions_);
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public int getMentionsCount() {
        return mentions_.size();
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public int getMentions(int index) {
        return mentions_.get(index);
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public Builder setMentions(
          int index, int value) {
        ensureMentionsIsMutable();
        mentions_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public Builder addMentions(int value) {
        ensureMentionsIsMutable();
        mentions_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public Builder addAllMentions(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureMentionsIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, mentions_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated int32 mentions = 2;</code>
       */
      public Builder clearMentions() {
        mentions_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.SpeakerInfo)
    }

    static {
      defaultInstance = new SpeakerInfo(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.SpeakerInfo)
  }

  public interface SpanOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Span)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required uint32 begin = 1;</code>
     */
    boolean hasBegin();
    /**
     * <code>required uint32 begin = 1;</code>
     */
    int getBegin();

    /**
     * <code>required uint32 end = 2;</code>
     */
    boolean hasEnd();
    /**
     * <code>required uint32 end = 2;</code>
     */
    int getEnd();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Span}
   *
   * <pre>
   * A Span of text
   * </pre>
   */
  public static final class Span extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Span)
      SpanOrBuilder {
    // Use Span.newBuilder() to construct.
    private Span(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Span(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Span defaultInstance;
    public static Span getDefaultInstance() {
      return defaultInstance;
    }

    public Span getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Span(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              begin_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              end_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Span_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Span_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Span.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder.class);
    }

    public static com.google.protobuf.Parser<Span> PARSER =
        new com.google.protobuf.AbstractParser<Span>() {
      public Span parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Span(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Span> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int BEGIN_FIELD_NUMBER = 1;
    private int begin_;
    /**
     * <code>required uint32 begin = 1;</code>
     */
    public boolean hasBegin() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required uint32 begin = 1;</code>
     */
    public int getBegin() {
      return begin_;
    }

    public static final int END_FIELD_NUMBER = 2;
    private int end_;
    /**
     * <code>required uint32 end = 2;</code>
     */
    public boolean hasEnd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 end = 2;</code>
     */
    public int getEnd() {
      return end_;
    }

    private void initFields() {
      begin_ = 0;
      end_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, end_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, begin_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, end_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Span parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Span prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Span}
     *
     * <pre>
     * A Span of text
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Span)
        edu.stanford.nlp.pipeline.CoreNLPProtos.SpanOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Span_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Span_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Span.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Span.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Span.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        begin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        end_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Span_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Span result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Span buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Span result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Span(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.begin_ = begin_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.end_ = end_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Span) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Span)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Span other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Span.getDefaultInstance()) return this;
        if (other.hasBegin()) {
          setBegin(other.getBegin());
        }
        if (other.hasEnd()) {
          setEnd(other.getEnd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasBegin()) {
          
          return false;
        }
        if (!hasEnd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Span parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Span) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int begin_ ;
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public boolean hasBegin() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public int getBegin() {
        return begin_;
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public Builder setBegin(int value) {
        bitField0_ |= 0x00000001;
        begin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 begin = 1;</code>
       */
      public Builder clearBegin() {
        bitField0_ = (bitField0_ & ~0x00000001);
        begin_ = 0;
        onChanged();
        return this;
      }

      private int end_ ;
      /**
       * <code>required uint32 end = 2;</code>
       */
      public boolean hasEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public int getEnd() {
        return end_;
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public Builder setEnd(int value) {
        bitField0_ |= 0x00000002;
        end_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 end = 2;</code>
       */
      public Builder clearEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        end_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Span)
    }

    static {
      defaultInstance = new Span(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Span)
  }

  public interface TimexOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Timex)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string value = 1;</code>
     */
    boolean hasValue();
    /**
     * <code>optional string value = 1;</code>
     */
    java.lang.String getValue();
    /**
     * <code>optional string value = 1;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes();

    /**
     * <code>optional string altValue = 2;</code>
     */
    boolean hasAltValue();
    /**
     * <code>optional string altValue = 2;</code>
     */
    java.lang.String getAltValue();
    /**
     * <code>optional string altValue = 2;</code>
     */
    com.google.protobuf.ByteString
        getAltValueBytes();

    /**
     * <code>optional string text = 3;</code>
     */
    boolean hasText();
    /**
     * <code>optional string text = 3;</code>
     */
    java.lang.String getText();
    /**
     * <code>optional string text = 3;</code>
     */
    com.google.protobuf.ByteString
        getTextBytes();

    /**
     * <code>optional string type = 4;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 4;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 4;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional string tid = 5;</code>
     */
    boolean hasTid();
    /**
     * <code>optional string tid = 5;</code>
     */
    java.lang.String getTid();
    /**
     * <code>optional string tid = 5;</code>
     */
    com.google.protobuf.ByteString
        getTidBytes();

    /**
     * <code>optional uint32 beginPoint = 6;</code>
     */
    boolean hasBeginPoint();
    /**
     * <code>optional uint32 beginPoint = 6;</code>
     */
    int getBeginPoint();

    /**
     * <code>optional uint32 endPoint = 7;</code>
     */
    boolean hasEndPoint();
    /**
     * <code>optional uint32 endPoint = 7;</code>
     */
    int getEndPoint();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Timex}
   *
   * <pre>
   * A Timex object, representing a temporal expression (TIMe EXpression)
   * These fields are not *really* optional. CoreNLP will crash without them.
   * </pre>
   */
  public static final class Timex extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Timex)
      TimexOrBuilder {
    // Use Timex.newBuilder() to construct.
    private Timex(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Timex(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Timex defaultInstance;
    public static Timex getDefaultInstance() {
      return defaultInstance;
    }

    public Timex getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Timex(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              value_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              altValue_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              text_ = bs;
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              type_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              tid_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              beginPoint_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              endPoint_ = input.readUInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Timex_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Timex_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder.class);
    }

    public static com.google.protobuf.Parser<Timex> PARSER =
        new com.google.protobuf.AbstractParser<Timex>() {
      public Timex parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Timex(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Timex> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int VALUE_FIELD_NUMBER = 1;
    private java.lang.Object value_;
    /**
     * <code>optional string value = 1;</code>
     */
    public boolean hasValue() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string value = 1;</code>
     */
    public java.lang.String getValue() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          value_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string value = 1;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes() {
      java.lang.Object ref = value_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        value_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ALTVALUE_FIELD_NUMBER = 2;
    private java.lang.Object altValue_;
    /**
     * <code>optional string altValue = 2;</code>
     */
    public boolean hasAltValue() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string altValue = 2;</code>
     */
    public java.lang.String getAltValue() {
      java.lang.Object ref = altValue_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          altValue_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string altValue = 2;</code>
     */
    public com.google.protobuf.ByteString
        getAltValueBytes() {
      java.lang.Object ref = altValue_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        altValue_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TEXT_FIELD_NUMBER = 3;
    private java.lang.Object text_;
    /**
     * <code>optional string text = 3;</code>
     */
    public boolean hasText() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string text = 3;</code>
     */
    public java.lang.String getText() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          text_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string text = 3;</code>
     */
    public com.google.protobuf.ByteString
        getTextBytes() {
      java.lang.Object ref = text_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        text_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private java.lang.Object type_;
    /**
     * <code>optional string type = 4;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TID_FIELD_NUMBER = 5;
    private java.lang.Object tid_;
    /**
     * <code>optional string tid = 5;</code>
     */
    public boolean hasTid() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string tid = 5;</code>
     */
    public java.lang.String getTid() {
      java.lang.Object ref = tid_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          tid_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string tid = 5;</code>
     */
    public com.google.protobuf.ByteString
        getTidBytes() {
      java.lang.Object ref = tid_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        tid_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int BEGINPOINT_FIELD_NUMBER = 6;
    private int beginPoint_;
    /**
     * <code>optional uint32 beginPoint = 6;</code>
     */
    public boolean hasBeginPoint() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional uint32 beginPoint = 6;</code>
     */
    public int getBeginPoint() {
      return beginPoint_;
    }

    public static final int ENDPOINT_FIELD_NUMBER = 7;
    private int endPoint_;
    /**
     * <code>optional uint32 endPoint = 7;</code>
     */
    public boolean hasEndPoint() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional uint32 endPoint = 7;</code>
     */
    public int getEndPoint() {
      return endPoint_;
    }

    private void initFields() {
      value_ = "";
      altValue_ = "";
      text_ = "";
      type_ = "";
      tid_ = "";
      beginPoint_ = 0;
      endPoint_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getAltValueBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getTidBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeUInt32(6, beginPoint_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeUInt32(7, endPoint_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getValueBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getAltValueBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getTextBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getTidBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, beginPoint_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, endPoint_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Timex}
     *
     * <pre>
     * A Timex object, representing a temporal expression (TIMe EXpression)
     * These fields are not *really* optional. CoreNLP will crash without them.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Timex)
        edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Timex_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Timex_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        value_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        altValue_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        text_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        tid_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        beginPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        endPoint_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Timex_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Timex result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Timex result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Timex(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.value_ = value_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.altValue_ = altValue_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.text_ = text_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.tid_ = tid_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.beginPoint_ = beginPoint_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.endPoint_ = endPoint_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Timex) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Timex)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance()) return this;
        if (other.hasValue()) {
          bitField0_ |= 0x00000001;
          value_ = other.value_;
          onChanged();
        }
        if (other.hasAltValue()) {
          bitField0_ |= 0x00000002;
          altValue_ = other.altValue_;
          onChanged();
        }
        if (other.hasText()) {
          bitField0_ |= 0x00000004;
          text_ = other.text_;
          onChanged();
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000008;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasTid()) {
          bitField0_ |= 0x00000010;
          tid_ = other.tid_;
          onChanged();
        }
        if (other.hasBeginPoint()) {
          setBeginPoint(other.getBeginPoint());
        }
        if (other.hasEndPoint()) {
          setEndPoint(other.getEndPoint());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Timex parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Timex) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object value_ = "";
      /**
       * <code>optional string value = 1;</code>
       */
      public boolean hasValue() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public java.lang.String getValue() {
        java.lang.Object ref = value_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            value_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes() {
        java.lang.Object ref = value_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          value_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder setValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder clearValue() {
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = getDefaultInstance().getValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string value = 1;</code>
       */
      public Builder setValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        value_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object altValue_ = "";
      /**
       * <code>optional string altValue = 2;</code>
       */
      public boolean hasAltValue() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string altValue = 2;</code>
       */
      public java.lang.String getAltValue() {
        java.lang.Object ref = altValue_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            altValue_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string altValue = 2;</code>
       */
      public com.google.protobuf.ByteString
          getAltValueBytes() {
        java.lang.Object ref = altValue_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          altValue_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string altValue = 2;</code>
       */
      public Builder setAltValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        altValue_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string altValue = 2;</code>
       */
      public Builder clearAltValue() {
        bitField0_ = (bitField0_ & ~0x00000002);
        altValue_ = getDefaultInstance().getAltValue();
        onChanged();
        return this;
      }
      /**
       * <code>optional string altValue = 2;</code>
       */
      public Builder setAltValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        altValue_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object text_ = "";
      /**
       * <code>optional string text = 3;</code>
       */
      public boolean hasText() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string text = 3;</code>
       */
      public java.lang.String getText() {
        java.lang.Object ref = text_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            text_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string text = 3;</code>
       */
      public com.google.protobuf.ByteString
          getTextBytes() {
        java.lang.Object ref = text_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          text_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string text = 3;</code>
       */
      public Builder setText(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 3;</code>
       */
      public Builder clearText() {
        bitField0_ = (bitField0_ & ~0x00000004);
        text_ = getDefaultInstance().getText();
        onChanged();
        return this;
      }
      /**
       * <code>optional string text = 3;</code>
       */
      public Builder setTextBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        text_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <code>optional string type = 4;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000008);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object tid_ = "";
      /**
       * <code>optional string tid = 5;</code>
       */
      public boolean hasTid() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string tid = 5;</code>
       */
      public java.lang.String getTid() {
        java.lang.Object ref = tid_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            tid_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string tid = 5;</code>
       */
      public com.google.protobuf.ByteString
          getTidBytes() {
        java.lang.Object ref = tid_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          tid_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string tid = 5;</code>
       */
      public Builder setTid(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        tid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string tid = 5;</code>
       */
      public Builder clearTid() {
        bitField0_ = (bitField0_ & ~0x00000010);
        tid_ = getDefaultInstance().getTid();
        onChanged();
        return this;
      }
      /**
       * <code>optional string tid = 5;</code>
       */
      public Builder setTidBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        tid_ = value;
        onChanged();
        return this;
      }

      private int beginPoint_ ;
      /**
       * <code>optional uint32 beginPoint = 6;</code>
       */
      public boolean hasBeginPoint() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 beginPoint = 6;</code>
       */
      public int getBeginPoint() {
        return beginPoint_;
      }
      /**
       * <code>optional uint32 beginPoint = 6;</code>
       */
      public Builder setBeginPoint(int value) {
        bitField0_ |= 0x00000020;
        beginPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 beginPoint = 6;</code>
       */
      public Builder clearBeginPoint() {
        bitField0_ = (bitField0_ & ~0x00000020);
        beginPoint_ = 0;
        onChanged();
        return this;
      }

      private int endPoint_ ;
      /**
       * <code>optional uint32 endPoint = 7;</code>
       */
      public boolean hasEndPoint() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional uint32 endPoint = 7;</code>
       */
      public int getEndPoint() {
        return endPoint_;
      }
      /**
       * <code>optional uint32 endPoint = 7;</code>
       */
      public Builder setEndPoint(int value) {
        bitField0_ |= 0x00000040;
        endPoint_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 endPoint = 7;</code>
       */
      public Builder clearEndPoint() {
        bitField0_ = (bitField0_ & ~0x00000040);
        endPoint_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Timex)
    }

    static {
      defaultInstance = new Timex(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Timex)
  }

  public interface EntityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Entity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 headStart = 6;</code>
     */
    boolean hasHeadStart();
    /**
     * <code>optional uint32 headStart = 6;</code>
     */
    int getHeadStart();

    /**
     * <code>optional uint32 headEnd = 7;</code>
     */
    boolean hasHeadEnd();
    /**
     * <code>optional uint32 headEnd = 7;</code>
     */
    int getHeadEnd();

    /**
     * <code>optional string mentionType = 8;</code>
     */
    boolean hasMentionType();
    /**
     * <code>optional string mentionType = 8;</code>
     */
    java.lang.String getMentionType();
    /**
     * <code>optional string mentionType = 8;</code>
     */
    com.google.protobuf.ByteString
        getMentionTypeBytes();

    /**
     * <code>optional string normalizedName = 9;</code>
     */
    boolean hasNormalizedName();
    /**
     * <code>optional string normalizedName = 9;</code>
     */
    java.lang.String getNormalizedName();
    /**
     * <code>optional string normalizedName = 9;</code>
     */
    com.google.protobuf.ByteString
        getNormalizedNameBytes();

    /**
     * <code>optional uint32 headTokenIndex = 10;</code>
     */
    boolean hasHeadTokenIndex();
    /**
     * <code>optional uint32 headTokenIndex = 10;</code>
     */
    int getHeadTokenIndex();

    /**
     * <code>optional string corefID = 11;</code>
     */
    boolean hasCorefID();
    /**
     * <code>optional string corefID = 11;</code>
     */
    java.lang.String getCorefID();
    /**
     * <code>optional string corefID = 11;</code>
     */
    com.google.protobuf.ByteString
        getCorefIDBytes();

    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    boolean hasObjectID();
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    java.lang.String getObjectID();
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    com.google.protobuf.ByteString
        getObjectIDBytes();

    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    boolean hasExtentStart();
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    int getExtentStart();

    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    boolean hasExtentEnd();
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    int getExtentEnd();

    /**
     * <code>optional string type = 4;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 4;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 4;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    boolean hasSubtype();
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    java.lang.String getSubtype();
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    com.google.protobuf.ByteString
        getSubtypeBytes();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Entity}
   *
   * <pre>
   * A representation of an entity in a relation.
   * This corresponds to the EntityMention, and more broadly the
   * ExtractionObject classes.
   * </pre>
   */
  public static final class Entity extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Entity)
      EntityOrBuilder {
    // Use Entity.newBuilder() to construct.
    private Entity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Entity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Entity defaultInstance;
    public static Entity getDefaultInstance() {
      return defaultInstance;
    }

    public Entity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Entity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000040;
              objectID_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000080;
              extentStart_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000100;
              extentEnd_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              type_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000400;
              subtype_ = bs;
              break;
            }
            case 48: {
              bitField0_ |= 0x00000001;
              headStart_ = input.readUInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000002;
              headEnd_ = input.readUInt32();
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              mentionType_ = bs;
              break;
            }
            case 74: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              normalizedName_ = bs;
              break;
            }
            case 80: {
              bitField0_ |= 0x00000010;
              headTokenIndex_ = input.readUInt32();
              break;
            }
            case 90: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              corefID_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Entity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Entity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder.class);
    }

    public static com.google.protobuf.Parser<Entity> PARSER =
        new com.google.protobuf.AbstractParser<Entity>() {
      public Entity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Entity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Entity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int HEADSTART_FIELD_NUMBER = 6;
    private int headStart_;
    /**
     * <code>optional uint32 headStart = 6;</code>
     */
    public boolean hasHeadStart() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 headStart = 6;</code>
     */
    public int getHeadStart() {
      return headStart_;
    }

    public static final int HEADEND_FIELD_NUMBER = 7;
    private int headEnd_;
    /**
     * <code>optional uint32 headEnd = 7;</code>
     */
    public boolean hasHeadEnd() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional uint32 headEnd = 7;</code>
     */
    public int getHeadEnd() {
      return headEnd_;
    }

    public static final int MENTIONTYPE_FIELD_NUMBER = 8;
    private java.lang.Object mentionType_;
    /**
     * <code>optional string mentionType = 8;</code>
     */
    public boolean hasMentionType() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string mentionType = 8;</code>
     */
    public java.lang.String getMentionType() {
      java.lang.Object ref = mentionType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          mentionType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string mentionType = 8;</code>
     */
    public com.google.protobuf.ByteString
        getMentionTypeBytes() {
      java.lang.Object ref = mentionType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        mentionType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALIZEDNAME_FIELD_NUMBER = 9;
    private java.lang.Object normalizedName_;
    /**
     * <code>optional string normalizedName = 9;</code>
     */
    public boolean hasNormalizedName() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional string normalizedName = 9;</code>
     */
    public java.lang.String getNormalizedName() {
      java.lang.Object ref = normalizedName_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          normalizedName_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string normalizedName = 9;</code>
     */
    public com.google.protobuf.ByteString
        getNormalizedNameBytes() {
      java.lang.Object ref = normalizedName_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normalizedName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int HEADTOKENINDEX_FIELD_NUMBER = 10;
    private int headTokenIndex_;
    /**
     * <code>optional uint32 headTokenIndex = 10;</code>
     */
    public boolean hasHeadTokenIndex() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional uint32 headTokenIndex = 10;</code>
     */
    public int getHeadTokenIndex() {
      return headTokenIndex_;
    }

    public static final int COREFID_FIELD_NUMBER = 11;
    private java.lang.Object corefID_;
    /**
     * <code>optional string corefID = 11;</code>
     */
    public boolean hasCorefID() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string corefID = 11;</code>
     */
    public java.lang.String getCorefID() {
      java.lang.Object ref = corefID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          corefID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string corefID = 11;</code>
     */
    public com.google.protobuf.ByteString
        getCorefIDBytes() {
      java.lang.Object ref = corefID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        corefID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECTID_FIELD_NUMBER = 1;
    private java.lang.Object objectID_;
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public boolean hasObjectID() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public java.lang.String getObjectID() {
      java.lang.Object ref = objectID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          objectID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public com.google.protobuf.ByteString
        getObjectIDBytes() {
      java.lang.Object ref = objectID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTENTSTART_FIELD_NUMBER = 2;
    private int extentStart_;
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    public boolean hasExtentStart() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    public int getExtentStart() {
      return extentStart_;
    }

    public static final int EXTENTEND_FIELD_NUMBER = 3;
    private int extentEnd_;
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    public boolean hasExtentEnd() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    public int getExtentEnd() {
      return extentEnd_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private java.lang.Object type_;
    /**
     * <code>optional string type = 4;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBTYPE_FIELD_NUMBER = 5;
    private java.lang.Object subtype_;
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public boolean hasSubtype() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public java.lang.String getSubtype() {
      java.lang.Object ref = subtype_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          subtype_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSubtypeBytes() {
      java.lang.Object ref = subtype_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subtype_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      headStart_ = 0;
      headEnd_ = 0;
      mentionType_ = "";
      normalizedName_ = "";
      headTokenIndex_ = 0;
      corefID_ = "";
      objectID_ = "";
      extentStart_ = 0;
      extentEnd_ = 0;
      type_ = "";
      subtype_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBytes(1, getObjectIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt32(2, extentStart_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeUInt32(3, extentEnd_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeBytes(5, getSubtypeBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(6, headStart_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(7, headEnd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(8, getMentionTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(9, getNormalizedNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeUInt32(10, headTokenIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(11, getCorefIDBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getObjectIDBytes());
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, extentStart_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, extentEnd_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSubtypeBytes());
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(6, headStart_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(7, headEnd_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getMentionTypeBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(9, getNormalizedNameBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(10, headTokenIndex_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(11, getCorefIDBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Entity}
     *
     * <pre>
     * A representation of an entity in a relation.
     * This corresponds to the EntityMention, and more broadly the
     * ExtractionObject classes.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Entity)
        edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Entity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Entity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        headStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        headEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        mentionType_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        normalizedName_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        headTokenIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        corefID_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        objectID_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        extentStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000080);
        extentEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        subtype_ = "";
        bitField0_ = (bitField0_ & ~0x00000400);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Entity_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Entity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Entity result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Entity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.headStart_ = headStart_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.headEnd_ = headEnd_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.mentionType_ = mentionType_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.normalizedName_ = normalizedName_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.headTokenIndex_ = headTokenIndex_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.corefID_ = corefID_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.objectID_ = objectID_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.extentStart_ = extentStart_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.extentEnd_ = extentEnd_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.subtype_ = subtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Entity) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Entity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance()) return this;
        if (other.hasHeadStart()) {
          setHeadStart(other.getHeadStart());
        }
        if (other.hasHeadEnd()) {
          setHeadEnd(other.getHeadEnd());
        }
        if (other.hasMentionType()) {
          bitField0_ |= 0x00000004;
          mentionType_ = other.mentionType_;
          onChanged();
        }
        if (other.hasNormalizedName()) {
          bitField0_ |= 0x00000008;
          normalizedName_ = other.normalizedName_;
          onChanged();
        }
        if (other.hasHeadTokenIndex()) {
          setHeadTokenIndex(other.getHeadTokenIndex());
        }
        if (other.hasCorefID()) {
          bitField0_ |= 0x00000020;
          corefID_ = other.corefID_;
          onChanged();
        }
        if (other.hasObjectID()) {
          bitField0_ |= 0x00000040;
          objectID_ = other.objectID_;
          onChanged();
        }
        if (other.hasExtentStart()) {
          setExtentStart(other.getExtentStart());
        }
        if (other.hasExtentEnd()) {
          setExtentEnd(other.getExtentEnd());
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000200;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasSubtype()) {
          bitField0_ |= 0x00000400;
          subtype_ = other.subtype_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Entity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Entity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int headStart_ ;
      /**
       * <code>optional uint32 headStart = 6;</code>
       */
      public boolean hasHeadStart() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 headStart = 6;</code>
       */
      public int getHeadStart() {
        return headStart_;
      }
      /**
       * <code>optional uint32 headStart = 6;</code>
       */
      public Builder setHeadStart(int value) {
        bitField0_ |= 0x00000001;
        headStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 headStart = 6;</code>
       */
      public Builder clearHeadStart() {
        bitField0_ = (bitField0_ & ~0x00000001);
        headStart_ = 0;
        onChanged();
        return this;
      }

      private int headEnd_ ;
      /**
       * <code>optional uint32 headEnd = 7;</code>
       */
      public boolean hasHeadEnd() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 headEnd = 7;</code>
       */
      public int getHeadEnd() {
        return headEnd_;
      }
      /**
       * <code>optional uint32 headEnd = 7;</code>
       */
      public Builder setHeadEnd(int value) {
        bitField0_ |= 0x00000002;
        headEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 headEnd = 7;</code>
       */
      public Builder clearHeadEnd() {
        bitField0_ = (bitField0_ & ~0x00000002);
        headEnd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object mentionType_ = "";
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public boolean hasMentionType() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public java.lang.String getMentionType() {
        java.lang.Object ref = mentionType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            mentionType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public com.google.protobuf.ByteString
          getMentionTypeBytes() {
        java.lang.Object ref = mentionType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          mentionType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public Builder setMentionType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mentionType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public Builder clearMentionType() {
        bitField0_ = (bitField0_ & ~0x00000004);
        mentionType_ = getDefaultInstance().getMentionType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string mentionType = 8;</code>
       */
      public Builder setMentionTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        mentionType_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normalizedName_ = "";
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public boolean hasNormalizedName() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public java.lang.String getNormalizedName() {
        java.lang.Object ref = normalizedName_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            normalizedName_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public com.google.protobuf.ByteString
          getNormalizedNameBytes() {
        java.lang.Object ref = normalizedName_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normalizedName_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public Builder setNormalizedName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        normalizedName_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public Builder clearNormalizedName() {
        bitField0_ = (bitField0_ & ~0x00000008);
        normalizedName_ = getDefaultInstance().getNormalizedName();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedName = 9;</code>
       */
      public Builder setNormalizedNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        normalizedName_ = value;
        onChanged();
        return this;
      }

      private int headTokenIndex_ ;
      /**
       * <code>optional uint32 headTokenIndex = 10;</code>
       */
      public boolean hasHeadTokenIndex() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 headTokenIndex = 10;</code>
       */
      public int getHeadTokenIndex() {
        return headTokenIndex_;
      }
      /**
       * <code>optional uint32 headTokenIndex = 10;</code>
       */
      public Builder setHeadTokenIndex(int value) {
        bitField0_ |= 0x00000010;
        headTokenIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 headTokenIndex = 10;</code>
       */
      public Builder clearHeadTokenIndex() {
        bitField0_ = (bitField0_ & ~0x00000010);
        headTokenIndex_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object corefID_ = "";
      /**
       * <code>optional string corefID = 11;</code>
       */
      public boolean hasCorefID() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string corefID = 11;</code>
       */
      public java.lang.String getCorefID() {
        java.lang.Object ref = corefID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            corefID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string corefID = 11;</code>
       */
      public com.google.protobuf.ByteString
          getCorefIDBytes() {
        java.lang.Object ref = corefID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          corefID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string corefID = 11;</code>
       */
      public Builder setCorefID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        corefID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string corefID = 11;</code>
       */
      public Builder clearCorefID() {
        bitField0_ = (bitField0_ & ~0x00000020);
        corefID_ = getDefaultInstance().getCorefID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string corefID = 11;</code>
       */
      public Builder setCorefIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        corefID_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object objectID_ = "";
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public boolean hasObjectID() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public java.lang.String getObjectID() {
        java.lang.Object ref = objectID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            objectID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public com.google.protobuf.ByteString
          getObjectIDBytes() {
        java.lang.Object ref = objectID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          objectID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder setObjectID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        objectID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder clearObjectID() {
        bitField0_ = (bitField0_ & ~0x00000040);
        objectID_ = getDefaultInstance().getObjectID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder setObjectIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        objectID_ = value;
        onChanged();
        return this;
      }

      private int extentStart_ ;
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public boolean hasExtentStart() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public int getExtentStart() {
        return extentStart_;
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public Builder setExtentStart(int value) {
        bitField0_ |= 0x00000080;
        extentStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public Builder clearExtentStart() {
        bitField0_ = (bitField0_ & ~0x00000080);
        extentStart_ = 0;
        onChanged();
        return this;
      }

      private int extentEnd_ ;
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public boolean hasExtentEnd() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public int getExtentEnd() {
        return extentEnd_;
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public Builder setExtentEnd(int value) {
        bitField0_ |= 0x00000100;
        extentEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public Builder clearExtentEnd() {
        bitField0_ = (bitField0_ & ~0x00000100);
        extentEnd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <code>optional string type = 4;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000200);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subtype_ = "";
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public boolean hasSubtype() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public java.lang.String getSubtype() {
        java.lang.Object ref = subtype_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            subtype_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSubtypeBytes() {
        java.lang.Object ref = subtype_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subtype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder setSubtype(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        subtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder clearSubtype() {
        bitField0_ = (bitField0_ & ~0x00000400);
        subtype_ = getDefaultInstance().getSubtype();
        onChanged();
        return this;
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder setSubtypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000400;
        subtype_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Entity)
    }

    static {
      defaultInstance = new Entity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Entity)
  }

  public interface RelationOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Relation)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string argName = 6;</code>
     */
    com.google.protobuf.ProtocolStringList
        getArgNameList();
    /**
     * <code>repeated string argName = 6;</code>
     */
    int getArgNameCount();
    /**
     * <code>repeated string argName = 6;</code>
     */
    java.lang.String getArgName(int index);
    /**
     * <code>repeated string argName = 6;</code>
     */
    com.google.protobuf.ByteString
        getArgNameBytes(int index);

    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> 
        getArgList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getArg(int index);
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    int getArgCount();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
        getArgOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getArgOrBuilder(
        int index);

    /**
     * <code>optional string signature = 8;</code>
     */
    boolean hasSignature();
    /**
     * <code>optional string signature = 8;</code>
     */
    java.lang.String getSignature();
    /**
     * <code>optional string signature = 8;</code>
     */
    com.google.protobuf.ByteString
        getSignatureBytes();

    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    boolean hasObjectID();
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    java.lang.String getObjectID();
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    com.google.protobuf.ByteString
        getObjectIDBytes();

    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    boolean hasExtentStart();
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    int getExtentStart();

    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    boolean hasExtentEnd();
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    int getExtentEnd();

    /**
     * <code>optional string type = 4;</code>
     */
    boolean hasType();
    /**
     * <code>optional string type = 4;</code>
     */
    java.lang.String getType();
    /**
     * <code>optional string type = 4;</code>
     */
    com.google.protobuf.ByteString
        getTypeBytes();

    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    boolean hasSubtype();
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    java.lang.String getSubtype();
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    com.google.protobuf.ByteString
        getSubtypeBytes();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Relation}
   *
   * <pre>
   * A representation of a relation, mirroring RelationMention
   * </pre>
   */
  public static final class Relation extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Relation)
      RelationOrBuilder {
    // Use Relation.newBuilder() to construct.
    private Relation(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Relation(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Relation defaultInstance;
    public static Relation getDefaultInstance() {
      return defaultInstance;
    }

    public Relation getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Relation(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              objectID_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000004;
              extentStart_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000008;
              extentEnd_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              type_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              subtype_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                argName_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              argName_.add(bs);
              break;
            }
            case 58: {
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                arg_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>();
                mutable_bitField0_ |= 0x00000002;
              }
              arg_.add(input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.PARSER, extensionRegistry));
              break;
            }
            case 66: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              signature_ = bs;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          argName_ = argName_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          arg_ = java.util.Collections.unmodifiableList(arg_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Relation_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Relation_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder.class);
    }

    public static com.google.protobuf.Parser<Relation> PARSER =
        new com.google.protobuf.AbstractParser<Relation>() {
      public Relation parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Relation(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Relation> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int ARGNAME_FIELD_NUMBER = 6;
    private com.google.protobuf.LazyStringList argName_;
    /**
     * <code>repeated string argName = 6;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getArgNameList() {
      return argName_;
    }
    /**
     * <code>repeated string argName = 6;</code>
     */
    public int getArgNameCount() {
      return argName_.size();
    }
    /**
     * <code>repeated string argName = 6;</code>
     */
    public java.lang.String getArgName(int index) {
      return argName_.get(index);
    }
    /**
     * <code>repeated string argName = 6;</code>
     */
    public com.google.protobuf.ByteString
        getArgNameBytes(int index) {
      return argName_.getByteString(index);
    }

    public static final int ARG_FIELD_NUMBER = 7;
    private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> arg_;
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> getArgList() {
      return arg_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
        getArgOrBuilderList() {
      return arg_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    public int getArgCount() {
      return arg_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getArg(int index) {
      return arg_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getArgOrBuilder(
        int index) {
      return arg_.get(index);
    }

    public static final int SIGNATURE_FIELD_NUMBER = 8;
    private java.lang.Object signature_;
    /**
     * <code>optional string signature = 8;</code>
     */
    public boolean hasSignature() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string signature = 8;</code>
     */
    public java.lang.String getSignature() {
      java.lang.Object ref = signature_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          signature_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string signature = 8;</code>
     */
    public com.google.protobuf.ByteString
        getSignatureBytes() {
      java.lang.Object ref = signature_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        signature_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECTID_FIELD_NUMBER = 1;
    private java.lang.Object objectID_;
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public boolean hasObjectID() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public java.lang.String getObjectID() {
      java.lang.Object ref = objectID_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          objectID_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string objectID = 1;</code>
     *
     * <pre>
     * inherited from ExtractionObject
     * </pre>
     */
    public com.google.protobuf.ByteString
        getObjectIDBytes() {
      java.lang.Object ref = objectID_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        objectID_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int EXTENTSTART_FIELD_NUMBER = 2;
    private int extentStart_;
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    public boolean hasExtentStart() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional uint32 extentStart = 2;</code>
     */
    public int getExtentStart() {
      return extentStart_;
    }

    public static final int EXTENTEND_FIELD_NUMBER = 3;
    private int extentEnd_;
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    public boolean hasExtentEnd() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional uint32 extentEnd = 3;</code>
     */
    public int getExtentEnd() {
      return extentEnd_;
    }

    public static final int TYPE_FIELD_NUMBER = 4;
    private java.lang.Object type_;
    /**
     * <code>optional string type = 4;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public java.lang.String getType() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          type_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string type = 4;</code>
     */
    public com.google.protobuf.ByteString
        getTypeBytes() {
      java.lang.Object ref = type_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        type_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int SUBTYPE_FIELD_NUMBER = 5;
    private java.lang.Object subtype_;
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public boolean hasSubtype() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public java.lang.String getSubtype() {
      java.lang.Object ref = subtype_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          subtype_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string subtype = 5;</code>
     *
     * <pre>
     * Implicit
     *       uint32 sentence       &#64;see implicit in sentence
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSubtypeBytes() {
      java.lang.Object ref = subtype_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subtype_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    private void initFields() {
      argName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      arg_ = java.util.Collections.emptyList();
      signature_ = "";
      objectID_ = "";
      extentStart_ = 0;
      extentEnd_ = 0;
      type_ = "";
      subtype_ = "";
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(1, getObjectIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(2, extentStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeUInt32(3, extentEnd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(5, getSubtypeBytes());
      }
      for (int i = 0; i < argName_.size(); i++) {
        output.writeBytes(6, argName_.getByteString(i));
      }
      for (int i = 0; i < arg_.size(); i++) {
        output.writeMessage(7, arg_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(8, getSignatureBytes());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getObjectIDBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, extentStart_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, extentEnd_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getTypeBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getSubtypeBytes());
      }
      {
        int dataSize = 0;
        for (int i = 0; i < argName_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(argName_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getArgNameList().size();
      }
      for (int i = 0; i < arg_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, arg_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(8, getSignatureBytes());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Relation prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Relation}
     *
     * <pre>
     * A representation of a relation, mirroring RelationMention
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Relation)
        edu.stanford.nlp.pipeline.CoreNLPProtos.RelationOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Relation_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Relation_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getArgFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        argName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        if (argBuilder_ == null) {
          arg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
        } else {
          argBuilder_.clear();
        }
        signature_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        objectID_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        extentStart_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        extentEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        type_ = "";
        bitField0_ = (bitField0_ & ~0x00000040);
        subtype_ = "";
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Relation_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Relation result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Relation buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Relation result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Relation(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          argName_ = argName_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.argName_ = argName_;
        if (argBuilder_ == null) {
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            arg_ = java.util.Collections.unmodifiableList(arg_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.arg_ = arg_;
        } else {
          result.arg_ = argBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000001;
        }
        result.signature_ = signature_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000002;
        }
        result.objectID_ = objectID_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000004;
        }
        result.extentStart_ = extentStart_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000008;
        }
        result.extentEnd_ = extentEnd_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000010;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000020;
        }
        result.subtype_ = subtype_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Relation) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Relation)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Relation other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Relation.getDefaultInstance()) return this;
        if (!other.argName_.isEmpty()) {
          if (argName_.isEmpty()) {
            argName_ = other.argName_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureArgNameIsMutable();
            argName_.addAll(other.argName_);
          }
          onChanged();
        }
        if (argBuilder_ == null) {
          if (!other.arg_.isEmpty()) {
            if (arg_.isEmpty()) {
              arg_ = other.arg_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureArgIsMutable();
              arg_.addAll(other.arg_);
            }
            onChanged();
          }
        } else {
          if (!other.arg_.isEmpty()) {
            if (argBuilder_.isEmpty()) {
              argBuilder_.dispose();
              argBuilder_ = null;
              arg_ = other.arg_;
              bitField0_ = (bitField0_ & ~0x00000002);
              argBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getArgFieldBuilder() : null;
            } else {
              argBuilder_.addAllMessages(other.arg_);
            }
          }
        }
        if (other.hasSignature()) {
          bitField0_ |= 0x00000004;
          signature_ = other.signature_;
          onChanged();
        }
        if (other.hasObjectID()) {
          bitField0_ |= 0x00000008;
          objectID_ = other.objectID_;
          onChanged();
        }
        if (other.hasExtentStart()) {
          setExtentStart(other.getExtentStart());
        }
        if (other.hasExtentEnd()) {
          setExtentEnd(other.getExtentEnd());
        }
        if (other.hasType()) {
          bitField0_ |= 0x00000040;
          type_ = other.type_;
          onChanged();
        }
        if (other.hasSubtype()) {
          bitField0_ |= 0x00000080;
          subtype_ = other.subtype_;
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Relation parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Relation) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList argName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureArgNameIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          argName_ = new com.google.protobuf.LazyStringArrayList(argName_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getArgNameList() {
        return argName_.getUnmodifiableView();
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public int getArgNameCount() {
        return argName_.size();
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public java.lang.String getArgName(int index) {
        return argName_.get(index);
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public com.google.protobuf.ByteString
          getArgNameBytes(int index) {
        return argName_.getByteString(index);
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public Builder setArgName(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgNameIsMutable();
        argName_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public Builder addArgName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgNameIsMutable();
        argName_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public Builder addAllArgName(
          java.lang.Iterable<java.lang.String> values) {
        ensureArgNameIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, argName_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public Builder clearArgName() {
        argName_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string argName = 6;</code>
       */
      public Builder addArgNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureArgNameIsMutable();
        argName_.add(value);
        onChanged();
        return this;
      }

      private java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> arg_ =
        java.util.Collections.emptyList();
      private void ensureArgIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          arg_ = new java.util.ArrayList<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity>(arg_);
          bitField0_ |= 0x00000002;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> argBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> getArgList() {
        if (argBuilder_ == null) {
          return java.util.Collections.unmodifiableList(arg_);
        } else {
          return argBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public int getArgCount() {
        if (argBuilder_ == null) {
          return arg_.size();
        } else {
          return argBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity getArg(int index) {
        if (argBuilder_ == null) {
          return arg_.get(index);
        } else {
          return argBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder setArg(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (argBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgIsMutable();
          arg_.set(index, value);
          onChanged();
        } else {
          argBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder setArg(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (argBuilder_ == null) {
          ensureArgIsMutable();
          arg_.set(index, builderForValue.build());
          onChanged();
        } else {
          argBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder addArg(edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (argBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgIsMutable();
          arg_.add(value);
          onChanged();
        } else {
          argBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder addArg(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity value) {
        if (argBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureArgIsMutable();
          arg_.add(index, value);
          onChanged();
        } else {
          argBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder addArg(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (argBuilder_ == null) {
          ensureArgIsMutable();
          arg_.add(builderForValue.build());
          onChanged();
        } else {
          argBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder addArg(
          int index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder builderForValue) {
        if (argBuilder_ == null) {
          ensureArgIsMutable();
          arg_.add(index, builderForValue.build());
          onChanged();
        } else {
          argBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder addAllArg(
          java.lang.Iterable<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.Entity> values) {
        if (argBuilder_ == null) {
          ensureArgIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, arg_);
          onChanged();
        } else {
          argBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder clearArg() {
        if (argBuilder_ == null) {
          arg_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
        } else {
          argBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public Builder removeArg(int index) {
        if (argBuilder_ == null) {
          ensureArgIsMutable();
          arg_.remove(index);
          onChanged();
        } else {
          argBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder getArgBuilder(
          int index) {
        return getArgFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder getArgOrBuilder(
          int index) {
        if (argBuilder_ == null) {
          return arg_.get(index);  } else {
          return argBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
           getArgOrBuilderList() {
        if (argBuilder_ != null) {
          return argBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(arg_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder addArgBuilder() {
        return getArgFieldBuilder().addBuilder(
            edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder addArgBuilder(
          int index) {
        return getArgFieldBuilder().addBuilder(
            index, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.pipeline.Entity arg = 7;</code>
       */
      public java.util.List<edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder> 
           getArgBuilderList() {
        return getArgFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder> 
          getArgFieldBuilder() {
        if (argBuilder_ == null) {
          argBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Entity, edu.stanford.nlp.pipeline.CoreNLPProtos.Entity.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.EntityOrBuilder>(
                  arg_,
                  ((bitField0_ & 0x00000002) == 0x00000002),
                  getParentForChildren(),
                  isClean());
          arg_ = null;
        }
        return argBuilder_;
      }

      private java.lang.Object signature_ = "";
      /**
       * <code>optional string signature = 8;</code>
       */
      public boolean hasSignature() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string signature = 8;</code>
       */
      public java.lang.String getSignature() {
        java.lang.Object ref = signature_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            signature_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string signature = 8;</code>
       */
      public com.google.protobuf.ByteString
          getSignatureBytes() {
        java.lang.Object ref = signature_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          signature_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string signature = 8;</code>
       */
      public Builder setSignature(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string signature = 8;</code>
       */
      public Builder clearSignature() {
        bitField0_ = (bitField0_ & ~0x00000004);
        signature_ = getDefaultInstance().getSignature();
        onChanged();
        return this;
      }
      /**
       * <code>optional string signature = 8;</code>
       */
      public Builder setSignatureBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        signature_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object objectID_ = "";
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public boolean hasObjectID() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public java.lang.String getObjectID() {
        java.lang.Object ref = objectID_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            objectID_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public com.google.protobuf.ByteString
          getObjectIDBytes() {
        java.lang.Object ref = objectID_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          objectID_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder setObjectID(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        objectID_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder clearObjectID() {
        bitField0_ = (bitField0_ & ~0x00000008);
        objectID_ = getDefaultInstance().getObjectID();
        onChanged();
        return this;
      }
      /**
       * <code>optional string objectID = 1;</code>
       *
       * <pre>
       * inherited from ExtractionObject
       * </pre>
       */
      public Builder setObjectIDBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        objectID_ = value;
        onChanged();
        return this;
      }

      private int extentStart_ ;
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public boolean hasExtentStart() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public int getExtentStart() {
        return extentStart_;
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public Builder setExtentStart(int value) {
        bitField0_ |= 0x00000010;
        extentStart_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extentStart = 2;</code>
       */
      public Builder clearExtentStart() {
        bitField0_ = (bitField0_ & ~0x00000010);
        extentStart_ = 0;
        onChanged();
        return this;
      }

      private int extentEnd_ ;
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public boolean hasExtentEnd() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public int getExtentEnd() {
        return extentEnd_;
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public Builder setExtentEnd(int value) {
        bitField0_ |= 0x00000020;
        extentEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 extentEnd = 3;</code>
       */
      public Builder clearExtentEnd() {
        bitField0_ = (bitField0_ & ~0x00000020);
        extentEnd_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object type_ = "";
      /**
       * <code>optional string type = 4;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public java.lang.String getType() {
        java.lang.Object ref = type_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            type_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public com.google.protobuf.ByteString
          getTypeBytes() {
        java.lang.Object ref = type_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          type_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000040);
        type_ = getDefaultInstance().getType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string type = 4;</code>
       */
      public Builder setTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000040;
        type_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object subtype_ = "";
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public boolean hasSubtype() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public java.lang.String getSubtype() {
        java.lang.Object ref = subtype_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            subtype_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSubtypeBytes() {
        java.lang.Object ref = subtype_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subtype_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder setSubtype(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        subtype_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder clearSubtype() {
        bitField0_ = (bitField0_ & ~0x00000080);
        subtype_ = getDefaultInstance().getSubtype();
        onChanged();
        return this;
      }
      /**
       * <code>optional string subtype = 5;</code>
       *
       * <pre>
       * Implicit
       *       uint32 sentence       &#64;see implicit in sentence
       * </pre>
       */
      public Builder setSubtypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000080;
        subtype_ = value;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Relation)
    }

    static {
      defaultInstance = new Relation(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Relation)
  }

  public interface OperatorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Operator)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required string name = 1;</code>
     */
    boolean hasName();
    /**
     * <code>required string name = 1;</code>
     */
    java.lang.String getName();
    /**
     * <code>required string name = 1;</code>
     */
    com.google.protobuf.ByteString
        getNameBytes();

    /**
     * <code>required int32 quantifierSpanBegin = 2;</code>
     */
    boolean hasQuantifierSpanBegin();
    /**
     * <code>required int32 quantifierSpanBegin = 2;</code>
     */
    int getQuantifierSpanBegin();

    /**
     * <code>required int32 quantifierSpanEnd = 3;</code>
     */
    boolean hasQuantifierSpanEnd();
    /**
     * <code>required int32 quantifierSpanEnd = 3;</code>
     */
    int getQuantifierSpanEnd();

    /**
     * <code>required int32 subjectSpanBegin = 4;</code>
     */
    boolean hasSubjectSpanBegin();
    /**
     * <code>required int32 subjectSpanBegin = 4;</code>
     */
    int getSubjectSpanBegin();

    /**
     * <code>required int32 subjectSpanEnd = 5;</code>
     */
    boolean hasSubjectSpanEnd();
    /**
     * <code>required int32 subjectSpanEnd = 5;</code>
     */
    int getSubjectSpanEnd();

    /**
     * <code>required int32 objectSpanBegin = 6;</code>
     */
    boolean hasObjectSpanBegin();
    /**
     * <code>required int32 objectSpanBegin = 6;</code>
     */
    int getObjectSpanBegin();

    /**
     * <code>required int32 objectSpanEnd = 7;</code>
     */
    boolean hasObjectSpanEnd();
    /**
     * <code>required int32 objectSpanEnd = 7;</code>
     */
    int getObjectSpanEnd();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Operator}
   *
   * <pre>
   * A Natural Logic operator
   * </pre>
   */
  public static final class Operator extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Operator)
      OperatorOrBuilder {
    // Use Operator.newBuilder() to construct.
    private Operator(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Operator(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Operator defaultInstance;
    public static Operator getDefaultInstance() {
      return defaultInstance;
    }

    public Operator getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Operator(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              name_ = bs;
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              quantifierSpanBegin_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              quantifierSpanEnd_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              subjectSpanBegin_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              subjectSpanEnd_ = input.readInt32();
              break;
            }
            case 48: {
              bitField0_ |= 0x00000020;
              objectSpanBegin_ = input.readInt32();
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              objectSpanEnd_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Operator_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Operator_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder.class);
    }

    public static com.google.protobuf.Parser<Operator> PARSER =
        new com.google.protobuf.AbstractParser<Operator>() {
      public Operator parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Operator(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Operator> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int NAME_FIELD_NUMBER = 1;
    private java.lang.Object name_;
    /**
     * <code>required string name = 1;</code>
     */
    public boolean hasName() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required string name = 1;</code>
     */
    public java.lang.String getName() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          name_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getNameBytes() {
      java.lang.Object ref = name_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        name_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int QUANTIFIERSPANBEGIN_FIELD_NUMBER = 2;
    private int quantifierSpanBegin_;
    /**
     * <code>required int32 quantifierSpanBegin = 2;</code>
     */
    public boolean hasQuantifierSpanBegin() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required int32 quantifierSpanBegin = 2;</code>
     */
    public int getQuantifierSpanBegin() {
      return quantifierSpanBegin_;
    }

    public static final int QUANTIFIERSPANEND_FIELD_NUMBER = 3;
    private int quantifierSpanEnd_;
    /**
     * <code>required int32 quantifierSpanEnd = 3;</code>
     */
    public boolean hasQuantifierSpanEnd() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required int32 quantifierSpanEnd = 3;</code>
     */
    public int getQuantifierSpanEnd() {
      return quantifierSpanEnd_;
    }

    public static final int SUBJECTSPANBEGIN_FIELD_NUMBER = 4;
    private int subjectSpanBegin_;
    /**
     * <code>required int32 subjectSpanBegin = 4;</code>
     */
    public boolean hasSubjectSpanBegin() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required int32 subjectSpanBegin = 4;</code>
     */
    public int getSubjectSpanBegin() {
      return subjectSpanBegin_;
    }

    public static final int SUBJECTSPANEND_FIELD_NUMBER = 5;
    private int subjectSpanEnd_;
    /**
     * <code>required int32 subjectSpanEnd = 5;</code>
     */
    public boolean hasSubjectSpanEnd() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required int32 subjectSpanEnd = 5;</code>
     */
    public int getSubjectSpanEnd() {
      return subjectSpanEnd_;
    }

    public static final int OBJECTSPANBEGIN_FIELD_NUMBER = 6;
    private int objectSpanBegin_;
    /**
     * <code>required int32 objectSpanBegin = 6;</code>
     */
    public boolean hasObjectSpanBegin() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required int32 objectSpanBegin = 6;</code>
     */
    public int getObjectSpanBegin() {
      return objectSpanBegin_;
    }

    public static final int OBJECTSPANEND_FIELD_NUMBER = 7;
    private int objectSpanEnd_;
    /**
     * <code>required int32 objectSpanEnd = 7;</code>
     */
    public boolean hasObjectSpanEnd() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required int32 objectSpanEnd = 7;</code>
     */
    public int getObjectSpanEnd() {
      return objectSpanEnd_;
    }

    private void initFields() {
      name_ = "";
      quantifierSpanBegin_ = 0;
      quantifierSpanEnd_ = 0;
      subjectSpanBegin_ = 0;
      subjectSpanEnd_ = 0;
      objectSpanBegin_ = 0;
      objectSpanEnd_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasName()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuantifierSpanBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasQuantifierSpanEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubjectSpanBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasSubjectSpanEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObjectSpanBegin()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasObjectSpanEnd()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, quantifierSpanBegin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, quantifierSpanEnd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, subjectSpanBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, subjectSpanEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeInt32(6, objectSpanBegin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, objectSpanEnd_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getNameBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, quantifierSpanBegin_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, quantifierSpanEnd_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, subjectSpanBegin_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, subjectSpanEnd_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(6, objectSpanBegin_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, objectSpanEnd_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Operator prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Operator}
     *
     * <pre>
     * A Natural Logic operator
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Operator)
        edu.stanford.nlp.pipeline.CoreNLPProtos.OperatorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Operator_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Operator_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        name_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        quantifierSpanBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        quantifierSpanEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        subjectSpanBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        subjectSpanEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        objectSpanBegin_ = 0;
        bitField0_ = (bitField0_ & ~0x00000020);
        objectSpanEnd_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Operator_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Operator result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Operator buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Operator result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Operator(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.name_ = name_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.quantifierSpanBegin_ = quantifierSpanBegin_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.quantifierSpanEnd_ = quantifierSpanEnd_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.subjectSpanBegin_ = subjectSpanBegin_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.subjectSpanEnd_ = subjectSpanEnd_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.objectSpanBegin_ = objectSpanBegin_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.objectSpanEnd_ = objectSpanEnd_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Operator) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Operator)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Operator other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Operator.getDefaultInstance()) return this;
        if (other.hasName()) {
          bitField0_ |= 0x00000001;
          name_ = other.name_;
          onChanged();
        }
        if (other.hasQuantifierSpanBegin()) {
          setQuantifierSpanBegin(other.getQuantifierSpanBegin());
        }
        if (other.hasQuantifierSpanEnd()) {
          setQuantifierSpanEnd(other.getQuantifierSpanEnd());
        }
        if (other.hasSubjectSpanBegin()) {
          setSubjectSpanBegin(other.getSubjectSpanBegin());
        }
        if (other.hasSubjectSpanEnd()) {
          setSubjectSpanEnd(other.getSubjectSpanEnd());
        }
        if (other.hasObjectSpanBegin()) {
          setObjectSpanBegin(other.getObjectSpanBegin());
        }
        if (other.hasObjectSpanEnd()) {
          setObjectSpanEnd(other.getObjectSpanEnd());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasName()) {
          
          return false;
        }
        if (!hasQuantifierSpanBegin()) {
          
          return false;
        }
        if (!hasQuantifierSpanEnd()) {
          
          return false;
        }
        if (!hasSubjectSpanBegin()) {
          
          return false;
        }
        if (!hasSubjectSpanEnd()) {
          
          return false;
        }
        if (!hasObjectSpanBegin()) {
          
          return false;
        }
        if (!hasObjectSpanEnd()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Operator parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Operator) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object name_ = "";
      /**
       * <code>required string name = 1;</code>
       */
      public boolean hasName() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required string name = 1;</code>
       */
      public java.lang.String getName() {
        java.lang.Object ref = name_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            name_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public com.google.protobuf.ByteString
          getNameBytes() {
        java.lang.Object ref = name_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          name_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setName(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder clearName() {
        bitField0_ = (bitField0_ & ~0x00000001);
        name_ = getDefaultInstance().getName();
        onChanged();
        return this;
      }
      /**
       * <code>required string name = 1;</code>
       */
      public Builder setNameBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        name_ = value;
        onChanged();
        return this;
      }

      private int quantifierSpanBegin_ ;
      /**
       * <code>required int32 quantifierSpanBegin = 2;</code>
       */
      public boolean hasQuantifierSpanBegin() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required int32 quantifierSpanBegin = 2;</code>
       */
      public int getQuantifierSpanBegin() {
        return quantifierSpanBegin_;
      }
      /**
       * <code>required int32 quantifierSpanBegin = 2;</code>
       */
      public Builder setQuantifierSpanBegin(int value) {
        bitField0_ |= 0x00000002;
        quantifierSpanBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quantifierSpanBegin = 2;</code>
       */
      public Builder clearQuantifierSpanBegin() {
        bitField0_ = (bitField0_ & ~0x00000002);
        quantifierSpanBegin_ = 0;
        onChanged();
        return this;
      }

      private int quantifierSpanEnd_ ;
      /**
       * <code>required int32 quantifierSpanEnd = 3;</code>
       */
      public boolean hasQuantifierSpanEnd() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required int32 quantifierSpanEnd = 3;</code>
       */
      public int getQuantifierSpanEnd() {
        return quantifierSpanEnd_;
      }
      /**
       * <code>required int32 quantifierSpanEnd = 3;</code>
       */
      public Builder setQuantifierSpanEnd(int value) {
        bitField0_ |= 0x00000004;
        quantifierSpanEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 quantifierSpanEnd = 3;</code>
       */
      public Builder clearQuantifierSpanEnd() {
        bitField0_ = (bitField0_ & ~0x00000004);
        quantifierSpanEnd_ = 0;
        onChanged();
        return this;
      }

      private int subjectSpanBegin_ ;
      /**
       * <code>required int32 subjectSpanBegin = 4;</code>
       */
      public boolean hasSubjectSpanBegin() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required int32 subjectSpanBegin = 4;</code>
       */
      public int getSubjectSpanBegin() {
        return subjectSpanBegin_;
      }
      /**
       * <code>required int32 subjectSpanBegin = 4;</code>
       */
      public Builder setSubjectSpanBegin(int value) {
        bitField0_ |= 0x00000008;
        subjectSpanBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 subjectSpanBegin = 4;</code>
       */
      public Builder clearSubjectSpanBegin() {
        bitField0_ = (bitField0_ & ~0x00000008);
        subjectSpanBegin_ = 0;
        onChanged();
        return this;
      }

      private int subjectSpanEnd_ ;
      /**
       * <code>required int32 subjectSpanEnd = 5;</code>
       */
      public boolean hasSubjectSpanEnd() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required int32 subjectSpanEnd = 5;</code>
       */
      public int getSubjectSpanEnd() {
        return subjectSpanEnd_;
      }
      /**
       * <code>required int32 subjectSpanEnd = 5;</code>
       */
      public Builder setSubjectSpanEnd(int value) {
        bitField0_ |= 0x00000010;
        subjectSpanEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 subjectSpanEnd = 5;</code>
       */
      public Builder clearSubjectSpanEnd() {
        bitField0_ = (bitField0_ & ~0x00000010);
        subjectSpanEnd_ = 0;
        onChanged();
        return this;
      }

      private int objectSpanBegin_ ;
      /**
       * <code>required int32 objectSpanBegin = 6;</code>
       */
      public boolean hasObjectSpanBegin() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required int32 objectSpanBegin = 6;</code>
       */
      public int getObjectSpanBegin() {
        return objectSpanBegin_;
      }
      /**
       * <code>required int32 objectSpanBegin = 6;</code>
       */
      public Builder setObjectSpanBegin(int value) {
        bitField0_ |= 0x00000020;
        objectSpanBegin_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 objectSpanBegin = 6;</code>
       */
      public Builder clearObjectSpanBegin() {
        bitField0_ = (bitField0_ & ~0x00000020);
        objectSpanBegin_ = 0;
        onChanged();
        return this;
      }

      private int objectSpanEnd_ ;
      /**
       * <code>required int32 objectSpanEnd = 7;</code>
       */
      public boolean hasObjectSpanEnd() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required int32 objectSpanEnd = 7;</code>
       */
      public int getObjectSpanEnd() {
        return objectSpanEnd_;
      }
      /**
       * <code>required int32 objectSpanEnd = 7;</code>
       */
      public Builder setObjectSpanEnd(int value) {
        bitField0_ |= 0x00000040;
        objectSpanEnd_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required int32 objectSpanEnd = 7;</code>
       */
      public Builder clearObjectSpanEnd() {
        bitField0_ = (bitField0_ & ~0x00000040);
        objectSpanEnd_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Operator)
    }

    static {
      defaultInstance = new Operator(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Operator)
  }

  public interface PolarityOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.Polarity)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
     */
    boolean hasProjectEquivalence();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectEquivalence();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
     */
    boolean hasProjectForwardEntailment();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectForwardEntailment();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
     */
    boolean hasProjectReverseEntailment();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectReverseEntailment();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
     */
    boolean hasProjectNegation();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectNegation();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
     */
    boolean hasProjectAlternation();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectAlternation();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
     */
    boolean hasProjectCover();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectCover();

    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
     */
    boolean hasProjectIndependence();
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectIndependence();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.Polarity}
   *
   * <pre>
   * The polarity of a word, according to Natural Logic
   * </pre>
   */
  public static final class Polarity extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.Polarity)
      PolarityOrBuilder {
    // Use Polarity.newBuilder() to construct.
    private Polarity(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Polarity(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Polarity defaultInstance;
    public static Polarity getDefaultInstance() {
      return defaultInstance;
    }

    public Polarity getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Polarity(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                projectEquivalence_ = value;
              }
              break;
            }
            case 16: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(2, rawValue);
              } else {
                bitField0_ |= 0x00000002;
                projectForwardEntailment_ = value;
              }
              break;
            }
            case 24: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(3, rawValue);
              } else {
                bitField0_ |= 0x00000004;
                projectReverseEntailment_ = value;
              }
              break;
            }
            case 32: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(4, rawValue);
              } else {
                bitField0_ |= 0x00000008;
                projectNegation_ = value;
              }
              break;
            }
            case 40: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(5, rawValue);
              } else {
                bitField0_ |= 0x00000010;
                projectAlternation_ = value;
              }
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                projectCover_ = value;
              }
              break;
            }
            case 56: {
              int rawValue = input.readEnum();
              edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(7, rawValue);
              } else {
                bitField0_ |= 0x00000040;
                projectIndependence_ = value;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Polarity_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder.class);
    }

    public static com.google.protobuf.Parser<Polarity> PARSER =
        new com.google.protobuf.AbstractParser<Polarity>() {
      public Polarity parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Polarity(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Polarity> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int PROJECTEQUIVALENCE_FIELD_NUMBER = 1;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectEquivalence_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
     */
    public boolean hasProjectEquivalence() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectEquivalence() {
      return projectEquivalence_;
    }

    public static final int PROJECTFORWARDENTAILMENT_FIELD_NUMBER = 2;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectForwardEntailment_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
     */
    public boolean hasProjectForwardEntailment() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectForwardEntailment() {
      return projectForwardEntailment_;
    }

    public static final int PROJECTREVERSEENTAILMENT_FIELD_NUMBER = 3;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectReverseEntailment_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
     */
    public boolean hasProjectReverseEntailment() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectReverseEntailment() {
      return projectReverseEntailment_;
    }

    public static final int PROJECTNEGATION_FIELD_NUMBER = 4;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectNegation_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
     */
    public boolean hasProjectNegation() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectNegation() {
      return projectNegation_;
    }

    public static final int PROJECTALTERNATION_FIELD_NUMBER = 5;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectAlternation_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
     */
    public boolean hasProjectAlternation() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectAlternation() {
      return projectAlternation_;
    }

    public static final int PROJECTCOVER_FIELD_NUMBER = 6;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectCover_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
     */
    public boolean hasProjectCover() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectCover() {
      return projectCover_;
    }

    public static final int PROJECTINDEPENDENCE_FIELD_NUMBER = 7;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectIndependence_;
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
     */
    public boolean hasProjectIndependence() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectIndependence() {
      return projectIndependence_;
    }

    private void initFields() {
      projectEquivalence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectForwardEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectReverseEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectNegation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectAlternation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectCover_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      projectIndependence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasProjectEquivalence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectForwardEntailment()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectReverseEntailment()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectNegation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectAlternation()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectCover()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasProjectIndependence()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, projectEquivalence_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeEnum(2, projectForwardEntailment_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeEnum(3, projectReverseEntailment_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeEnum(4, projectNegation_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeEnum(5, projectAlternation_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, projectCover_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeEnum(7, projectIndependence_.getNumber());
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, projectEquivalence_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, projectForwardEntailment_.getNumber());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(3, projectReverseEntailment_.getNumber());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(4, projectNegation_.getNumber());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(5, projectAlternation_.getNumber());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, projectCover_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(7, projectIndependence_.getNumber());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.Polarity}
     *
     * <pre>
     * The polarity of a word, according to Natural Logic
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.Polarity)
        edu.stanford.nlp.pipeline.CoreNLPProtos.PolarityOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Polarity_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.class, edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        projectEquivalence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000001);
        projectForwardEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000002);
        projectReverseEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000004);
        projectNegation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000008);
        projectAlternation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000010);
        projectCover_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000020);
        projectIndependence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity result = new edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.projectEquivalence_ = projectEquivalence_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.projectForwardEntailment_ = projectForwardEntailment_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.projectReverseEntailment_ = projectReverseEntailment_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.projectNegation_ = projectNegation_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.projectAlternation_ = projectAlternation_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.projectCover_ = projectCover_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.projectIndependence_ = projectIndependence_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity.getDefaultInstance()) return this;
        if (other.hasProjectEquivalence()) {
          setProjectEquivalence(other.getProjectEquivalence());
        }
        if (other.hasProjectForwardEntailment()) {
          setProjectForwardEntailment(other.getProjectForwardEntailment());
        }
        if (other.hasProjectReverseEntailment()) {
          setProjectReverseEntailment(other.getProjectReverseEntailment());
        }
        if (other.hasProjectNegation()) {
          setProjectNegation(other.getProjectNegation());
        }
        if (other.hasProjectAlternation()) {
          setProjectAlternation(other.getProjectAlternation());
        }
        if (other.hasProjectCover()) {
          setProjectCover(other.getProjectCover());
        }
        if (other.hasProjectIndependence()) {
          setProjectIndependence(other.getProjectIndependence());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasProjectEquivalence()) {
          
          return false;
        }
        if (!hasProjectForwardEntailment()) {
          
          return false;
        }
        if (!hasProjectReverseEntailment()) {
          
          return false;
        }
        if (!hasProjectNegation()) {
          
          return false;
        }
        if (!hasProjectAlternation()) {
          
          return false;
        }
        if (!hasProjectCover()) {
          
          return false;
        }
        if (!hasProjectIndependence()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.Polarity) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectEquivalence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
       */
      public boolean hasProjectEquivalence() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectEquivalence() {
        return projectEquivalence_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
       */
      public Builder setProjectEquivalence(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        projectEquivalence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectEquivalence = 1;</code>
       */
      public Builder clearProjectEquivalence() {
        bitField0_ = (bitField0_ & ~0x00000001);
        projectEquivalence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectForwardEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
       */
      public boolean hasProjectForwardEntailment() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectForwardEntailment() {
        return projectForwardEntailment_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
       */
      public Builder setProjectForwardEntailment(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        projectForwardEntailment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectForwardEntailment = 2;</code>
       */
      public Builder clearProjectForwardEntailment() {
        bitField0_ = (bitField0_ & ~0x00000002);
        projectForwardEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectReverseEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
       */
      public boolean hasProjectReverseEntailment() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectReverseEntailment() {
        return projectReverseEntailment_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
       */
      public Builder setProjectReverseEntailment(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000004;
        projectReverseEntailment_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectReverseEntailment = 3;</code>
       */
      public Builder clearProjectReverseEntailment() {
        bitField0_ = (bitField0_ & ~0x00000004);
        projectReverseEntailment_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectNegation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
       */
      public boolean hasProjectNegation() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectNegation() {
        return projectNegation_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
       */
      public Builder setProjectNegation(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000008;
        projectNegation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectNegation = 4;</code>
       */
      public Builder clearProjectNegation() {
        bitField0_ = (bitField0_ & ~0x00000008);
        projectNegation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectAlternation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
       */
      public boolean hasProjectAlternation() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectAlternation() {
        return projectAlternation_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
       */
      public Builder setProjectAlternation(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000010;
        projectAlternation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectAlternation = 5;</code>
       */
      public Builder clearProjectAlternation() {
        bitField0_ = (bitField0_ & ~0x00000010);
        projectAlternation_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectCover_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
       */
      public boolean hasProjectCover() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectCover() {
        return projectCover_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
       */
      public Builder setProjectCover(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        projectCover_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectCover = 6;</code>
       */
      public Builder clearProjectCover() {
        bitField0_ = (bitField0_ & ~0x00000020);
        projectCover_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation projectIndependence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
       */
      public boolean hasProjectIndependence() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation getProjectIndependence() {
        return projectIndependence_;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
       */
      public Builder setProjectIndependence(edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000040;
        projectIndependence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .edu.stanford.nlp.pipeline.NaturalLogicRelation projectIndependence = 7;</code>
       */
      public Builder clearProjectIndependence() {
        bitField0_ = (bitField0_ & ~0x00000040);
        projectIndependence_ = edu.stanford.nlp.pipeline.CoreNLPProtos.NaturalLogicRelation.EQUIVALENCE;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.Polarity)
    }

    static {
      defaultInstance = new Polarity(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.Polarity)
  }

  public interface NERMentionOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.NERMention)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional uint32 sentenceIndex = 1;</code>
     */
    boolean hasSentenceIndex();
    /**
     * <code>optional uint32 sentenceIndex = 1;</code>
     */
    int getSentenceIndex();

    /**
     * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
     */
    boolean hasTokenStartInSentenceInclusive();
    /**
     * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
     */
    int getTokenStartInSentenceInclusive();

    /**
     * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
     */
    boolean hasTokenEndInSentenceExclusive();
    /**
     * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
     */
    int getTokenEndInSentenceExclusive();

    /**
     * <code>required string ner = 4;</code>
     */
    boolean hasNer();
    /**
     * <code>required string ner = 4;</code>
     */
    java.lang.String getNer();
    /**
     * <code>required string ner = 4;</code>
     */
    com.google.protobuf.ByteString
        getNerBytes();

    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    boolean hasNormalizedNER();
    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    java.lang.String getNormalizedNER();
    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    com.google.protobuf.ByteString
        getNormalizedNERBytes();

    /**
     * <code>optional string entityType = 6;</code>
     */
    boolean hasEntityType();
    /**
     * <code>optional string entityType = 6;</code>
     */
    java.lang.String getEntityType();
    /**
     * <code>optional string entityType = 6;</code>
     */
    com.google.protobuf.ByteString
        getEntityTypeBytes();

    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    boolean hasTimex();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimex();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexOrBuilder();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.NERMention}
   *
   * <pre>
   * An NER mention in the text
   * </pre>
   */
  public static final class NERMention extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.NERMention)
      NERMentionOrBuilder {
    // Use NERMention.newBuilder() to construct.
    private NERMention(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private NERMention(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final NERMention defaultInstance;
    public static NERMention getDefaultInstance() {
      return defaultInstance;
    }

    public NERMention getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private NERMention(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              bitField0_ |= 0x00000001;
              sentenceIndex_ = input.readUInt32();
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              tokenStartInSentenceInclusive_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              tokenEndInSentenceExclusive_ = input.readUInt32();
              break;
            }
            case 34: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000008;
              ner_ = bs;
              break;
            }
            case 42: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000010;
              normalizedNER_ = bs;
              break;
            }
            case 50: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000020;
              entityType_ = bs;
              break;
            }
            case 58: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder subBuilder = null;
              if (((bitField0_ & 0x00000040) == 0x00000040)) {
                subBuilder = timex_.toBuilder();
              }
              timex_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(timex_);
                timex_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000040;
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_NERMention_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder.class);
    }

    public static com.google.protobuf.Parser<NERMention> PARSER =
        new com.google.protobuf.AbstractParser<NERMention>() {
      public NERMention parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new NERMention(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<NERMention> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SENTENCEINDEX_FIELD_NUMBER = 1;
    private int sentenceIndex_;
    /**
     * <code>optional uint32 sentenceIndex = 1;</code>
     */
    public boolean hasSentenceIndex() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 sentenceIndex = 1;</code>
     */
    public int getSentenceIndex() {
      return sentenceIndex_;
    }

    public static final int TOKENSTARTINSENTENCEINCLUSIVE_FIELD_NUMBER = 2;
    private int tokenStartInSentenceInclusive_;
    /**
     * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
     */
    public boolean hasTokenStartInSentenceInclusive() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
     */
    public int getTokenStartInSentenceInclusive() {
      return tokenStartInSentenceInclusive_;
    }

    public static final int TOKENENDINSENTENCEEXCLUSIVE_FIELD_NUMBER = 3;
    private int tokenEndInSentenceExclusive_;
    /**
     * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
     */
    public boolean hasTokenEndInSentenceExclusive() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
     */
    public int getTokenEndInSentenceExclusive() {
      return tokenEndInSentenceExclusive_;
    }

    public static final int NER_FIELD_NUMBER = 4;
    private java.lang.Object ner_;
    /**
     * <code>required string ner = 4;</code>
     */
    public boolean hasNer() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>required string ner = 4;</code>
     */
    public java.lang.String getNer() {
      java.lang.Object ref = ner_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          ner_ = s;
        }
        return s;
      }
    }
    /**
     * <code>required string ner = 4;</code>
     */
    public com.google.protobuf.ByteString
        getNerBytes() {
      java.lang.Object ref = ner_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        ner_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NORMALIZEDNER_FIELD_NUMBER = 5;
    private java.lang.Object normalizedNER_;
    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    public boolean hasNormalizedNER() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    public java.lang.String getNormalizedNER() {
      java.lang.Object ref = normalizedNER_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          normalizedNER_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string normalizedNER = 5;</code>
     */
    public com.google.protobuf.ByteString
        getNormalizedNERBytes() {
      java.lang.Object ref = normalizedNER_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        normalizedNER_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int ENTITYTYPE_FIELD_NUMBER = 6;
    private java.lang.Object entityType_;
    /**
     * <code>optional string entityType = 6;</code>
     */
    public boolean hasEntityType() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional string entityType = 6;</code>
     */
    public java.lang.String getEntityType() {
      java.lang.Object ref = entityType_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          entityType_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string entityType = 6;</code>
     */
    public com.google.protobuf.ByteString
        getEntityTypeBytes() {
      java.lang.Object ref = entityType_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        entityType_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int TIMEX_FIELD_NUMBER = 7;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.Timex timex_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    public boolean hasTimex() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimex() {
      return timex_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexOrBuilder() {
      return timex_;
    }

    private void initFields() {
      sentenceIndex_ = 0;
      tokenStartInSentenceInclusive_ = 0;
      tokenEndInSentenceExclusive_ = 0;
      ner_ = "";
      normalizedNER_ = "";
      entityType_ = "";
      timex_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasTokenStartInSentenceInclusive()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasTokenEndInSentenceExclusive()) {
        memoizedIsInitialized = 0;
        return false;
      }
      if (!hasNer()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(1, sentenceIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeUInt32(2, tokenStartInSentenceInclusive_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeUInt32(3, tokenEndInSentenceExclusive_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeBytes(4, getNerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeBytes(5, getNormalizedNERBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBytes(6, getEntityTypeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeMessage(7, timex_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(1, sentenceIndex_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, tokenStartInSentenceInclusive_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(3, tokenEndInSentenceExclusive_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(4, getNerBytes());
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(5, getNormalizedNERBytes());
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(6, getEntityTypeBytes());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(7, timex_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.NERMention}
     *
     * <pre>
     * An NER mention in the text
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.NERMention)
        edu.stanford.nlp.pipeline.CoreNLPProtos.NERMentionOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_NERMention_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.class, edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTimexFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        sentenceIndex_ = 0;
        bitField0_ = (bitField0_ & ~0x00000001);
        tokenStartInSentenceInclusive_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        tokenEndInSentenceExclusive_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        ner_ = "";
        bitField0_ = (bitField0_ & ~0x00000008);
        normalizedNER_ = "";
        bitField0_ = (bitField0_ & ~0x00000010);
        entityType_ = "";
        bitField0_ = (bitField0_ & ~0x00000020);
        if (timexBuilder_ == null) {
          timex_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
        } else {
          timexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention result = new edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.sentenceIndex_ = sentenceIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.tokenStartInSentenceInclusive_ = tokenStartInSentenceInclusive_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.tokenEndInSentenceExclusive_ = tokenEndInSentenceExclusive_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.ner_ = ner_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.normalizedNER_ = normalizedNER_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.entityType_ = entityType_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        if (timexBuilder_ == null) {
          result.timex_ = timex_;
        } else {
          result.timex_ = timexBuilder_.build();
        }
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention.getDefaultInstance()) return this;
        if (other.hasSentenceIndex()) {
          setSentenceIndex(other.getSentenceIndex());
        }
        if (other.hasTokenStartInSentenceInclusive()) {
          setTokenStartInSentenceInclusive(other.getTokenStartInSentenceInclusive());
        }
        if (other.hasTokenEndInSentenceExclusive()) {
          setTokenEndInSentenceExclusive(other.getTokenEndInSentenceExclusive());
        }
        if (other.hasNer()) {
          bitField0_ |= 0x00000008;
          ner_ = other.ner_;
          onChanged();
        }
        if (other.hasNormalizedNER()) {
          bitField0_ |= 0x00000010;
          normalizedNER_ = other.normalizedNER_;
          onChanged();
        }
        if (other.hasEntityType()) {
          bitField0_ |= 0x00000020;
          entityType_ = other.entityType_;
          onChanged();
        }
        if (other.hasTimex()) {
          mergeTimex(other.getTimex());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasTokenStartInSentenceInclusive()) {
          
          return false;
        }
        if (!hasTokenEndInSentenceExclusive()) {
          
          return false;
        }
        if (!hasNer()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.NERMention) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private int sentenceIndex_ ;
      /**
       * <code>optional uint32 sentenceIndex = 1;</code>
       */
      public boolean hasSentenceIndex() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional uint32 sentenceIndex = 1;</code>
       */
      public int getSentenceIndex() {
        return sentenceIndex_;
      }
      /**
       * <code>optional uint32 sentenceIndex = 1;</code>
       */
      public Builder setSentenceIndex(int value) {
        bitField0_ |= 0x00000001;
        sentenceIndex_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 sentenceIndex = 1;</code>
       */
      public Builder clearSentenceIndex() {
        bitField0_ = (bitField0_ & ~0x00000001);
        sentenceIndex_ = 0;
        onChanged();
        return this;
      }

      private int tokenStartInSentenceInclusive_ ;
      /**
       * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
       */
      public boolean hasTokenStartInSentenceInclusive() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
       */
      public int getTokenStartInSentenceInclusive() {
        return tokenStartInSentenceInclusive_;
      }
      /**
       * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
       */
      public Builder setTokenStartInSentenceInclusive(int value) {
        bitField0_ |= 0x00000002;
        tokenStartInSentenceInclusive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tokenStartInSentenceInclusive = 2;</code>
       */
      public Builder clearTokenStartInSentenceInclusive() {
        bitField0_ = (bitField0_ & ~0x00000002);
        tokenStartInSentenceInclusive_ = 0;
        onChanged();
        return this;
      }

      private int tokenEndInSentenceExclusive_ ;
      /**
       * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
       */
      public boolean hasTokenEndInSentenceExclusive() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
       */
      public int getTokenEndInSentenceExclusive() {
        return tokenEndInSentenceExclusive_;
      }
      /**
       * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
       */
      public Builder setTokenEndInSentenceExclusive(int value) {
        bitField0_ |= 0x00000004;
        tokenEndInSentenceExclusive_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required uint32 tokenEndInSentenceExclusive = 3;</code>
       */
      public Builder clearTokenEndInSentenceExclusive() {
        bitField0_ = (bitField0_ & ~0x00000004);
        tokenEndInSentenceExclusive_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object ner_ = "";
      /**
       * <code>required string ner = 4;</code>
       */
      public boolean hasNer() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>required string ner = 4;</code>
       */
      public java.lang.String getNer() {
        java.lang.Object ref = ner_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            ner_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>required string ner = 4;</code>
       */
      public com.google.protobuf.ByteString
          getNerBytes() {
        java.lang.Object ref = ner_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          ner_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>required string ner = 4;</code>
       */
      public Builder setNer(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ner_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required string ner = 4;</code>
       */
      public Builder clearNer() {
        bitField0_ = (bitField0_ & ~0x00000008);
        ner_ = getDefaultInstance().getNer();
        onChanged();
        return this;
      }
      /**
       * <code>required string ner = 4;</code>
       */
      public Builder setNerBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000008;
        ner_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object normalizedNER_ = "";
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public boolean hasNormalizedNER() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public java.lang.String getNormalizedNER() {
        java.lang.Object ref = normalizedNER_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            normalizedNER_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public com.google.protobuf.ByteString
          getNormalizedNERBytes() {
        java.lang.Object ref = normalizedNER_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          normalizedNER_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public Builder setNormalizedNER(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        normalizedNER_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public Builder clearNormalizedNER() {
        bitField0_ = (bitField0_ & ~0x00000010);
        normalizedNER_ = getDefaultInstance().getNormalizedNER();
        onChanged();
        return this;
      }
      /**
       * <code>optional string normalizedNER = 5;</code>
       */
      public Builder setNormalizedNERBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000010;
        normalizedNER_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object entityType_ = "";
      /**
       * <code>optional string entityType = 6;</code>
       */
      public boolean hasEntityType() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional string entityType = 6;</code>
       */
      public java.lang.String getEntityType() {
        java.lang.Object ref = entityType_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            entityType_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string entityType = 6;</code>
       */
      public com.google.protobuf.ByteString
          getEntityTypeBytes() {
        java.lang.Object ref = entityType_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          entityType_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string entityType = 6;</code>
       */
      public Builder setEntityType(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        entityType_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string entityType = 6;</code>
       */
      public Builder clearEntityType() {
        bitField0_ = (bitField0_ & ~0x00000020);
        entityType_ = getDefaultInstance().getEntityType();
        onChanged();
        return this;
      }
      /**
       * <code>optional string entityType = 6;</code>
       */
      public Builder setEntityTypeBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000020;
        entityType_ = value;
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.Timex timex_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder> timexBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public boolean hasTimex() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex getTimex() {
        if (timexBuilder_ == null) {
          return timex_;
        } else {
          return timexBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public Builder setTimex(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex value) {
        if (timexBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          timex_ = value;
          onChanged();
        } else {
          timexBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public Builder setTimex(
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder builderForValue) {
        if (timexBuilder_ == null) {
          timex_ = builderForValue.build();
          onChanged();
        } else {
          timexBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public Builder mergeTimex(edu.stanford.nlp.pipeline.CoreNLPProtos.Timex value) {
        if (timexBuilder_ == null) {
          if (((bitField0_ & 0x00000040) == 0x00000040) &&
              timex_ != edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance()) {
            timex_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.newBuilder(timex_).mergeFrom(value).buildPartial();
          } else {
            timex_ = value;
          }
          onChanged();
        } else {
          timexBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000040;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public Builder clearTimex() {
        if (timexBuilder_ == null) {
          timex_ = edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.getDefaultInstance();
          onChanged();
        } else {
          timexBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000040);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder getTimexBuilder() {
        bitField0_ |= 0x00000040;
        onChanged();
        return getTimexFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder getTimexOrBuilder() {
        if (timexBuilder_ != null) {
          return timexBuilder_.getMessageOrBuilder();
        } else {
          return timex_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.Timex timex = 7;</code>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder> 
          getTimexFieldBuilder() {
        if (timexBuilder_ == null) {
          timexBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.Timex, edu.stanford.nlp.pipeline.CoreNLPProtos.Timex.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.TimexOrBuilder>(
                  getTimex(),
                  getParentForChildren(),
                  isClean());
          timex_ = null;
        }
        return timexBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.NERMention)
    }

    static {
      defaultInstance = new NERMention(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.NERMention)
  }

  public interface SentenceFragmentOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.SentenceFragment)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    java.util.List<java.lang.Integer> getTokenIndexList();
    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    int getTokenIndexCount();
    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    int getTokenIndex(int index);

    /**
     * <code>optional uint32 root = 2;</code>
     */
    boolean hasRoot();
    /**
     * <code>optional uint32 root = 2;</code>
     */
    int getRoot();

    /**
     * <code>optional bool assumedTruth = 3;</code>
     */
    boolean hasAssumedTruth();
    /**
     * <code>optional bool assumedTruth = 3;</code>
     */
    boolean getAssumedTruth();

    /**
     * <code>optional double score = 4;</code>
     */
    boolean hasScore();
    /**
     * <code>optional double score = 4;</code>
     */
    double getScore();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.SentenceFragment}
   *
   * <pre>
   * An entailed sentence fragment.
   * Created by the openie annotator.
   * </pre>
   */
  public static final class SentenceFragment extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.SentenceFragment)
      SentenceFragmentOrBuilder {
    // Use SentenceFragment.newBuilder() to construct.
    private SentenceFragment(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private SentenceFragment(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final SentenceFragment defaultInstance;
    public static SentenceFragment getDefaultInstance() {
      return defaultInstance;
    }

    public SentenceFragment getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private SentenceFragment(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                tokenIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              tokenIndex_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                tokenIndex_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                tokenIndex_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 16: {
              bitField0_ |= 0x00000001;
              root_ = input.readUInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000002;
              assumedTruth_ = input.readBool();
              break;
            }
            case 33: {
              bitField0_ |= 0x00000004;
              score_ = input.readDouble();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          tokenIndex_ = java.util.Collections.unmodifiableList(tokenIndex_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SentenceFragment_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.class, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder.class);
    }

    public static com.google.protobuf.Parser<SentenceFragment> PARSER =
        new com.google.protobuf.AbstractParser<SentenceFragment>() {
      public SentenceFragment parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SentenceFragment(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<SentenceFragment> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int TOKENINDEX_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> tokenIndex_;
    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getTokenIndexList() {
      return tokenIndex_;
    }
    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    public int getTokenIndexCount() {
      return tokenIndex_.size();
    }
    /**
     * <code>repeated uint32 tokenIndex = 1;</code>
     */
    public int getTokenIndex(int index) {
      return tokenIndex_.get(index);
    }

    public static final int ROOT_FIELD_NUMBER = 2;
    private int root_;
    /**
     * <code>optional uint32 root = 2;</code>
     */
    public boolean hasRoot() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional uint32 root = 2;</code>
     */
    public int getRoot() {
      return root_;
    }

    public static final int ASSUMEDTRUTH_FIELD_NUMBER = 3;
    private boolean assumedTruth_;
    /**
     * <code>optional bool assumedTruth = 3;</code>
     */
    public boolean hasAssumedTruth() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional bool assumedTruth = 3;</code>
     */
    public boolean getAssumedTruth() {
      return assumedTruth_;
    }

    public static final int SCORE_FIELD_NUMBER = 4;
    private double score_;
    /**
     * <code>optional double score = 4;</code>
     */
    public boolean hasScore() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional double score = 4;</code>
     */
    public double getScore() {
      return score_;
    }

    private void initFields() {
      tokenIndex_ = java.util.Collections.emptyList();
      root_ = 0;
      assumedTruth_ = false;
      score_ = 0D;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < tokenIndex_.size(); i++) {
        output.writeUInt32(1, tokenIndex_.get(i));
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeUInt32(2, root_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBool(3, assumedTruth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeDouble(4, score_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < tokenIndex_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(tokenIndex_.get(i));
        }
        size += dataSize;
        size += 1 * getTokenIndexList().size();
      }
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt32Size(2, root_);
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(3, assumedTruth_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, score_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.SentenceFragment}
     *
     * <pre>
     * An entailed sentence fragment.
     * Created by the openie annotator.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.SentenceFragment)
        edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragmentOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SentenceFragment_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.class, edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        tokenIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        root_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        assumedTruth_ = false;
        bitField0_ = (bitField0_ & ~0x00000004);
        score_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment result = new edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          tokenIndex_ = java.util.Collections.unmodifiableList(tokenIndex_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.tokenIndex_ = tokenIndex_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000001;
        }
        result.root_ = root_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000002;
        }
        result.assumedTruth_ = assumedTruth_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000004;
        }
        result.score_ = score_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment.getDefaultInstance()) return this;
        if (!other.tokenIndex_.isEmpty()) {
          if (tokenIndex_.isEmpty()) {
            tokenIndex_ = other.tokenIndex_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureTokenIndexIsMutable();
            tokenIndex_.addAll(other.tokenIndex_);
          }
          onChanged();
        }
        if (other.hasRoot()) {
          setRoot(other.getRoot());
        }
        if (other.hasAssumedTruth()) {
          setAssumedTruth(other.getAssumedTruth());
        }
        if (other.hasScore()) {
          setScore(other.getScore());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.SentenceFragment) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> tokenIndex_ = java.util.Collections.emptyList();
      private void ensureTokenIndexIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          tokenIndex_ = new java.util.ArrayList<java.lang.Integer>(tokenIndex_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getTokenIndexList() {
        return java.util.Collections.unmodifiableList(tokenIndex_);
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public int getTokenIndexCount() {
        return tokenIndex_.size();
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public int getTokenIndex(int index) {
        return tokenIndex_.get(index);
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public Builder setTokenIndex(
          int index, int value) {
        ensureTokenIndexIsMutable();
        tokenIndex_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public Builder addTokenIndex(int value) {
        ensureTokenIndexIsMutable();
        tokenIndex_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public Builder addAllTokenIndex(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureTokenIndexIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, tokenIndex_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 tokenIndex = 1;</code>
       */
      public Builder clearTokenIndex() {
        tokenIndex_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private int root_ ;
      /**
       * <code>optional uint32 root = 2;</code>
       */
      public boolean hasRoot() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional uint32 root = 2;</code>
       */
      public int getRoot() {
        return root_;
      }
      /**
       * <code>optional uint32 root = 2;</code>
       */
      public Builder setRoot(int value) {
        bitField0_ |= 0x00000002;
        root_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint32 root = 2;</code>
       */
      public Builder clearRoot() {
        bitField0_ = (bitField0_ & ~0x00000002);
        root_ = 0;
        onChanged();
        return this;
      }

      private boolean assumedTruth_ ;
      /**
       * <code>optional bool assumedTruth = 3;</code>
       */
      public boolean hasAssumedTruth() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional bool assumedTruth = 3;</code>
       */
      public boolean getAssumedTruth() {
        return assumedTruth_;
      }
      /**
       * <code>optional bool assumedTruth = 3;</code>
       */
      public Builder setAssumedTruth(boolean value) {
        bitField0_ |= 0x00000004;
        assumedTruth_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool assumedTruth = 3;</code>
       */
      public Builder clearAssumedTruth() {
        bitField0_ = (bitField0_ & ~0x00000004);
        assumedTruth_ = false;
        onChanged();
        return this;
      }

      private double score_ ;
      /**
       * <code>optional double score = 4;</code>
       */
      public boolean hasScore() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double score = 4;</code>
       */
      public double getScore() {
        return score_;
      }
      /**
       * <code>optional double score = 4;</code>
       */
      public Builder setScore(double value) {
        bitField0_ |= 0x00000008;
        score_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double score = 4;</code>
       */
      public Builder clearScore() {
        bitField0_ = (bitField0_ & ~0x00000008);
        score_ = 0D;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.SentenceFragment)
    }

    static {
      defaultInstance = new SentenceFragment(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.SentenceFragment)
  }

  public interface RelationTripleOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.RelationTriple)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    boolean hasSubject();
    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    java.lang.String getSubject();
    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    com.google.protobuf.ByteString
        getSubjectBytes();

    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    boolean hasRelation();
    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    java.lang.String getRelation();
    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    com.google.protobuf.ByteString
        getRelationBytes();

    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    boolean hasObject();
    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    java.lang.String getObject();
    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    com.google.protobuf.ByteString
        getObjectBytes();

    /**
     * <code>optional double confidence = 4;</code>
     *
     * <pre>
     * The [optional] confidence of the extraction
     * </pre>
     */
    boolean hasConfidence();
    /**
     * <code>optional double confidence = 4;</code>
     *
     * <pre>
     * The [optional] confidence of the extraction
     * </pre>
     */
    double getConfidence();

    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    java.util.List<java.lang.Integer> getSubjectTokensList();
    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    int getSubjectTokensCount();
    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    int getSubjectTokens(int index);

    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    java.util.List<java.lang.Integer> getRelationTokensList();
    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    int getRelationTokensCount();
    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    int getRelationTokens(int index);

    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    java.util.List<java.lang.Integer> getObjectTokensList();
    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    int getObjectTokensCount();
    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    int getObjectTokens(int index);

    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    boolean hasTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getTree();
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getTreeOrBuilder();

    /**
     * <code>optional bool istmod = 9;</code>
     *
     * <pre>
     * If true, this expresses an implicit tmod relation
     * </pre>
     */
    boolean hasIstmod();
    /**
     * <code>optional bool istmod = 9;</code>
     *
     * <pre>
     * If true, this expresses an implicit tmod relation
     * </pre>
     */
    boolean getIstmod();

    /**
     * <code>optional bool prefixBe = 10;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' prefix
     * </pre>
     */
    boolean hasPrefixBe();
    /**
     * <code>optional bool prefixBe = 10;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' prefix
     * </pre>
     */
    boolean getPrefixBe();

    /**
     * <code>optional bool suffixBe = 11;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' suffix
     * </pre>
     */
    boolean hasSuffixBe();
    /**
     * <code>optional bool suffixBe = 11;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' suffix
     * </pre>
     */
    boolean getSuffixBe();

    /**
     * <code>optional bool suffixOf = 12;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'of' prefix
     * </pre>
     */
    boolean hasSuffixOf();
    /**
     * <code>optional bool suffixOf = 12;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'of' prefix
     * </pre>
     */
    boolean getSuffixOf();
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.RelationTriple}
   *
   * <pre>
   * An OpenIE relation triple.
   * Created by the openie annotator.
   * </pre>
   */
  public static final class RelationTriple extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.RelationTriple)
      RelationTripleOrBuilder {
    // Use RelationTriple.newBuilder() to construct.
    private RelationTriple(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private RelationTriple(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final RelationTriple defaultInstance;
    public static RelationTriple getDefaultInstance() {
      return defaultInstance;
    }

    public RelationTriple getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private RelationTriple(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000001;
              subject_ = bs;
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000002;
              relation_ = bs;
              break;
            }
            case 26: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000004;
              object_ = bs;
              break;
            }
            case 33: {
              bitField0_ |= 0x00000008;
              confidence_ = input.readDouble();
              break;
            }
            case 40: {
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
                subjectTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              subjectTokens_.add(input.readUInt32());
              break;
            }
            case 42: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000010) == 0x00000010) && input.getBytesUntilLimit() > 0) {
                subjectTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000010;
              }
              while (input.getBytesUntilLimit() > 0) {
                subjectTokens_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 48: {
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
                relationTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              relationTokens_.add(input.readUInt32());
              break;
            }
            case 50: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000020) == 0x00000020) && input.getBytesUntilLimit() > 0) {
                relationTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000020;
              }
              while (input.getBytesUntilLimit() > 0) {
                relationTokens_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 56: {
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
                objectTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              objectTokens_.add(input.readUInt32());
              break;
            }
            case 58: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000040) == 0x00000040) && input.getBytesUntilLimit() > 0) {
                objectTokens_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000040;
              }
              while (input.getBytesUntilLimit() > 0) {
                objectTokens_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 66: {
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder subBuilder = null;
              if (((bitField0_ & 0x00000010) == 0x00000010)) {
                subBuilder = tree_.toBuilder();
              }
              tree_ = input.readMessage(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.PARSER, extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(tree_);
                tree_ = subBuilder.buildPartial();
              }
              bitField0_ |= 0x00000010;
              break;
            }
            case 72: {
              bitField0_ |= 0x00000020;
              istmod_ = input.readBool();
              break;
            }
            case 80: {
              bitField0_ |= 0x00000040;
              prefixBe_ = input.readBool();
              break;
            }
            case 88: {
              bitField0_ |= 0x00000080;
              suffixBe_ = input.readBool();
              break;
            }
            case 96: {
              bitField0_ |= 0x00000100;
              suffixOf_ = input.readBool();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000010) == 0x00000010)) {
          subjectTokens_ = java.util.Collections.unmodifiableList(subjectTokens_);
        }
        if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
          relationTokens_ = java.util.Collections.unmodifiableList(relationTokens_);
        }
        if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
          objectTokens_ = java.util.Collections.unmodifiableList(objectTokens_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_RelationTriple_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.class, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder.class);
    }

    public static com.google.protobuf.Parser<RelationTriple> PARSER =
        new com.google.protobuf.AbstractParser<RelationTriple>() {
      public RelationTriple parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new RelationTriple(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<RelationTriple> getParserForType() {
      return PARSER;
    }

    private int bitField0_;
    public static final int SUBJECT_FIELD_NUMBER = 1;
    private java.lang.Object subject_;
    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    public boolean hasSubject() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    public java.lang.String getSubject() {
      java.lang.Object ref = subject_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          subject_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string subject = 1;</code>
     *
     * <pre>
     * The surface form of the subject
     * </pre>
     */
    public com.google.protobuf.ByteString
        getSubjectBytes() {
      java.lang.Object ref = subject_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        subject_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int RELATION_FIELD_NUMBER = 2;
    private java.lang.Object relation_;
    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    public boolean hasRelation() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    public java.lang.String getRelation() {
      java.lang.Object ref = relation_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          relation_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string relation = 2;</code>
     *
     * <pre>
     * The surface form of the relation (required)
     * </pre>
     */
    public com.google.protobuf.ByteString
        getRelationBytes() {
      java.lang.Object ref = relation_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        relation_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int OBJECT_FIELD_NUMBER = 3;
    private java.lang.Object object_;
    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    public boolean hasObject() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    public java.lang.String getObject() {
      java.lang.Object ref = object_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          object_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string object = 3;</code>
     *
     * <pre>
     * The surface form of the object
     * </pre>
     */
    public com.google.protobuf.ByteString
        getObjectBytes() {
      java.lang.Object ref = object_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        object_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int CONFIDENCE_FIELD_NUMBER = 4;
    private double confidence_;
    /**
     * <code>optional double confidence = 4;</code>
     *
     * <pre>
     * The [optional] confidence of the extraction
     * </pre>
     */
    public boolean hasConfidence() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional double confidence = 4;</code>
     *
     * <pre>
     * The [optional] confidence of the extraction
     * </pre>
     */
    public double getConfidence() {
      return confidence_;
    }

    public static final int SUBJECTTOKENS_FIELD_NUMBER = 5;
    private java.util.List<java.lang.Integer> subjectTokens_;
    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getSubjectTokensList() {
      return subjectTokens_;
    }
    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    public int getSubjectTokensCount() {
      return subjectTokens_.size();
    }
    /**
     * <code>repeated uint32 subjectTokens = 5;</code>
     *
     * <pre>
     * The tokens comprising the subject of the triple
     * </pre>
     */
    public int getSubjectTokens(int index) {
      return subjectTokens_.get(index);
    }

    public static final int RELATIONTOKENS_FIELD_NUMBER = 6;
    private java.util.List<java.lang.Integer> relationTokens_;
    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getRelationTokensList() {
      return relationTokens_;
    }
    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    public int getRelationTokensCount() {
      return relationTokens_.size();
    }
    /**
     * <code>repeated uint32 relationTokens = 6;</code>
     *
     * <pre>
     * The tokens comprising the relation of the triple
     * </pre>
     */
    public int getRelationTokens(int index) {
      return relationTokens_.get(index);
    }

    public static final int OBJECTTOKENS_FIELD_NUMBER = 7;
    private java.util.List<java.lang.Integer> objectTokens_;
    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    public java.util.List<java.lang.Integer>
        getObjectTokensList() {
      return objectTokens_;
    }
    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    public int getObjectTokensCount() {
      return objectTokens_.size();
    }
    /**
     * <code>repeated uint32 objectTokens = 7;</code>
     *
     * <pre>
     * The tokens comprising the object of the triple
     * </pre>
     */
    public int getObjectTokens(int index) {
      return objectTokens_.get(index);
    }

    public static final int TREE_FIELD_NUMBER = 8;
    private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph tree_;
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    public boolean hasTree() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getTree() {
      return tree_;
    }
    /**
     * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
     *
     * <pre>
     * The dependency graph fragment for this triple
     * </pre>
     */
    public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getTreeOrBuilder() {
      return tree_;
    }

    public static final int ISTMOD_FIELD_NUMBER = 9;
    private boolean istmod_;
    /**
     * <code>optional bool istmod = 9;</code>
     *
     * <pre>
     * If true, this expresses an implicit tmod relation
     * </pre>
     */
    public boolean hasIstmod() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional bool istmod = 9;</code>
     *
     * <pre>
     * If true, this expresses an implicit tmod relation
     * </pre>
     */
    public boolean getIstmod() {
      return istmod_;
    }

    public static final int PREFIXBE_FIELD_NUMBER = 10;
    private boolean prefixBe_;
    /**
     * <code>optional bool prefixBe = 10;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' prefix
     * </pre>
     */
    public boolean hasPrefixBe() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional bool prefixBe = 10;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' prefix
     * </pre>
     */
    public boolean getPrefixBe() {
      return prefixBe_;
    }

    public static final int SUFFIXBE_FIELD_NUMBER = 11;
    private boolean suffixBe_;
    /**
     * <code>optional bool suffixBe = 11;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' suffix
     * </pre>
     */
    public boolean hasSuffixBe() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional bool suffixBe = 11;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'be' suffix
     * </pre>
     */
    public boolean getSuffixBe() {
      return suffixBe_;
    }

    public static final int SUFFIXOF_FIELD_NUMBER = 12;
    private boolean suffixOf_;
    /**
     * <code>optional bool suffixOf = 12;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'of' prefix
     * </pre>
     */
    public boolean hasSuffixOf() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional bool suffixOf = 12;</code>
     *
     * <pre>
     * If true, this relation string is missing a 'of' prefix
     * </pre>
     */
    public boolean getSuffixOf() {
      return suffixOf_;
    }

    private void initFields() {
      subject_ = "";
      relation_ = "";
      object_ = "";
      confidence_ = 0D;
      subjectTokens_ = java.util.Collections.emptyList();
      relationTokens_ = java.util.Collections.emptyList();
      objectTokens_ = java.util.Collections.emptyList();
      tree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      istmod_ = false;
      prefixBe_ = false;
      suffixBe_ = false;
      suffixOf_ = false;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (hasTree()) {
        if (!getTree().isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeBytes(1, getSubjectBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeBytes(2, getRelationBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeBytes(3, getObjectBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeDouble(4, confidence_);
      }
      for (int i = 0; i < subjectTokens_.size(); i++) {
        output.writeUInt32(5, subjectTokens_.get(i));
      }
      for (int i = 0; i < relationTokens_.size(); i++) {
        output.writeUInt32(6, relationTokens_.get(i));
      }
      for (int i = 0; i < objectTokens_.size(); i++) {
        output.writeUInt32(7, objectTokens_.get(i));
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeMessage(8, tree_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeBool(9, istmod_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeBool(10, prefixBe_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeBool(11, suffixBe_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeBool(12, suffixOf_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(1, getSubjectBytes());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(2, getRelationBytes());
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(3, getObjectBytes());
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeDoubleSize(4, confidence_);
      }
      {
        int dataSize = 0;
        for (int i = 0; i < subjectTokens_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(subjectTokens_.get(i));
        }
        size += dataSize;
        size += 1 * getSubjectTokensList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < relationTokens_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(relationTokens_.get(i));
        }
        size += dataSize;
        size += 1 * getRelationTokensList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < objectTokens_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(objectTokens_.get(i));
        }
        size += dataSize;
        size += 1 * getObjectTokensList().size();
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(8, tree_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(9, istmod_);
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(10, prefixBe_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(11, suffixBe_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(12, suffixOf_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.RelationTriple}
     *
     * <pre>
     * An OpenIE relation triple.
     * Created by the openie annotator.
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.RelationTriple)
        edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTripleOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_RelationTriple_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.class, edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getTreeFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        subject_ = "";
        bitField0_ = (bitField0_ & ~0x00000001);
        relation_ = "";
        bitField0_ = (bitField0_ & ~0x00000002);
        object_ = "";
        bitField0_ = (bitField0_ & ~0x00000004);
        confidence_ = 0D;
        bitField0_ = (bitField0_ & ~0x00000008);
        subjectTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        relationTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        objectTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        if (treeBuilder_ == null) {
          tree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
        } else {
          treeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        istmod_ = false;
        bitField0_ = (bitField0_ & ~0x00000100);
        prefixBe_ = false;
        bitField0_ = (bitField0_ & ~0x00000200);
        suffixBe_ = false;
        bitField0_ = (bitField0_ & ~0x00000400);
        suffixOf_ = false;
        bitField0_ = (bitField0_ & ~0x00000800);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple result = new edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.subject_ = subject_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.relation_ = relation_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.object_ = object_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.confidence_ = confidence_;
        if (((bitField0_ & 0x00000010) == 0x00000010)) {
          subjectTokens_ = java.util.Collections.unmodifiableList(subjectTokens_);
          bitField0_ = (bitField0_ & ~0x00000010);
        }
        result.subjectTokens_ = subjectTokens_;
        if (((bitField0_ & 0x00000020) == 0x00000020)) {
          relationTokens_ = java.util.Collections.unmodifiableList(relationTokens_);
          bitField0_ = (bitField0_ & ~0x00000020);
        }
        result.relationTokens_ = relationTokens_;
        if (((bitField0_ & 0x00000040) == 0x00000040)) {
          objectTokens_ = java.util.Collections.unmodifiableList(objectTokens_);
          bitField0_ = (bitField0_ & ~0x00000040);
        }
        result.objectTokens_ = objectTokens_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000010;
        }
        if (treeBuilder_ == null) {
          result.tree_ = tree_;
        } else {
          result.tree_ = treeBuilder_.build();
        }
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000020;
        }
        result.istmod_ = istmod_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000040;
        }
        result.prefixBe_ = prefixBe_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000080;
        }
        result.suffixBe_ = suffixBe_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000100;
        }
        result.suffixOf_ = suffixOf_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple.getDefaultInstance()) return this;
        if (other.hasSubject()) {
          bitField0_ |= 0x00000001;
          subject_ = other.subject_;
          onChanged();
        }
        if (other.hasRelation()) {
          bitField0_ |= 0x00000002;
          relation_ = other.relation_;
          onChanged();
        }
        if (other.hasObject()) {
          bitField0_ |= 0x00000004;
          object_ = other.object_;
          onChanged();
        }
        if (other.hasConfidence()) {
          setConfidence(other.getConfidence());
        }
        if (!other.subjectTokens_.isEmpty()) {
          if (subjectTokens_.isEmpty()) {
            subjectTokens_ = other.subjectTokens_;
            bitField0_ = (bitField0_ & ~0x00000010);
          } else {
            ensureSubjectTokensIsMutable();
            subjectTokens_.addAll(other.subjectTokens_);
          }
          onChanged();
        }
        if (!other.relationTokens_.isEmpty()) {
          if (relationTokens_.isEmpty()) {
            relationTokens_ = other.relationTokens_;
            bitField0_ = (bitField0_ & ~0x00000020);
          } else {
            ensureRelationTokensIsMutable();
            relationTokens_.addAll(other.relationTokens_);
          }
          onChanged();
        }
        if (!other.objectTokens_.isEmpty()) {
          if (objectTokens_.isEmpty()) {
            objectTokens_ = other.objectTokens_;
            bitField0_ = (bitField0_ & ~0x00000040);
          } else {
            ensureObjectTokensIsMutable();
            objectTokens_.addAll(other.objectTokens_);
          }
          onChanged();
        }
        if (other.hasTree()) {
          mergeTree(other.getTree());
        }
        if (other.hasIstmod()) {
          setIstmod(other.getIstmod());
        }
        if (other.hasPrefixBe()) {
          setPrefixBe(other.getPrefixBe());
        }
        if (other.hasSuffixBe()) {
          setSuffixBe(other.getSuffixBe());
        }
        if (other.hasSuffixOf()) {
          setSuffixOf(other.getSuffixOf());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (hasTree()) {
          if (!getTree().isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.RelationTriple) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.lang.Object subject_ = "";
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public boolean hasSubject() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public java.lang.String getSubject() {
        java.lang.Object ref = subject_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            subject_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public com.google.protobuf.ByteString
          getSubjectBytes() {
        java.lang.Object ref = subject_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          subject_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public Builder setSubject(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        subject_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public Builder clearSubject() {
        bitField0_ = (bitField0_ & ~0x00000001);
        subject_ = getDefaultInstance().getSubject();
        onChanged();
        return this;
      }
      /**
       * <code>optional string subject = 1;</code>
       *
       * <pre>
       * The surface form of the subject
       * </pre>
       */
      public Builder setSubjectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000001;
        subject_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object relation_ = "";
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public boolean hasRelation() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public java.lang.String getRelation() {
        java.lang.Object ref = relation_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            relation_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public com.google.protobuf.ByteString
          getRelationBytes() {
        java.lang.Object ref = relation_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          relation_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public Builder setRelation(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        relation_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public Builder clearRelation() {
        bitField0_ = (bitField0_ & ~0x00000002);
        relation_ = getDefaultInstance().getRelation();
        onChanged();
        return this;
      }
      /**
       * <code>optional string relation = 2;</code>
       *
       * <pre>
       * The surface form of the relation (required)
       * </pre>
       */
      public Builder setRelationBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000002;
        relation_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object object_ = "";
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public boolean hasObject() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public java.lang.String getObject() {
        java.lang.Object ref = object_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            object_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public com.google.protobuf.ByteString
          getObjectBytes() {
        java.lang.Object ref = object_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          object_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public Builder setObject(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        object_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public Builder clearObject() {
        bitField0_ = (bitField0_ & ~0x00000004);
        object_ = getDefaultInstance().getObject();
        onChanged();
        return this;
      }
      /**
       * <code>optional string object = 3;</code>
       *
       * <pre>
       * The surface form of the object
       * </pre>
       */
      public Builder setObjectBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000004;
        object_ = value;
        onChanged();
        return this;
      }

      private double confidence_ ;
      /**
       * <code>optional double confidence = 4;</code>
       *
       * <pre>
       * The [optional] confidence of the extraction
       * </pre>
       */
      public boolean hasConfidence() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional double confidence = 4;</code>
       *
       * <pre>
       * The [optional] confidence of the extraction
       * </pre>
       */
      public double getConfidence() {
        return confidence_;
      }
      /**
       * <code>optional double confidence = 4;</code>
       *
       * <pre>
       * The [optional] confidence of the extraction
       * </pre>
       */
      public Builder setConfidence(double value) {
        bitField0_ |= 0x00000008;
        confidence_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional double confidence = 4;</code>
       *
       * <pre>
       * The [optional] confidence of the extraction
       * </pre>
       */
      public Builder clearConfidence() {
        bitField0_ = (bitField0_ & ~0x00000008);
        confidence_ = 0D;
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> subjectTokens_ = java.util.Collections.emptyList();
      private void ensureSubjectTokensIsMutable() {
        if (!((bitField0_ & 0x00000010) == 0x00000010)) {
          subjectTokens_ = new java.util.ArrayList<java.lang.Integer>(subjectTokens_);
          bitField0_ |= 0x00000010;
         }
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getSubjectTokensList() {
        return java.util.Collections.unmodifiableList(subjectTokens_);
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public int getSubjectTokensCount() {
        return subjectTokens_.size();
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public int getSubjectTokens(int index) {
        return subjectTokens_.get(index);
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public Builder setSubjectTokens(
          int index, int value) {
        ensureSubjectTokensIsMutable();
        subjectTokens_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public Builder addSubjectTokens(int value) {
        ensureSubjectTokensIsMutable();
        subjectTokens_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public Builder addAllSubjectTokens(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureSubjectTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, subjectTokens_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 subjectTokens = 5;</code>
       *
       * <pre>
       * The tokens comprising the subject of the triple
       * </pre>
       */
      public Builder clearSubjectTokens() {
        subjectTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000010);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> relationTokens_ = java.util.Collections.emptyList();
      private void ensureRelationTokensIsMutable() {
        if (!((bitField0_ & 0x00000020) == 0x00000020)) {
          relationTokens_ = new java.util.ArrayList<java.lang.Integer>(relationTokens_);
          bitField0_ |= 0x00000020;
         }
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getRelationTokensList() {
        return java.util.Collections.unmodifiableList(relationTokens_);
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public int getRelationTokensCount() {
        return relationTokens_.size();
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public int getRelationTokens(int index) {
        return relationTokens_.get(index);
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public Builder setRelationTokens(
          int index, int value) {
        ensureRelationTokensIsMutable();
        relationTokens_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public Builder addRelationTokens(int value) {
        ensureRelationTokensIsMutable();
        relationTokens_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public Builder addAllRelationTokens(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureRelationTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, relationTokens_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 relationTokens = 6;</code>
       *
       * <pre>
       * The tokens comprising the relation of the triple
       * </pre>
       */
      public Builder clearRelationTokens() {
        relationTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000020);
        onChanged();
        return this;
      }

      private java.util.List<java.lang.Integer> objectTokens_ = java.util.Collections.emptyList();
      private void ensureObjectTokensIsMutable() {
        if (!((bitField0_ & 0x00000040) == 0x00000040)) {
          objectTokens_ = new java.util.ArrayList<java.lang.Integer>(objectTokens_);
          bitField0_ |= 0x00000040;
         }
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public java.util.List<java.lang.Integer>
          getObjectTokensList() {
        return java.util.Collections.unmodifiableList(objectTokens_);
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public int getObjectTokensCount() {
        return objectTokens_.size();
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public int getObjectTokens(int index) {
        return objectTokens_.get(index);
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public Builder setObjectTokens(
          int index, int value) {
        ensureObjectTokensIsMutable();
        objectTokens_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public Builder addObjectTokens(int value) {
        ensureObjectTokensIsMutable();
        objectTokens_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public Builder addAllObjectTokens(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureObjectTokensIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, objectTokens_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 objectTokens = 7;</code>
       *
       * <pre>
       * The tokens comprising the object of the triple
       * </pre>
       */
      public Builder clearObjectTokens() {
        objectTokens_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000040);
        onChanged();
        return this;
      }

      private edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph tree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> treeBuilder_;
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public boolean hasTree() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph getTree() {
        if (treeBuilder_ == null) {
          return tree_;
        } else {
          return treeBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public Builder setTree(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (treeBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          tree_ = value;
          onChanged();
        } else {
          treeBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public Builder setTree(
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder builderForValue) {
        if (treeBuilder_ == null) {
          tree_ = builderForValue.build();
          onChanged();
        } else {
          treeBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public Builder mergeTree(edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph value) {
        if (treeBuilder_ == null) {
          if (((bitField0_ & 0x00000080) == 0x00000080) &&
              tree_ != edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance()) {
            tree_ =
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.newBuilder(tree_).mergeFrom(value).buildPartial();
          } else {
            tree_ = value;
          }
          onChanged();
        } else {
          treeBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000080;
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public Builder clearTree() {
        if (treeBuilder_ == null) {
          tree_ = edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.getDefaultInstance();
          onChanged();
        } else {
          treeBuilder_.clear();
        }
        bitField0_ = (bitField0_ & ~0x00000080);
        return this;
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder getTreeBuilder() {
        bitField0_ |= 0x00000080;
        onChanged();
        return getTreeFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      public edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder getTreeOrBuilder() {
        if (treeBuilder_ != null) {
          return treeBuilder_.getMessageOrBuilder();
        } else {
          return tree_;
        }
      }
      /**
       * <code>optional .edu.stanford.nlp.pipeline.DependencyGraph tree = 8;</code>
       *
       * <pre>
       * The dependency graph fragment for this triple
       * </pre>
       */
      private com.google.protobuf.SingleFieldBuilder<
          edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder> 
          getTreeFieldBuilder() {
        if (treeBuilder_ == null) {
          treeBuilder_ = new com.google.protobuf.SingleFieldBuilder<
              edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraph.Builder, edu.stanford.nlp.pipeline.CoreNLPProtos.DependencyGraphOrBuilder>(
                  getTree(),
                  getParentForChildren(),
                  isClean());
          tree_ = null;
        }
        return treeBuilder_;
      }

      private boolean istmod_ ;
      /**
       * <code>optional bool istmod = 9;</code>
       *
       * <pre>
       * If true, this expresses an implicit tmod relation
       * </pre>
       */
      public boolean hasIstmod() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional bool istmod = 9;</code>
       *
       * <pre>
       * If true, this expresses an implicit tmod relation
       * </pre>
       */
      public boolean getIstmod() {
        return istmod_;
      }
      /**
       * <code>optional bool istmod = 9;</code>
       *
       * <pre>
       * If true, this expresses an implicit tmod relation
       * </pre>
       */
      public Builder setIstmod(boolean value) {
        bitField0_ |= 0x00000100;
        istmod_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool istmod = 9;</code>
       *
       * <pre>
       * If true, this expresses an implicit tmod relation
       * </pre>
       */
      public Builder clearIstmod() {
        bitField0_ = (bitField0_ & ~0x00000100);
        istmod_ = false;
        onChanged();
        return this;
      }

      private boolean prefixBe_ ;
      /**
       * <code>optional bool prefixBe = 10;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' prefix
       * </pre>
       */
      public boolean hasPrefixBe() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional bool prefixBe = 10;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' prefix
       * </pre>
       */
      public boolean getPrefixBe() {
        return prefixBe_;
      }
      /**
       * <code>optional bool prefixBe = 10;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' prefix
       * </pre>
       */
      public Builder setPrefixBe(boolean value) {
        bitField0_ |= 0x00000200;
        prefixBe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool prefixBe = 10;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' prefix
       * </pre>
       */
      public Builder clearPrefixBe() {
        bitField0_ = (bitField0_ & ~0x00000200);
        prefixBe_ = false;
        onChanged();
        return this;
      }

      private boolean suffixBe_ ;
      /**
       * <code>optional bool suffixBe = 11;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' suffix
       * </pre>
       */
      public boolean hasSuffixBe() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional bool suffixBe = 11;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' suffix
       * </pre>
       */
      public boolean getSuffixBe() {
        return suffixBe_;
      }
      /**
       * <code>optional bool suffixBe = 11;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' suffix
       * </pre>
       */
      public Builder setSuffixBe(boolean value) {
        bitField0_ |= 0x00000400;
        suffixBe_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool suffixBe = 11;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'be' suffix
       * </pre>
       */
      public Builder clearSuffixBe() {
        bitField0_ = (bitField0_ & ~0x00000400);
        suffixBe_ = false;
        onChanged();
        return this;
      }

      private boolean suffixOf_ ;
      /**
       * <code>optional bool suffixOf = 12;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'of' prefix
       * </pre>
       */
      public boolean hasSuffixOf() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional bool suffixOf = 12;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'of' prefix
       * </pre>
       */
      public boolean getSuffixOf() {
        return suffixOf_;
      }
      /**
       * <code>optional bool suffixOf = 12;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'of' prefix
       * </pre>
       */
      public Builder setSuffixOf(boolean value) {
        bitField0_ |= 0x00000800;
        suffixOf_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool suffixOf = 12;</code>
       *
       * <pre>
       * If true, this relation string is missing a 'of' prefix
       * </pre>
       */
      public Builder clearSuffixOf() {
        bitField0_ = (bitField0_ & ~0x00000800);
        suffixOf_ = false;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.RelationTriple)
    }

    static {
      defaultInstance = new RelationTriple(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.RelationTriple)
  }

  public interface MapStringStringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.MapStringString)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated string key = 1;</code>
     */
    com.google.protobuf.ProtocolStringList
        getKeyList();
    /**
     * <code>repeated string key = 1;</code>
     */
    int getKeyCount();
    /**
     * <code>repeated string key = 1;</code>
     */
    java.lang.String getKey(int index);
    /**
     * <code>repeated string key = 1;</code>
     */
    com.google.protobuf.ByteString
        getKeyBytes(int index);

    /**
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ProtocolStringList
        getValueList();
    /**
     * <code>repeated string value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 2;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.MapStringString}
   *
   * <pre>
   * A map from strings to strings.
   * Used, minimally, in the CoNLLU featurizer
   * </pre>
   */
  public static final class MapStringString extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.MapStringString)
      MapStringStringOrBuilder {
    // Use MapStringString.newBuilder() to construct.
    private MapStringString(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapStringString(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapStringString defaultInstance;
    public static MapStringString getDefaultInstance() {
      return defaultInstance;
    }

    public MapStringString getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapStringString(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                key_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000001;
              }
              key_.add(bs);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = key_.getUnmodifiableView();
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = value_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapStringString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.class, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder.class);
    }

    public static com.google.protobuf.Parser<MapStringString> PARSER =
        new com.google.protobuf.AbstractParser<MapStringString>() {
      public MapStringString parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapStringString(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapStringString> getParserForType() {
      return PARSER;
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.LazyStringList key_;
    /**
     * <code>repeated string key = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getKeyList() {
      return key_;
    }
    /**
     * <code>repeated string key = 1;</code>
     */
    public int getKeyCount() {
      return key_.size();
    }
    /**
     * <code>repeated string key = 1;</code>
     */
    public java.lang.String getKey(int index) {
      return key_.get(index);
    }
    /**
     * <code>repeated string key = 1;</code>
     */
    public com.google.protobuf.ByteString
        getKeyBytes(int index) {
      return key_.getByteString(index);
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    private void initFields() {
      key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < key_.size(); i++) {
        output.writeBytes(1, key_.getByteString(i));
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeBytes(2, value_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < key_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(key_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(value_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.MapStringString}
     *
     * <pre>
     * A map from strings to strings.
     * Used, minimally, in the CoNLLU featurizer
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.MapStringString)
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapStringString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.class, edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString result = new edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = key_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = value_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString.getDefaultInstance()) return this;
        if (!other.key_.isEmpty()) {
          if (key_.isEmpty()) {
            key_ = other.key_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeyIsMutable();
            key_.addAll(other.key_);
          }
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.MapStringString) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.google.protobuf.LazyStringList key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureKeyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = new com.google.protobuf.LazyStringArrayList(key_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getKeyList() {
        return key_.getUnmodifiableView();
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public int getKeyCount() {
        return key_.size();
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public java.lang.String getKey(int index) {
        return key_.get(index);
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public com.google.protobuf.ByteString
          getKeyBytes(int index) {
        return key_.getByteString(index);
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public Builder setKey(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public Builder addKey(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public Builder addAllKey(
          java.lang.Iterable<java.lang.String> values) {
        ensureKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, key_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public Builder clearKey() {
        key_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string key = 1;</code>
       */
      public Builder addKeyBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.MapStringString)
    }

    static {
      defaultInstance = new MapStringString(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.MapStringString)
  }

  public interface MapIntStringOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.pipeline.MapIntString)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated uint32 key = 1;</code>
     */
    java.util.List<java.lang.Integer> getKeyList();
    /**
     * <code>repeated uint32 key = 1;</code>
     */
    int getKeyCount();
    /**
     * <code>repeated uint32 key = 1;</code>
     */
    int getKey(int index);

    /**
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ProtocolStringList
        getValueList();
    /**
     * <code>repeated string value = 2;</code>
     */
    int getValueCount();
    /**
     * <code>repeated string value = 2;</code>
     */
    java.lang.String getValue(int index);
    /**
     * <code>repeated string value = 2;</code>
     */
    com.google.protobuf.ByteString
        getValueBytes(int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.pipeline.MapIntString}
   *
   * <pre>
   * A map from integers to strings.
   * Used, minimally, in the CoNLLU featurizer
   * </pre>
   */
  public static final class MapIntString extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.pipeline.MapIntString)
      MapIntStringOrBuilder {
    // Use MapIntString.newBuilder() to construct.
    private MapIntString(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private MapIntString(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final MapIntString defaultInstance;
    public static MapIntString getDefaultInstance() {
      return defaultInstance;
    }

    public MapIntString getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private MapIntString(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                key_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              key_.add(input.readUInt32());
              break;
            }
            case 10: {
              int length = input.readRawVarint32();
              int limit = input.pushLimit(length);
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001) && input.getBytesUntilLimit() > 0) {
                key_ = new java.util.ArrayList<java.lang.Integer>();
                mutable_bitField0_ |= 0x00000001;
              }
              while (input.getBytesUntilLimit() > 0) {
                key_.add(input.readUInt32());
              }
              input.popLimit(limit);
              break;
            }
            case 18: {
              com.google.protobuf.ByteString bs = input.readBytes();
              if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                value_ = new com.google.protobuf.LazyStringArrayList();
                mutable_bitField0_ |= 0x00000002;
              }
              value_.add(bs);
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = java.util.Collections.unmodifiableList(key_);
        }
        if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = value_.getUnmodifiableView();
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapIntString_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.class, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder.class);
    }

    public static com.google.protobuf.Parser<MapIntString> PARSER =
        new com.google.protobuf.AbstractParser<MapIntString>() {
      public MapIntString parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new MapIntString(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<MapIntString> getParserForType() {
      return PARSER;
    }

    public static final int KEY_FIELD_NUMBER = 1;
    private java.util.List<java.lang.Integer> key_;
    /**
     * <code>repeated uint32 key = 1;</code>
     */
    public java.util.List<java.lang.Integer>
        getKeyList() {
      return key_;
    }
    /**
     * <code>repeated uint32 key = 1;</code>
     */
    public int getKeyCount() {
      return key_.size();
    }
    /**
     * <code>repeated uint32 key = 1;</code>
     */
    public int getKey(int index) {
      return key_.get(index);
    }

    public static final int VALUE_FIELD_NUMBER = 2;
    private com.google.protobuf.LazyStringList value_;
    /**
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getValueList() {
      return value_;
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public int getValueCount() {
      return value_.size();
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public java.lang.String getValue(int index) {
      return value_.get(index);
    }
    /**
     * <code>repeated string value = 2;</code>
     */
    public com.google.protobuf.ByteString
        getValueBytes(int index) {
      return value_.getByteString(index);
    }

    private void initFields() {
      key_ = java.util.Collections.emptyList();
      value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (int i = 0; i < key_.size(); i++) {
        output.writeUInt32(1, key_.get(i));
      }
      for (int i = 0; i < value_.size(); i++) {
        output.writeBytes(2, value_.getByteString(i));
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      {
        int dataSize = 0;
        for (int i = 0; i < key_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeUInt32SizeNoTag(key_.get(i));
        }
        size += dataSize;
        size += 1 * getKeyList().size();
      }
      {
        int dataSize = 0;
        for (int i = 0; i < value_.size(); i++) {
          dataSize += com.google.protobuf.CodedOutputStream
            .computeBytesSizeNoTag(value_.getByteString(i));
        }
        size += dataSize;
        size += 1 * getValueList().size();
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.pipeline.MapIntString}
     *
     * <pre>
     * A map from integers to strings.
     * Used, minimally, in the CoNLLU featurizer
     * </pre>
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.pipeline.MapIntString)
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntStringOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapIntString_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.class, edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.Builder.class);
      }

      // Construct using edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        key_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString getDefaultInstanceForType() {
        return edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance();
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString build() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString buildPartial() {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString result = new edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString(this);
        int from_bitField0_ = bitField0_;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = java.util.Collections.unmodifiableList(key_);
          bitField0_ = (bitField0_ & ~0x00000001);
        }
        result.key_ = key_;
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = value_.getUnmodifiableView();
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.value_ = value_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString) {
          return mergeFrom((edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString other) {
        if (other == edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString.getDefaultInstance()) return this;
        if (!other.key_.isEmpty()) {
          if (key_.isEmpty()) {
            key_ = other.key_;
            bitField0_ = (bitField0_ & ~0x00000001);
          } else {
            ensureKeyIsMutable();
            key_.addAll(other.key_);
          }
          onChanged();
        }
        if (!other.value_.isEmpty()) {
          if (value_.isEmpty()) {
            value_ = other.value_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureValueIsMutable();
            value_.addAll(other.value_);
          }
          onChanged();
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.pipeline.CoreNLPProtos.MapIntString) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<java.lang.Integer> key_ = java.util.Collections.emptyList();
      private void ensureKeyIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          key_ = new java.util.ArrayList<java.lang.Integer>(key_);
          bitField0_ |= 0x00000001;
         }
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public java.util.List<java.lang.Integer>
          getKeyList() {
        return java.util.Collections.unmodifiableList(key_);
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public int getKeyCount() {
        return key_.size();
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public int getKey(int index) {
        return key_.get(index);
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public Builder setKey(
          int index, int value) {
        ensureKeyIsMutable();
        key_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public Builder addKey(int value) {
        ensureKeyIsMutable();
        key_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public Builder addAllKey(
          java.lang.Iterable<? extends java.lang.Integer> values) {
        ensureKeyIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, key_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated uint32 key = 1;</code>
       */
      public Builder clearKey() {
        key_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000001);
        onChanged();
        return this;
      }

      private com.google.protobuf.LazyStringList value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      private void ensureValueIsMutable() {
        if (!((bitField0_ & 0x00000002) == 0x00000002)) {
          value_ = new com.google.protobuf.LazyStringArrayList(value_);
          bitField0_ |= 0x00000002;
         }
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ProtocolStringList
          getValueList() {
        return value_.getUnmodifiableView();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public int getValueCount() {
        return value_.size();
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public java.lang.String getValue(int index) {
        return value_.get(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public com.google.protobuf.ByteString
          getValueBytes(int index) {
        return value_.getByteString(index);
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder setValue(
          int index, java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.set(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValue(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addAllValue(
          java.lang.Iterable<java.lang.String> values) {
        ensureValueIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, value_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder clearValue() {
        value_ = com.google.protobuf.LazyStringArrayList.EMPTY;
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
        return this;
      }
      /**
       * <code>repeated string value = 2;</code>
       */
      public Builder addValueBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  ensureValueIsMutable();
        value_.add(value);
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.pipeline.MapIntString)
    }

    static {
      defaultInstance = new MapIntString(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.pipeline.MapIntString)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Document_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Document_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Sentence_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Token_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Token_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Quote_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Quote_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_ParseTree_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_DependencyGraph_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_CorefChain_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Mention_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Mention_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_IndexedWord_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Span_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Span_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Timex_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Timex_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Entity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Entity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Relation_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Relation_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Operator_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Operator_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_Polarity_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_NERMention_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_SentenceFragment_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_RelationTriple_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_MapStringString_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_pipeline_MapIntString_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rCoreNLP.proto\022\031edu.stanford.nlp.pipeli" +
      "ne\"\216\002\n\010Document\022\014\n\004text\030\001 \002(\t\0225\n\010sentenc" +
      "e\030\002 \003(\0132#.edu.stanford.nlp.pipeline.Sent" +
      "ence\0229\n\ncorefChain\030\003 \003(\0132%.edu.stanford." +
      "nlp.pipeline.CorefChain\022\r\n\005docID\030\004 \001(\t\022;" +
      "\n\021sentencelessToken\030\005 \003(\0132 .edu.stanford" +
      ".nlp.pipeline.Token\022/\n\005quote\030\006 \003(\0132 .edu" +
      ".stanford.nlp.pipeline.Quote*\005\010d\020\200\002\"\317\n\n\010" +
      "Sentence\022/\n\005token\030\001 \003(\0132 .edu.stanford.n" +
      "lp.pipeline.Token\022\030\n\020tokenOffsetBegin\030\002 ",
      "\002(\r\022\026\n\016tokenOffsetEnd\030\003 \002(\r\022\025\n\rsentenceI" +
      "ndex\030\004 \001(\r\022\034\n\024characterOffsetBegin\030\005 \001(\r" +
      "\022\032\n\022characterOffsetEnd\030\006 \001(\r\0227\n\tparseTre" +
      "e\030\007 \001(\0132$.edu.stanford.nlp.pipeline.Pars" +
      "eTree\022@\n\022binarizedParseTree\030\037 \001(\0132$.edu." +
      "stanford.nlp.pipeline.ParseTree\022@\n\022annot" +
      "atedParseTree\030  \001(\0132$.edu.stanford.nlp.p" +
      "ipeline.ParseTree\022\021\n\tsentiment\030! \001(\t\022=\n\017" +
      "kBestParseTrees\030\" \003(\0132$.edu.stanford.nlp" +
      ".pipeline.ParseTree\022E\n\021basicDependencies",
      "\030\010 \001(\0132*.edu.stanford.nlp.pipeline.Depen" +
      "dencyGraph\022I\n\025collapsedDependencies\030\t \001(" +
      "\0132*.edu.stanford.nlp.pipeline.Dependency" +
      "Graph\022T\n collapsedCCProcessedDependencie" +
      "s\030\n \001(\0132*.edu.stanford.nlp.pipeline.Depe" +
      "ndencyGraph\022K\n\027alternativeDependencies\030\r" +
      " \001(\0132*.edu.stanford.nlp.pipeline.Depende" +
      "ncyGraph\022?\n\014openieTriple\030\016 \003(\0132).edu.sta" +
      "nford.nlp.pipeline.RelationTriple\022<\n\tkbp" +
      "Triple\030\020 \003(\0132).edu.stanford.nlp.pipeline",
      ".RelationTriple\022E\n\020entailedSentence\030\017 \003(" +
      "\0132+.edu.stanford.nlp.pipeline.SentenceFr" +
      "agment\022\021\n\tparagraph\030\013 \001(\r\022\014\n\004text\030\014 \001(\t\022" +
      "\036\n\026hasRelationAnnotations\0303 \001(\010\0221\n\006entit" +
      "y\0304 \003(\0132!.edu.stanford.nlp.pipeline.Enti" +
      "ty\0225\n\010relation\0305 \003(\0132#.edu.stanford.nlp." +
      "pipeline.Relation\022$\n\034hasNumerizedTokensA" +
      "nnotation\0306 \001(\010\0227\n\010mentions\0307 \003(\0132%.edu." +
      "stanford.nlp.pipeline.NERMention\022<\n\020ment" +
      "ionsForCoref\0308 \003(\0132\".edu.stanford.nlp.pi",
      "peline.Mention\022\"\n\032hasCorefMentionsAnnota" +
      "tion\0309 \001(\010\022\022\n\nsentenceID\030: \001(\t*\005\010d\020\200\002\"\364\007" +
      "\n\005Token\022\014\n\004word\030\001 \002(\t\022\013\n\003pos\030\002 \001(\t\022\r\n\005va" +
      "lue\030\003 \001(\t\022\020\n\010category\030\004 \001(\t\022\016\n\006before\030\005 " +
      "\001(\t\022\r\n\005after\030\006 \001(\t\022\024\n\014originalText\030\007 \001(\t" +
      "\022\013\n\003ner\030\010 \001(\t\022\025\n\rnormalizedNER\030\t \001(\t\022\r\n\005" +
      "lemma\030\n \001(\t\022\021\n\tbeginChar\030\013 \001(\r\022\017\n\007endCha" +
      "r\030\014 \001(\r\022\021\n\tutterance\030\r \001(\r\022\017\n\007speaker\030\016 " +
      "\001(\t\022\022\n\nbeginIndex\030\017 \001(\r\022\020\n\010endIndex\030\020 \001(" +
      "\r\022\027\n\017tokenBeginIndex\030\021 \001(\r\022\025\n\rtokenEndIn",
      "dex\030\022 \001(\r\0224\n\ntimexValue\030\023 \001(\0132 .edu.stan" +
      "ford.nlp.pipeline.Timex\022\025\n\rhasXmlContext" +
      "\030\025 \001(\010\022\022\n\nxmlContext\030\026 \003(\t\022\026\n\016corefClust" +
      "erID\030\027 \001(\r\022\016\n\006answer\030\030 \001(\t\022\025\n\rheadWordIn" +
      "dex\030\032 \001(\r\0225\n\010operator\030\033 \001(\0132#.edu.stanfo" +
      "rd.nlp.pipeline.Operator\0225\n\010polarity\030\034 \001" +
      "(\0132#.edu.stanford.nlp.pipeline.Polarity\022" +
      "-\n\004span\030\035 \001(\0132\037.edu.stanford.nlp.pipelin" +
      "e.Span\022\021\n\tsentiment\030\036 \001(\t\022\026\n\016quotationIn" +
      "dex\030\037 \001(\005\022B\n\016conllUFeatures\030  \001(\0132*.edu.",
      "stanford.nlp.pipeline.MapStringString\022\021\n" +
      "\tcoarseTag\030! \001(\t\0228\n\017conllUTokenSpan\030\" \001(" +
      "\0132\037.edu.stanford.nlp.pipeline.Span\022\022\n\nco" +
      "nllUMisc\030# \001(\t\022D\n\023conllUSecondaryDeps\030$ " +
      "\001(\0132\'.edu.stanford.nlp.pipeline.MapIntSt" +
      "ring\022\027\n\017wikipediaEntity\030% \001(\t\022\016\n\006gender\030" +
      "3 \001(\t\022\020\n\010trueCase\0304 \001(\t\022\024\n\014trueCaseText\030" +
      "5 \001(\t*\005\010d\020\200\002\"\241\001\n\005Quote\022\014\n\004text\030\001 \001(\t\022\r\n\005" +
      "begin\030\002 \001(\r\022\013\n\003end\030\003 \001(\r\022\025\n\rsentenceBegi" +
      "n\030\005 \001(\r\022\023\n\013sentenceEnd\030\006 \001(\r\022\022\n\ntokenBeg",
      "in\030\007 \001(\r\022\020\n\010tokenEnd\030\010 \001(\r\022\r\n\005docid\030\t \001(" +
      "\t\022\r\n\005index\030\n \001(\r\"\307\001\n\tParseTree\0223\n\005child\030" +
      "\001 \003(\0132$.edu.stanford.nlp.pipeline.ParseT" +
      "ree\022\r\n\005value\030\002 \001(\t\022\027\n\017yieldBeginIndex\030\003 " +
      "\001(\r\022\025\n\ryieldEndIndex\030\004 \001(\r\022\r\n\005score\030\005 \001(" +
      "\001\0227\n\tsentiment\030\006 \001(\0162$.edu.stanford.nlp." +
      "pipeline.Sentiment\"\226\003\n\017DependencyGraph\022=" +
      "\n\004node\030\001 \003(\0132/.edu.stanford.nlp.pipeline" +
      ".DependencyGraph.Node\022=\n\004edge\030\002 \003(\0132/.ed" +
      "u.stanford.nlp.pipeline.DependencyGraph.",
      "Edge\022\020\n\004root\030\003 \003(\rB\002\020\001\032D\n\004Node\022\025\n\rsenten" +
      "ceIndex\030\001 \002(\r\022\r\n\005index\030\002 \002(\r\022\026\n\016copyAnno" +
      "tation\030\003 \001(\r\032\254\001\n\004Edge\022\016\n\006source\030\001 \002(\r\022\016\n" +
      "\006target\030\002 \002(\r\022\013\n\003dep\030\003 \001(\t\022\017\n\007isExtra\030\004 " +
      "\001(\010\022\022\n\nsourceCopy\030\005 \001(\r\022\022\n\ntargetCopy\030\006 " +
      "\001(\r\022>\n\010language\030\007 \001(\0162#.edu.stanford.nlp" +
      ".pipeline.Language:\007Unknown\"\306\002\n\nCorefCha" +
      "in\022\017\n\007chainID\030\001 \002(\005\022C\n\007mention\030\002 \003(\01322.e" +
      "du.stanford.nlp.pipeline.CorefChain.Core" +
      "fMention\022\026\n\016representative\030\003 \002(\r\032\311\001\n\014Cor",
      "efMention\022\021\n\tmentionID\030\001 \001(\005\022\023\n\013mentionT" +
      "ype\030\002 \001(\t\022\016\n\006number\030\003 \001(\t\022\016\n\006gender\030\004 \001(" +
      "\t\022\017\n\007animacy\030\005 \001(\t\022\022\n\nbeginIndex\030\006 \001(\r\022\020" +
      "\n\010endIndex\030\007 \001(\r\022\021\n\theadIndex\030\t \001(\r\022\025\n\rs" +
      "entenceIndex\030\n \001(\r\022\020\n\010position\030\013 \001(\r\"\360\010\n" +
      "\007Mention\022\021\n\tmentionID\030\001 \001(\005\022\023\n\013mentionTy" +
      "pe\030\002 \001(\t\022\016\n\006number\030\003 \001(\t\022\016\n\006gender\030\004 \001(\t" +
      "\022\017\n\007animacy\030\005 \001(\t\022\016\n\006person\030\006 \001(\t\022\022\n\nsta" +
      "rtIndex\030\007 \001(\r\022\020\n\010endIndex\030\t \001(\r\022\021\n\theadI" +
      "ndex\030\n \001(\r\022\022\n\nheadString\030\013 \001(\t\022\021\n\tnerStr",
      "ing\030\014 \001(\t\022\023\n\013originalRef\030\r \001(\r\022\032\n\022goldCo" +
      "refClusterID\030\016 \001(\005\022\026\n\016corefClusterID\030\017 \001" +
      "(\005\022\022\n\nmentionNum\030\020 \001(\r\022\017\n\007sentNum\030\021 \001(\r\022" +
      "\r\n\005utter\030\022 \001(\r\022\021\n\tparagraph\030\023 \001(\r\022\021\n\tisS" +
      "ubject\030\024 \001(\010\022\026\n\016isDirectObject\030\025 \001(\010\022\030\n\020" +
      "isIndirectObject\030\026 \001(\010\022\033\n\023isPrepositionO" +
      "bject\030\027 \001(\010\022\017\n\007hasTwin\030\030 \001(\010\022\017\n\007generic\030" +
      "\031 \001(\010\022\023\n\013isSingleton\030\032 \001(\010\022\032\n\022hasBasicDe" +
      "pendency\030\033 \001(\010\022\036\n\026hasCollapsedDependency" +
      "\030\034 \001(\010\022\033\n\023hasContextParseTree\030\035 \001(\010\022?\n\017h",
      "eadIndexedWord\030\036 \001(\0132&.edu.stanford.nlp." +
      "pipeline.IndexedWord\022=\n\rdependingVerb\030\037 " +
      "\001(\0132&.edu.stanford.nlp.pipeline.IndexedW" +
      "ord\0228\n\010headWord\030  \001(\0132&.edu.stanford.nlp" +
      ".pipeline.IndexedWord\022;\n\013speakerInfo\030! \001" +
      "(\0132&.edu.stanford.nlp.pipeline.SpeakerIn" +
      "fo\022=\n\rsentenceWords\0302 \003(\0132&.edu.stanford" +
      ".nlp.pipeline.IndexedWord\022<\n\014originalSpa" +
      "n\0303 \003(\0132&.edu.stanford.nlp.pipeline.Inde" +
      "xedWord\022\022\n\ndependents\0304 \003(\t\022\031\n\021preproces",
      "sedTerms\0305 \003(\t\022\023\n\013appositions\0306 \003(\005\022\034\n\024p" +
      "redicateNominatives\0307 \003(\005\022\030\n\020relativePro" +
      "nouns\0308 \003(\005\022\023\n\013listMembers\0309 \003(\005\022\025\n\rbelo" +
      "ngToLists\030: \003(\005\"X\n\013IndexedWord\022\023\n\013senten" +
      "ceNum\030\001 \001(\r\022\022\n\ntokenIndex\030\002 \001(\r\022\r\n\005docID" +
      "\030\003 \001(\r\022\021\n\tcopyCount\030\004 \001(\r\"4\n\013SpeakerInfo" +
      "\022\023\n\013speakerName\030\001 \001(\t\022\020\n\010mentions\030\002 \003(\005\"" +
      "\"\n\004Span\022\r\n\005begin\030\001 \002(\r\022\013\n\003end\030\002 \002(\r\"w\n\005T" +
      "imex\022\r\n\005value\030\001 \001(\t\022\020\n\010altValue\030\002 \001(\t\022\014\n" +
      "\004text\030\003 \001(\t\022\014\n\004type\030\004 \001(\t\022\013\n\003tid\030\005 \001(\t\022\022",
      "\n\nbeginPoint\030\006 \001(\r\022\020\n\010endPoint\030\007 \001(\r\"\333\001\n" +
      "\006Entity\022\021\n\theadStart\030\006 \001(\r\022\017\n\007headEnd\030\007 " +
      "\001(\r\022\023\n\013mentionType\030\010 \001(\t\022\026\n\016normalizedNa" +
      "me\030\t \001(\t\022\026\n\016headTokenIndex\030\n \001(\r\022\017\n\007core" +
      "fID\030\013 \001(\t\022\020\n\010objectID\030\001 \001(\t\022\023\n\013extentSta" +
      "rt\030\002 \001(\r\022\021\n\textentEnd\030\003 \001(\r\022\014\n\004type\030\004 \001(" +
      "\t\022\017\n\007subtype\030\005 \001(\t\"\267\001\n\010Relation\022\017\n\007argNa" +
      "me\030\006 \003(\t\022.\n\003arg\030\007 \003(\0132!.edu.stanford.nlp" +
      ".pipeline.Entity\022\021\n\tsignature\030\010 \001(\t\022\020\n\010o" +
      "bjectID\030\001 \001(\t\022\023\n\013extentStart\030\002 \001(\r\022\021\n\tex",
      "tentEnd\030\003 \001(\r\022\014\n\004type\030\004 \001(\t\022\017\n\007subtype\030\005" +
      " \001(\t\"\262\001\n\010Operator\022\014\n\004name\030\001 \002(\t\022\033\n\023quant" +
      "ifierSpanBegin\030\002 \002(\005\022\031\n\021quantifierSpanEn" +
      "d\030\003 \002(\005\022\030\n\020subjectSpanBegin\030\004 \002(\005\022\026\n\016sub" +
      "jectSpanEnd\030\005 \002(\005\022\027\n\017objectSpanBegin\030\006 \002" +
      "(\005\022\025\n\robjectSpanEnd\030\007 \002(\005\"\251\004\n\010Polarity\022K" +
      "\n\022projectEquivalence\030\001 \002(\0162/.edu.stanfor" +
      "d.nlp.pipeline.NaturalLogicRelation\022Q\n\030p" +
      "rojectForwardEntailment\030\002 \002(\0162/.edu.stan" +
      "ford.nlp.pipeline.NaturalLogicRelation\022Q",
      "\n\030projectReverseEntailment\030\003 \002(\0162/.edu.s" +
      "tanford.nlp.pipeline.NaturalLogicRelatio" +
      "n\022H\n\017projectNegation\030\004 \002(\0162/.edu.stanfor" +
      "d.nlp.pipeline.NaturalLogicRelation\022K\n\022p" +
      "rojectAlternation\030\005 \002(\0162/.edu.stanford.n" +
      "lp.pipeline.NaturalLogicRelation\022E\n\014proj" +
      "ectCover\030\006 \002(\0162/.edu.stanford.nlp.pipeli" +
      "ne.NaturalLogicRelation\022L\n\023projectIndepe" +
      "ndence\030\007 \002(\0162/.edu.stanford.nlp.pipeline" +
      ".NaturalLogicRelation\"\330\001\n\nNERMention\022\025\n\r",
      "sentenceIndex\030\001 \001(\r\022%\n\035tokenStartInSente" +
      "nceInclusive\030\002 \002(\r\022#\n\033tokenEndInSentence" +
      "Exclusive\030\003 \002(\r\022\013\n\003ner\030\004 \002(\t\022\025\n\rnormaliz" +
      "edNER\030\005 \001(\t\022\022\n\nentityType\030\006 \001(\t\022/\n\005timex" +
      "\030\007 \001(\0132 .edu.stanford.nlp.pipeline.Timex" +
      "\"Y\n\020SentenceFragment\022\022\n\ntokenIndex\030\001 \003(\r" +
      "\022\014\n\004root\030\002 \001(\r\022\024\n\014assumedTruth\030\003 \001(\010\022\r\n\005" +
      "score\030\004 \001(\001\"\234\002\n\016RelationTriple\022\017\n\007subjec" +
      "t\030\001 \001(\t\022\020\n\010relation\030\002 \001(\t\022\016\n\006object\030\003 \001(" +
      "\t\022\022\n\nconfidence\030\004 \001(\001\022\025\n\rsubjectTokens\030\005",
      " \003(\r\022\026\n\016relationTokens\030\006 \003(\r\022\024\n\014objectTo" +
      "kens\030\007 \003(\r\0228\n\004tree\030\010 \001(\0132*.edu.stanford." +
      "nlp.pipeline.DependencyGraph\022\016\n\006istmod\030\t" +
      " \001(\010\022\020\n\010prefixBe\030\n \001(\010\022\020\n\010suffixBe\030\013 \001(\010" +
      "\022\020\n\010suffixOf\030\014 \001(\010\"-\n\017MapStringString\022\013\n" +
      "\003key\030\001 \003(\t\022\r\n\005value\030\002 \003(\t\"*\n\014MapIntStrin" +
      "g\022\013\n\003key\030\001 \003(\r\022\r\n\005value\030\002 \003(\t*\215\001\n\010Langua" +
      "ge\022\013\n\007Unknown\020\000\022\007\n\003Any\020\001\022\n\n\006Arabic\020\002\022\013\n\007" +
      "Chinese\020\003\022\013\n\007English\020\004\022\n\n\006German\020\005\022\n\n\006Fr" +
      "ench\020\006\022\n\n\006Hebrew\020\007\022\013\n\007Spanish\020\010\022\024\n\020Unive",
      "rsalEnglish\020\t*h\n\tSentiment\022\023\n\017STRONG_NEG" +
      "ATIVE\020\000\022\021\n\rWEAK_NEGATIVE\020\001\022\013\n\007NEUTRAL\020\002\022" +
      "\021\n\rWEAK_POSITIVE\020\003\022\023\n\017STRONG_POSITIVE\020\004*" +
      "\223\001\n\024NaturalLogicRelation\022\017\n\013EQUIVALENCE\020" +
      "\000\022\026\n\022FORWARD_ENTAILMENT\020\001\022\026\n\022REVERSE_ENT" +
      "AILMENT\020\002\022\014\n\010NEGATION\020\003\022\017\n\013ALTERNATION\020\004" +
      "\022\t\n\005COVER\020\005\022\020\n\014INDEPENDENCE\020\006B*\n\031edu.sta" +
      "nford.nlp.pipelineB\rCoreNLPProtos"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_edu_stanford_nlp_pipeline_Document_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_edu_stanford_nlp_pipeline_Document_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Document_descriptor,
        new java.lang.String[] { "Text", "Sentence", "CorefChain", "DocID", "SentencelessToken", "Quote", });
    internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_edu_stanford_nlp_pipeline_Sentence_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Sentence_descriptor,
        new java.lang.String[] { "Token", "TokenOffsetBegin", "TokenOffsetEnd", "SentenceIndex", "CharacterOffsetBegin", "CharacterOffsetEnd", "ParseTree", "BinarizedParseTree", "AnnotatedParseTree", "Sentiment", "KBestParseTrees", "BasicDependencies", "CollapsedDependencies", "CollapsedCCProcessedDependencies", "AlternativeDependencies", "OpenieTriple", "KbpTriple", "EntailedSentence", "Paragraph", "Text", "HasRelationAnnotations", "Entity", "Relation", "HasNumerizedTokensAnnotation", "Mentions", "MentionsForCoref", "HasCorefMentionsAnnotation", "SentenceID", });
    internal_static_edu_stanford_nlp_pipeline_Token_descriptor =
      getDescriptor().getMessageTypes().get(2);
    internal_static_edu_stanford_nlp_pipeline_Token_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Token_descriptor,
        new java.lang.String[] { "Word", "Pos", "Value", "Category", "Before", "After", "OriginalText", "Ner", "NormalizedNER", "Lemma", "BeginChar", "EndChar", "Utterance", "Speaker", "BeginIndex", "EndIndex", "TokenBeginIndex", "TokenEndIndex", "TimexValue", "HasXmlContext", "XmlContext", "CorefClusterID", "Answer", "HeadWordIndex", "Operator", "Polarity", "Span", "Sentiment", "QuotationIndex", "ConllUFeatures", "CoarseTag", "ConllUTokenSpan", "ConllUMisc", "ConllUSecondaryDeps", "WikipediaEntity", "Gender", "TrueCase", "TrueCaseText", });
    internal_static_edu_stanford_nlp_pipeline_Quote_descriptor =
      getDescriptor().getMessageTypes().get(3);
    internal_static_edu_stanford_nlp_pipeline_Quote_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Quote_descriptor,
        new java.lang.String[] { "Text", "Begin", "End", "SentenceBegin", "SentenceEnd", "TokenBegin", "TokenEnd", "Docid", "Index", });
    internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor =
      getDescriptor().getMessageTypes().get(4);
    internal_static_edu_stanford_nlp_pipeline_ParseTree_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_ParseTree_descriptor,
        new java.lang.String[] { "Child", "Value", "YieldBeginIndex", "YieldEndIndex", "Score", "Sentiment", });
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor =
      getDescriptor().getMessageTypes().get(5);
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor,
        new java.lang.String[] { "Node", "Edge", "Root", });
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor =
      internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor.getNestedTypes().get(0);
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Node_descriptor,
        new java.lang.String[] { "SentenceIndex", "Index", "CopyAnnotation", });
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor =
      internal_static_edu_stanford_nlp_pipeline_DependencyGraph_descriptor.getNestedTypes().get(1);
    internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_DependencyGraph_Edge_descriptor,
        new java.lang.String[] { "Source", "Target", "Dep", "IsExtra", "SourceCopy", "TargetCopy", "Language", });
    internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor =
      getDescriptor().getMessageTypes().get(6);
    internal_static_edu_stanford_nlp_pipeline_CorefChain_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor,
        new java.lang.String[] { "ChainID", "Mention", "Representative", });
    internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor =
      internal_static_edu_stanford_nlp_pipeline_CorefChain_descriptor.getNestedTypes().get(0);
    internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_CorefChain_CorefMention_descriptor,
        new java.lang.String[] { "MentionID", "MentionType", "Number", "Gender", "Animacy", "BeginIndex", "EndIndex", "HeadIndex", "SentenceIndex", "Position", });
    internal_static_edu_stanford_nlp_pipeline_Mention_descriptor =
      getDescriptor().getMessageTypes().get(7);
    internal_static_edu_stanford_nlp_pipeline_Mention_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Mention_descriptor,
        new java.lang.String[] { "MentionID", "MentionType", "Number", "Gender", "Animacy", "Person", "StartIndex", "EndIndex", "HeadIndex", "HeadString", "NerString", "OriginalRef", "GoldCorefClusterID", "CorefClusterID", "MentionNum", "SentNum", "Utter", "Paragraph", "IsSubject", "IsDirectObject", "IsIndirectObject", "IsPrepositionObject", "HasTwin", "Generic", "IsSingleton", "HasBasicDependency", "HasCollapsedDependency", "HasContextParseTree", "HeadIndexedWord", "DependingVerb", "HeadWord", "SpeakerInfo", "SentenceWords", "OriginalSpan", "Dependents", "PreprocessedTerms", "Appositions", "PredicateNominatives", "RelativePronouns", "ListMembers", "BelongToLists", });
    internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor =
      getDescriptor().getMessageTypes().get(8);
    internal_static_edu_stanford_nlp_pipeline_IndexedWord_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_IndexedWord_descriptor,
        new java.lang.String[] { "SentenceNum", "TokenIndex", "DocID", "CopyCount", });
    internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor =
      getDescriptor().getMessageTypes().get(9);
    internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_SpeakerInfo_descriptor,
        new java.lang.String[] { "SpeakerName", "Mentions", });
    internal_static_edu_stanford_nlp_pipeline_Span_descriptor =
      getDescriptor().getMessageTypes().get(10);
    internal_static_edu_stanford_nlp_pipeline_Span_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Span_descriptor,
        new java.lang.String[] { "Begin", "End", });
    internal_static_edu_stanford_nlp_pipeline_Timex_descriptor =
      getDescriptor().getMessageTypes().get(11);
    internal_static_edu_stanford_nlp_pipeline_Timex_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Timex_descriptor,
        new java.lang.String[] { "Value", "AltValue", "Text", "Type", "Tid", "BeginPoint", "EndPoint", });
    internal_static_edu_stanford_nlp_pipeline_Entity_descriptor =
      getDescriptor().getMessageTypes().get(12);
    internal_static_edu_stanford_nlp_pipeline_Entity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Entity_descriptor,
        new java.lang.String[] { "HeadStart", "HeadEnd", "MentionType", "NormalizedName", "HeadTokenIndex", "CorefID", "ObjectID", "ExtentStart", "ExtentEnd", "Type", "Subtype", });
    internal_static_edu_stanford_nlp_pipeline_Relation_descriptor =
      getDescriptor().getMessageTypes().get(13);
    internal_static_edu_stanford_nlp_pipeline_Relation_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Relation_descriptor,
        new java.lang.String[] { "ArgName", "Arg", "Signature", "ObjectID", "ExtentStart", "ExtentEnd", "Type", "Subtype", });
    internal_static_edu_stanford_nlp_pipeline_Operator_descriptor =
      getDescriptor().getMessageTypes().get(14);
    internal_static_edu_stanford_nlp_pipeline_Operator_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Operator_descriptor,
        new java.lang.String[] { "Name", "QuantifierSpanBegin", "QuantifierSpanEnd", "SubjectSpanBegin", "SubjectSpanEnd", "ObjectSpanBegin", "ObjectSpanEnd", });
    internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor =
      getDescriptor().getMessageTypes().get(15);
    internal_static_edu_stanford_nlp_pipeline_Polarity_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_Polarity_descriptor,
        new java.lang.String[] { "ProjectEquivalence", "ProjectForwardEntailment", "ProjectReverseEntailment", "ProjectNegation", "ProjectAlternation", "ProjectCover", "ProjectIndependence", });
    internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor =
      getDescriptor().getMessageTypes().get(16);
    internal_static_edu_stanford_nlp_pipeline_NERMention_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_NERMention_descriptor,
        new java.lang.String[] { "SentenceIndex", "TokenStartInSentenceInclusive", "TokenEndInSentenceExclusive", "Ner", "NormalizedNER", "EntityType", "Timex", });
    internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor =
      getDescriptor().getMessageTypes().get(17);
    internal_static_edu_stanford_nlp_pipeline_SentenceFragment_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_SentenceFragment_descriptor,
        new java.lang.String[] { "TokenIndex", "Root", "AssumedTruth", "Score", });
    internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor =
      getDescriptor().getMessageTypes().get(18);
    internal_static_edu_stanford_nlp_pipeline_RelationTriple_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_RelationTriple_descriptor,
        new java.lang.String[] { "Subject", "Relation", "Object", "Confidence", "SubjectTokens", "RelationTokens", "ObjectTokens", "Tree", "Istmod", "PrefixBe", "SuffixBe", "SuffixOf", });
    internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor =
      getDescriptor().getMessageTypes().get(19);
    internal_static_edu_stanford_nlp_pipeline_MapStringString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_MapStringString_descriptor,
        new java.lang.String[] { "Key", "Value", });
    internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor =
      getDescriptor().getMessageTypes().get(20);
    internal_static_edu_stanford_nlp_pipeline_MapIntString_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_pipeline_MapIntString_descriptor,
        new java.lang.String[] { "Key", "Value", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
