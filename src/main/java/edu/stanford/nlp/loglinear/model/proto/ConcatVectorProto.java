// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: ConcatVector.proto

package edu.stanford.nlp.loglinear.model.proto;

import com.google.protobuf.CodedOutputStream;

public final class ConcatVectorProto {
  private ConcatVectorProto() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface ConcatVectorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> 
        getComponentList();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index);
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    int getComponentCount();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList();
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index);
  }
  /**
   * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector}
   */
  public static final class ConcatVector extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
      ConcatVectorOrBuilder {
    // Use ConcatVector.newBuilder() to construct.
    private ConcatVector(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private ConcatVector(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final ConcatVector defaultInstance;
    public static ConcatVector getDefaultInstance() {
      return defaultInstance;
    }

    public ConcatVector getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private ConcatVector(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                component_ = new java.util.ArrayList<>();
                mutable_bitField0_ |= 0x00000001;
              }
              component_.add(input.readMessage(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.PARSER, extensionRegistry));
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          component_ = java.util.Collections.unmodifiableList(component_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Builder.class);
    }

    public static com.google.protobuf.Parser<ConcatVector> PARSER =
        new com.google.protobuf.AbstractParser<ConcatVector>() {
      public ConcatVector parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new ConcatVector(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<ConcatVector> getParserForType() {
      return PARSER;
    }

    public interface ComponentOrBuilder extends
        // @@protoc_insertion_point(interface_extends:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>required bool sparse = 1;</code>
       */
      boolean hasSparse();
      /**
       * <code>required bool sparse = 1;</code>
       */
      boolean getSparse();

      /**
       * <code>repeated double data = 2;</code>
       */
      java.util.List<java.lang.Double> getDataList();
      /**
       * <code>repeated double data = 2;</code>
       */
      int getDataCount();
      /**
       * <code>repeated double data = 2;</code>
       */
      double getData(int index);
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component}
     */
    public static final class Component extends
        com.google.protobuf.GeneratedMessage implements
        // @@protoc_insertion_point(message_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
        ComponentOrBuilder {
      // Use Component.newBuilder() to construct.
      private Component(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
        super(builder);
        this.unknownFields = builder.getUnknownFields();
      }
      private Component(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

      private static final Component defaultInstance;
      public static Component getDefaultInstance() {
        return defaultInstance;
      }

      public Component getDefaultInstanceForType() {
        return defaultInstance;
      }

      private final com.google.protobuf.UnknownFieldSet unknownFields;
      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
          getUnknownFields() {
        return this.unknownFields;
      }
      private Component(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        initFields();
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              default: {
                if (!parseUnknownField(input, unknownFields,
                                       extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
              case 8: {
                bitField0_ |= 0x00000001;
                sparse_ = input.readBool();
                break;
              }
              case 17: {
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                  data_ = new java.util.ArrayList<>();
                  mutable_bitField0_ |= 0x00000002;
                }
                data_.add(input.readDouble());
                break;
              }
              case 18: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                if (!((mutable_bitField0_ & 0x00000002) == 0x00000002) && input.getBytesUntilLimit() > 0) {
                  data_ = new java.util.ArrayList<>();
                  mutable_bitField0_ |= 0x00000002;
                }
                while (input.getBytesUntilLimit() > 0) {
                  data_.add(input.readDouble());
                }
                input.popLimit(limit);
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e.getMessage()).setUnfinishedMessage(this);
        } finally {
          if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
          }
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder.class);
      }

      public static com.google.protobuf.Parser<Component> PARSER =
          new com.google.protobuf.AbstractParser<Component>() {
        public Component parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Component(input, extensionRegistry);
        }
      };

      @java.lang.Override
      public com.google.protobuf.Parser<Component> getParserForType() {
        return PARSER;
      }

      private int bitField0_;
      public static final int SPARSE_FIELD_NUMBER = 1;
      private boolean sparse_;
      /**
       * <code>required bool sparse = 1;</code>
       */
      public boolean hasSparse() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required bool sparse = 1;</code>
       */
      public boolean getSparse() {
        return sparse_;
      }

      public static final int DATA_FIELD_NUMBER = 2;
      private java.util.List<java.lang.Double> data_;
      /**
       * <code>repeated double data = 2;</code>
       */
      public java.util.List<java.lang.Double>
          getDataList() {
        return data_;
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public int getDataCount() {
        return data_.size();
      }
      /**
       * <code>repeated double data = 2;</code>
       */
      public double getData(int index) {
        return data_.get(index);
      }

      private void initFields() {
        sparse_ = false;
        data_ = java.util.Collections.emptyList();
      }
      private byte memoizedIsInitialized = -1;
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        if (!hasSparse()) {
          memoizedIsInitialized = 0;
          return false;
        }
        memoizedIsInitialized = 1;
        return true;
      }

      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        getSerializedSize();
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          output.writeBool(1, sparse_);
        }
        for (Double aData_ : data_) {
          output.writeDouble(2, aData_);
        }
        getUnknownFields().writeTo(output);
      }

      private int memoizedSerializedSize = -1;
      public int getSerializedSize() {
        int size = memoizedSerializedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) == 0x00000001)) {
          size += com.google.protobuf.CodedOutputStream
            .computeBoolSize(1, sparse_);
        }
        {
          int dataSize = 0;
          dataSize = 8 * getDataList().size();
          size += dataSize;
          size += 1 * getDataList().size();
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSerializedSize = size;
        return size;
      }

      private static final long serialVersionUID = 0L;
      @java.lang.Override
      protected java.lang.Object writeReplace()
          throws java.io.ObjectStreamException {
        return super.writeReplace();
      }

      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseDelimitedFrom(input, extensionRegistry);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return PARSER.parseFrom(input);
      }
      public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return PARSER.parseFrom(input, extensionRegistry);
      }

      public static Builder newBuilder() { return Builder.create(); }
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component prototype) {
        return newBuilder().mergeFrom(prototype);
      }
      public Builder toBuilder() { return newBuilder(this); }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessage.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
        }

        protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder.class);
        }

        // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessage.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          }
        }
        private static Builder create() {
          return new Builder();
        }

        public Builder clear() {
          super.clear();
          sparse_ = false;
          bitField0_ = (bitField0_ & ~0x00000001);
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          return this;
        }

        public Builder clone() {
          return create().mergeFrom(buildPartial());
        }

        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
        }

        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getDefaultInstanceForType() {
          return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance();
        }

        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component build() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component buildPartial() {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component(this);
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
            to_bitField0_ |= 0x00000001;
          }
          result.sparse_ = sparse_;
          if (((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = java.util.Collections.unmodifiableList(data_);
            bitField0_ = (bitField0_ & ~0x00000002);
          }
          result.data_ = data_;
          result.bitField0_ = to_bitField0_;
          onBuilt();
          return result;
        }

        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component) {
            return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component other) {
          if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance()) return this;
          if (other.hasSparse()) {
            setSparse(other.getSparse());
          }
          if (!other.data_.isEmpty()) {
            if (data_.isEmpty()) {
              data_ = other.data_;
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              ensureDataIsMutable();
              data_.addAll(other.data_);
            }
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          return this;
        }

        public final boolean isInitialized() {
          if (!hasSparse()) {
            
            return false;
          }
          return true;
        }

        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component) e.getUnfinishedMessage();
            throw e;
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int bitField0_;

        private boolean sparse_ ;
        /**
         * <code>required bool sparse = 1;</code>
         */
        public boolean hasSparse() {
          return ((bitField0_ & 0x00000001) == 0x00000001);
        }
        /**
         * <code>required bool sparse = 1;</code>
         */
        public boolean getSparse() {
          return sparse_;
        }
        /**
         * <code>required bool sparse = 1;</code>
         */
        public Builder setSparse(boolean value) {
          bitField0_ |= 0x00000001;
          sparse_ = value;
          onChanged();
          return this;
        }
        /**
         * <code>required bool sparse = 1;</code>
         */
        public Builder clearSparse() {
          bitField0_ = (bitField0_ & ~0x00000001);
          sparse_ = false;
          onChanged();
          return this;
        }

        private java.util.List<java.lang.Double> data_ = java.util.Collections.emptyList();
        private void ensureDataIsMutable() {
          if (!((bitField0_ & 0x00000002) == 0x00000002)) {
            data_ = new java.util.ArrayList<>(data_);
            bitField0_ |= 0x00000002;
           }
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public java.util.List<java.lang.Double>
            getDataList() {
          return java.util.Collections.unmodifiableList(data_);
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public int getDataCount() {
          return data_.size();
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public double getData(int index) {
          return data_.get(index);
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public Builder setData(
            int index, double value) {
          ensureDataIsMutable();
          data_.set(index, value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public Builder addData(double value) {
          ensureDataIsMutable();
          data_.add(value);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public Builder addAllData(
            java.lang.Iterable<? extends java.lang.Double> values) {
          ensureDataIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, data_);
          onChanged();
          return this;
        }
        /**
         * <code>repeated double data = 2;</code>
         */
        public Builder clearData() {
          data_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000002);
          onChanged();
          return this;
        }

        // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
      }

      static {
        defaultInstance = new Component(true);
        defaultInstance.initFields();
      }

      // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component)
    }

    public static final int COMPONENT_FIELD_NUMBER = 1;
    private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_;
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
      return component_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
        getComponentOrBuilderList() {
      return component_;
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    public int getComponentCount() {
      return component_.size();
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
      return component_.get(index);
    }
    /**
     * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
     */
    public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
        int index) {
      return component_.get(index);
    }

    private void initFields() {
      component_ = java.util.Collections.emptyList();
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      for (int i = 0; i < getComponentCount(); i++) {
        if (!getComponent(i).isInitialized()) {
          memoizedIsInitialized = 0;
          return false;
        }
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      for (Component aComponent_ : component_) {
        output.writeMessage(1, aComponent_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      for (Component aComponent_ : component_) {
        size += CodedOutputStream
                .computeMessageSize(1, aComponent_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code edu.stanford.nlp.loglinear.model.proto.ConcatVector}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVectorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.class, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Builder.class);
      }

      // Construct using edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
          getComponentFieldBuilder();
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          componentBuilder_.clear();
        }
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
      }

      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector getDefaultInstanceForType() {
        return edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance();
      }

      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector build() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector buildPartial() {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector result = new edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector(this);
        int from_bitField0_ = bitField0_;
        if (componentBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            component_ = java.util.Collections.unmodifiableList(component_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.component_ = component_;
        } else {
          result.component_ = componentBuilder_.build();
        }
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector) {
          return mergeFrom((edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector other) {
        if (other == edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.getDefaultInstance()) return this;
        if (componentBuilder_ == null) {
          if (!other.component_.isEmpty()) {
            if (component_.isEmpty()) {
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureComponentIsMutable();
              component_.addAll(other.component_);
            }
            onChanged();
          }
        } else {
          if (!other.component_.isEmpty()) {
            if (componentBuilder_.isEmpty()) {
              componentBuilder_.dispose();
              componentBuilder_ = null;
              component_ = other.component_;
              bitField0_ = (bitField0_ & ~0x00000001);
              componentBuilder_ = 
                com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders ?
                   getComponentFieldBuilder() : null;
            } else {
              componentBuilder_.addAllMessages(other.component_);
            }
          }
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        for (int i = 0; i < getComponentCount(); i++) {
          if (!getComponent(i).isInitialized()) {
            
            return false;
          }
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> component_ =
        java.util.Collections.emptyList();
      private void ensureComponentIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          component_ = new java.util.ArrayList<>(component_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> componentBuilder_;

      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> getComponentList() {
        if (componentBuilder_ == null) {
          return java.util.Collections.unmodifiableList(component_);
        } else {
          return componentBuilder_.getMessageList();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public int getComponentCount() {
        if (componentBuilder_ == null) {
          return component_.size();
        } else {
          return componentBuilder_.getCount();
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component getComponent(int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);
        } else {
          return componentBuilder_.getMessage(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.set(index, value);
          onChanged();
        } else {
          componentBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder setComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.set(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(value);
          onChanged();
        } else {
          componentBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component value) {
        if (componentBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureComponentIsMutable();
          component_.add(index, value);
          onChanged();
        } else {
          componentBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addComponent(
          int index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder builderForValue) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.add(index, builderForValue.build());
          onChanged();
        } else {
          componentBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder addAllComponent(
          java.lang.Iterable<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component> values) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, component_);
          onChanged();
        } else {
          componentBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder clearComponent() {
        if (componentBuilder_ == null) {
          component_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          componentBuilder_.clear();
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public Builder removeComponent(int index) {
        if (componentBuilder_ == null) {
          ensureComponentIsMutable();
          component_.remove(index);
          onChanged();
        } else {
          componentBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder getComponentBuilder(
          int index) {
        return getComponentFieldBuilder().getBuilder(index);
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder getComponentOrBuilder(
          int index) {
        if (componentBuilder_ == null) {
          return component_.get(index);  } else {
          return componentBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<? extends edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
           getComponentOrBuilderList() {
        if (componentBuilder_ != null) {
          return componentBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(component_);
        }
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder() {
        return getComponentFieldBuilder().addBuilder(
            edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder addComponentBuilder(
          int index) {
        return getComponentFieldBuilder().addBuilder(
            index, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.getDefaultInstance());
      }
      /**
       * <code>repeated .edu.stanford.nlp.loglinear.model.proto.ConcatVector.Component component = 1;</code>
       */
      public java.util.List<edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder> 
           getComponentBuilderList() {
        return getComponentFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilder<
          edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.Component.Builder, edu.stanford.nlp.loglinear.model.proto.ConcatVectorProto.ConcatVector.ComponentOrBuilder> 
          getComponentFieldBuilder() {
        if (componentBuilder_ == null) {
          componentBuilder_ = new com.google.protobuf.RepeatedFieldBuilder<>(
                  component_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          component_ = null;
        }
        return componentBuilder_;
      }

      // @@protoc_insertion_point(builder_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
    }

    static {
      defaultInstance = new ConcatVector(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:edu.stanford.nlp.loglinear.model.proto.ConcatVector)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\022ConcatVector.proto\022&edu.stanford.nlp.l" +
      "oglinear.model.proto\"\214\001\n\014ConcatVector\022Q\n" +
      "\tcomponent\030\001 \003(\0132>.edu.stanford.nlp.logl" +
      "inear.model.proto.ConcatVector.Component" +
      "\032)\n\tComponent\022\016\n\006sparse\030\001 \002(\010\022\014\n\004data\030\002 " +
      "\003(\001B;\n&edu.stanford.nlp.loglinear.model." +
      "protoB\021ConcatVectorProto"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor,
        new java.lang.String[] { "Component", });
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor =
      internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_descriptor.getNestedTypes().get(0);
    internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_edu_stanford_nlp_loglinear_model_proto_ConcatVector_Component_descriptor,
        new java.lang.String[] { "Sparse", "Data", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
